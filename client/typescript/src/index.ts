
// Code generated by @open-rpc/generator DO NOT EDIT.
import { RequestManager, PostMessageWindowTransport, PostMessageIframeTransport, WebSocketTransport, HTTPTransport, Client, JSONRPCError } from "@open-rpc/client-js";
import _ from "lodash";
import { OpenrpcDocument as OpenRPC, MethodObject, ContentDescriptorObject } from "@open-rpc/meta-schema";
import { MethodCallValidator, MethodNotFoundError } from "@open-rpc/schema-utils-js";

export type StringDoaGddGA = string;
/**
 *
 * Hex representation of a variable length byte array
 *
 */
export type Bytes = string;
/**
 *
 * The hex representation of the Keccak 256 of the RLP encoded block
 *
 */
export type BlockHash = string;
export type BooleanVyG3AETh = boolean;
/**
 *
 * Hex representation of a Keccak 256 hash
 *
 */
export type Keccak = string;
/**
 *
 * Null
 *
 */
export type Null = null;
/**
 *
 * The block hash or null when its the pending block
 *
 */
export type BlockHashOrNull = Keccak | Null;
/**
 *
 * The hex representation of the block's height
 *
 */
export type BlockNumber = string;
/**
 *
 * The block number or null when its the pending block
 *
 */
export type BlockNumberOrNull = BlockNumber | Null;
/**
 *
 * The sender of the transaction
 *
 */
export type From = string;
/**
 *
 * The gas limit provided by the sender in Wei
 *
 */
export type TransactionGas = string;
/**
 *
 * The gas price willing to be paid by the sender in Wei
 *
 */
export type TransactionGasPrice = string;
/**
 *
 * Keccak 256 Hash of the RLP encoding of a transaction
 *
 */
export type TransactionHash = string;
/**
 *
 * The data field sent with the transaction
 *
 */
export type TransactionInput = string;
/**
 *
 * The total number of prior transactions made by the sender
 *
 */
export type TransactionNonce = string;
export type Address = string;
/**
 *
 * Destination address of the transaction. Null if it was a contract create.
 *
 */
export type To = Address | Null;
/**
 *
 * Hex representation of the integer
 *
 */
export type Integer = string;
/**
 *
 * The index of the transaction. null when its pending
 *
 */
export type TransactionIndex = Integer | Null;
/**
 *
 * Value of Ether being transferred in Wei
 *
 */
export type TransactionValue = string;
/**
 *
 * ECDSA recovery id
 *
 */
export type TransactionSigV = string;
/**
 *
 * ECDSA signature r
 *
 */
export type TransactionSigR = string;
/**
 *
 * ECDSA signature s
 *
 */
export type TransactionSigS = string;
/**
 *
 * The optional block height description
 *
 */
export type BlockNumberTag = "earliest" | "latest" | "pending";
/**
 *
 * List of contract addresses from which to monitor events
 *
 */
export type Addresses = Address[];
export type OneOrArrayOfAddresses = Address | Addresses;
/**
 *
 * 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))
 *
 */
export type Topic = string;
/**
 *
 * Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.
 *
 */
export type LogTopics = Topic[];
/**
 *
 * The key used to get the storage slot in its account tree.
 *
 */
export type StorageProofKey = string;
export interface ObjectHAgrRKSz { [key: string]: any; }
export type NumberHo1ClIqD = number;
export type AnyRoIkom5S = any;
export interface ObjectOfNumberHo1ClIqDP3MZbLxO {
  fixeddifficulty?: NumberHo1ClIqD;
  [k: string]: any;
}
export interface ObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3 {
  chainId?: NumberHo1ClIqD;
  petersburgBlock?: NumberHo1ClIqD;
  contractSizeLimit?: NumberHo1ClIqD;
  ethash?: ObjectOfNumberHo1ClIqDP3MZbLxO;
  [k: string]: any;
}
export interface ObjectOfNumberHo1ClIqDStringDoaGddGAStringDoaGddGANumberHo1ClIqDObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3XR5KPMFa {
  config?: ObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3;
  difficulty?: NumberHo1ClIqD;
  genesis?: StringDoaGddGA;
  head?: StringDoaGddGA;
  network?: NumberHo1ClIqD;
  [k: string]: any;
}
export interface ObjectOfObjectOfNumberHo1ClIqDStringDoaGddGAStringDoaGddGANumberHo1ClIqDObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3XR5KPMFaJWaN3O44 {
  eth?: ObjectOfNumberHo1ClIqDStringDoaGddGAStringDoaGddGANumberHo1ClIqDObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3XR5KPMFa;
  [k: string]: any;
}
export interface ObjectOfBooleanVyG3AEThNumberHo1ClIqDYfgAYYtD {
  index?: NumberHo1ClIqD;
  success?: BooleanVyG3AETh;
  [k: string]: any;
}
export interface ObjectOfBooleanVyG3AEThNumberHo1ClIqDStringDoaGddGA6WRAEyNO {
  index?: NumberHo1ClIqD;
  success?: BooleanVyG3AETh;
  errorMessage?: StringDoaGddGA;
  [k: string]: any;
}
export type OneOfObjectOfBooleanVyG3AEThNumberHo1ClIqDYfgAYYtDObjectOfBooleanVyG3AEThNumberHo1ClIqDStringDoaGddGA6WRAEyNO7I8Jk1Ft = ObjectOfBooleanVyG3AEThNumberHo1ClIqDYfgAYYtD | ObjectOfBooleanVyG3AEThNumberHo1ClIqDStringDoaGddGA6WRAEyNO;
/**
 *
 * A number only to be used once
 *
 */
export type Nonce = string;
export type NonceOrNull = Nonce | Null;
/**
 *
 * Keccak hash of the uncles data in the block
 *
 */
export type BlockShaUncles = string;
/**
 *
 * The bloom filter for the logs of the block or null when its the pending block
 *
 */
export type BlockLogsBloom = string;
/**
 *
 * The root of the transactions trie of the block.
 *
 */
export type BlockTransactionsRoot = string;
/**
 *
 * The root of the final state trie of the block
 *
 */
export type BlockStateRoot = string;
/**
 *
 * The root of the receipts trie of the block
 *
 */
export type BlockReceiptsRoot = string;
export type AddressOrNull = Address | Null;
/**
 *
 * Integer of the difficulty for this block
 *
 */
export type BlockDifficulty = string;
/**
 *
 * Integer of the total difficulty of the chain until this block
 *
 */
export type BlockTotalDifficulty = Integer | Null;
/**
 *
 * The 'extra data' field of this block
 *
 */
export type BlockExtraData = string;
/**
 *
 * Integer the size of this block in bytes
 *
 */
export type BlockSize = string;
/**
 *
 * The maximum gas allowed in this block
 *
 */
export type BlockGasLimit = string;
/**
 *
 * The total used gas by all transactions in this block
 *
 */
export type BlockGasUsed = string;
/**
 *
 * The unix timestamp for when the block was collated
 *
 */
export type BlockTimeStamp = string;
export interface Transaction {
  blockHash?: BlockHashOrNull;
  blockNumber?: BlockNumberOrNull;
  from?: From;
  gas: TransactionGas;
  gasPrice: TransactionGasPrice;
  hash?: TransactionHash;
  input?: TransactionInput;
  nonce: TransactionNonce;
  to?: To;
  transactionIndex?: TransactionIndex;
  value?: TransactionValue;
  v?: TransactionSigV;
  r?: TransactionSigR;
  s?: TransactionSigS;
  [k: string]: any;
}
export type TransactionOrTransactionHash = Transaction | TransactionHash;
/**
 *
 * Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter
 *
 */
export type TransactionsOrHashes = TransactionOrTransactionHash[];
/**
 *
 * Block hash of the RLP encoding of an uncle block
 *
 */
export type UncleHash = string;
/**
 *
 * Array of uncle hashes
 *
 */
export type UncleHashes = UncleHash[];
/**
 *
 * The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.
 *
 */
export interface Block {
  number?: BlockNumberOrNull;
  hash?: BlockHashOrNull;
  parentHash?: BlockHash;
  nonce?: NonceOrNull;
  sha3Uncles?: BlockShaUncles;
  logsBloom?: BlockLogsBloom;
  transactionsRoot?: BlockTransactionsRoot;
  stateRoot?: BlockStateRoot;
  receiptsRoot?: BlockReceiptsRoot;
  miner?: AddressOrNull;
  difficulty?: BlockDifficulty;
  totalDifficulty?: BlockTotalDifficulty;
  extraData?: BlockExtraData;
  size?: BlockSize;
  gasLimit?: BlockGasLimit;
  gasUsed?: BlockGasUsed;
  timestamp?: BlockTimeStamp;
  transactions?: TransactionsOrHashes;
  uncles?: UncleHashes;
  [k: string]: any;
}
export interface ObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQ {
  pc?: NumberHo1ClIqD;
  op?: StringDoaGddGA;
  gas?: NumberHo1ClIqD;
  gasCost?: NumberHo1ClIqD;
  depth?: NumberHo1ClIqD;
  stack?: ObjectHAgrRKSz;
  memory?: ObjectHAgrRKSz;
  storage?: BooleanVyG3AETh;
  [k: string]: any;
}
export type UnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9 = ObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQ[];
/**
 *
 * Sender of the transaction
 *
 */
export type LogAddress = string;
/**
 *
 * The data/input string sent along with the transaction
 *
 */
export type LogData = string;
/**
 *
 * The index of the event within its transaction, null when its pending
 *
 */
export type LogIndex = string;
/**
 *
 * Whether or not the log was orphaned off the main chain
 *
 */
export type LogIsRemoved = boolean;
/**
 *
 * An indexed event generated during a transaction
 *
 */
export interface Log {
  address?: LogAddress;
  blockHash?: BlockHash;
  blockNumber?: BlockNumber;
  data?: LogData;
  logIndex?: LogIndex;
  removed?: LogIsRemoved;
  topics?: LogTopics;
  transactionHash?: TransactionHash;
  transactionIndex?: TransactionIndex;
  [k: string]: any;
}
/**
 *
 * The contract address created, if the transaction was a contract creation, otherwise null
 *
 */
export type ReceiptContractAddress = Address | Null;
/**
 *
 * The gas units used by the transaction
 *
 */
export type ReceiptCumulativeGasUsed = string;
/**
 *
 * The total gas used by the transaction
 *
 */
export type ReceiptGasUsed = string;
/**
 *
 * An array of all the logs triggered during the transaction
 *
 */
export type Logs = Log[];
/**
 *
 * A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series
 *
 */
export type BloomFilter = string;
/**
 *
 * The intermediate stateRoot directly after transaction execution.
 *
 */
export type ReceiptPostTransactionState = string;
/**
 *
 * Whether or not the transaction threw an error.
 *
 */
export type ReceiptStatus = boolean;
/**
 *
 * The receipt of a transaction
 *
 */
export interface Receipt {
  blockHash: BlockHash;
  blockNumber: BlockNumber;
  contractAddress: ReceiptContractAddress;
  cumulativeGasUsed: ReceiptCumulativeGasUsed;
  from: From;
  gasUsed: ReceiptGasUsed;
  logs: Logs;
  logsBloom: BloomFilter;
  to: To;
  transactionHash: TransactionHash;
  transactionIndex: TransactionIndex;
  postTransactionState?: ReceiptPostTransactionState;
  status?: ReceiptStatus;
  [k: string]: any;
}
/**
 *
 * The address of the account or contract of the request
 *
 */
export type ProofAccountAddress = string;
/**
 *
 * An individual node used to prove a path down a merkle-patricia-tree
 *
 */
export type ProofNode = string;
/**
 *
 * The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value
 *
 */
export type ProofNodes = ProofNode[];
/**
 *
 * The Ether balance of the account or contract of the request
 *
 */
export type ProofAccountBalance = string;
/**
 *
 * The code hash of the contract of the request (keccak(NULL) if external account)
 *
 */
export type ProofAccountCodeHash = string;
/**
 *
 * The transaction count of the account or contract of the request
 *
 */
export type ProofAccountNonce = string;
/**
 *
 * The storage hash of the contract of the request (keccak(rlp(NULL)) if external account)
 *
 */
export type ProofAccountStorageHash = string;
/**
 *
 * The value of the storage slot in its account tree
 *
 */
export type StorageProofValue = string;
/**
 *
 * Object proving a relationship of a storage value to an account's storageHash.
 *
 */
export interface StorageProof {
  key?: StorageProofKey;
  value?: StorageProofValue;
  proof?: ProofNodes;
  [k: string]: any;
}
/**
 *
 * Current block header PoW hash.
 *
 */
export type StorageProofSet = StorageProof[];
/**
 *
 * The merkle proofs of the specified account connecting them to the blockhash of the block specified
 *
 */
export interface ProofAccount {
  address?: ProofAccountAddress;
  accountProof?: ProofNodes;
  balance?: ProofAccountBalance;
  codeHash?: ProofAccountCodeHash;
  nonce?: ProofAccountNonce;
  storageHash?: ProofAccountStorageHash;
  storageProof?: StorageProofSet;
  [k: string]: any;
}
/**
 *
 * Current block header PoW hash.
 *
 */
export type PowHash = string;
/**
 *
 * The seed hash used for the DAG.
 *
 */
export type SeedHash = string;
/**
 *
 * The boundary condition ('target'), 2^256 / difficulty.
 *
 */
export type Difficulty = string;
/**
 *
 * Block at which the import started (will only be reset, after the sync reached his head)
 *
 */
export type SyncingDataStartingBlock = string;
/**
 *
 * The current block, same as eth_blockNumber
 *
 */
export type SyncingDataCurrentBlock = string;
/**
 *
 * The estimated highest block
 *
 */
export type SyncingDataHighestBlock = string;
/**
 *
 * The known states
 *
 */
export type SyncingDataKnownStates = string;
/**
 *
 * The pulled states
 *
 */
export type SyncingDataPulledStates = string;
/**
 *
 * An object with sync status data
 *
 */
export interface SyncingData {
  startingBlock?: SyncingDataStartingBlock;
  currentBlock?: SyncingDataCurrentBlock;
  highestBlock?: SyncingDataHighestBlock;
  knownStates?: SyncingDataKnownStates;
  pulledStates?: SyncingDataPulledStates;
  [k: string]: any;
}
export interface ObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAOB3LBxqo {
  address?: StringDoaGddGA;
  proposedBlockCount?: StringDoaGddGA;
  lastProposedBlockNumber?: StringDoaGddGA;
  [k: string]: any;
}
export interface ObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbD {
  host?: StringDoaGddGA;
  port?: NumberHo1ClIqD;
  [k: string]: any;
}
export type AnyC5RfZsDE = any;
export interface ObjectOfStringDoaGddGAStringDoaGddGAPPxYGqD4 {
  gasUsed?: StringDoaGddGA;
  output?: StringDoaGddGA;
  [k: string]: any;
}
export type AnyURRrakAO = any;
export interface ObjectOfStringDoaGddGANumberHo1ClIqDStringDoaGddGAAnyURRrakAONumberHo1ClIqDObjectOfStringDoaGddGAStringDoaGddGAPPxYGqD4NumberHo1ClIqDStringDoaGddGAAnyC5RfZsDECPSxpeEe {
  action?: AnyC5RfZsDE;
  blockHash?: StringDoaGddGA;
  blockNumber?: NumberHo1ClIqD;
  result?: ObjectOfStringDoaGddGAStringDoaGddGAPPxYGqD4;
  subtraces?: NumberHo1ClIqD;
  traceAddress?: AnyURRrakAO;
  transactionHash?: StringDoaGddGA;
  transactionPosition?: NumberHo1ClIqD;
  type?: StringDoaGddGA;
  [k: string]: any;
}
export type StringLRO9Qa9G = string;
export type StringSjpfeutu = string;
export type StringAjybXYep = string;
export interface ObjectTH0UsnUy { [key: string]: any; }
export type NumberYlVY4Lgn = number;
export type NumberNLXmAkTQ = number;
export type NumberH3AdBvun = number;
export interface ObjectOfBooleanVyG3AEThTransactionHashBlockTimeStampUMnCtlmD {
  hash?: TransactionHash;
  isReceivedFromLocalSource?: BooleanVyG3AETh;
  addedToPoolAt?: BlockTimeStamp;
  [k: string]: any;
}
export type Data = string;
export type UnorderedSetOfStringDoaGddGADvj0XlFa = StringDoaGddGA[];
export type UnorderedSetOfBytes79FVLUqo = Bytes[];
export interface ObjectOfBlockHashBooleanVyG3AEThTooJ8Tvr {
  txHash?: BlockHash;
  disableMemory?: BooleanVyG3AETh;
  [k: string]: any;
}
export interface ObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0Rp {
  disableStorage?: BooleanVyG3AETh;
  disableMemory?: BooleanVyG3AETh;
  disableStack ?: BooleanVyG3AETh;
  [k: string]: any;
}
export type BlockNumberOrTag = BlockNumber | BlockNumberTag;
export type IsTransactionsIncluded = boolean;
/**
 *
 * A filter used to monitor the blockchain for log/events
 *
 */
export interface Filter {
  fromBlock?: BlockNumber;
  toBlock?: BlockNumber;
  address?: OneOrArrayOfAddresses;
  topics?: LogTopics;
  [k: string]: any;
}
/**
 *
 * Hex representation of the storage slot where the variable exists
 *
 */
export type Position = string;
/**
 *
 * A storage key is indexed from the solidity compiler by the order it is declared. For mappings it uses the keccak of the mapping key with its position (and recursively for X-dimensional mappings)
 *
 */
export type StorageKeys = any;
/**
 *
 * An identifier used to reference the filter.
 *
 */
export type FilterId = string;
/**
 *
 * Hex representation of a 256 bit unit of data
 *
 */
export type DataWord = string;
/**
 *
 * The mix digest.
 *
 */
export type MixHash = string;
export type UnorderedSetOfObjectHAgrRKSzAfoBnX12 = ObjectHAgrRKSz[];
/**
 *
 * The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value
 *
 */
export type UnorderedSetOfStringDoaGddGA8UEdgiIy = StringDoaGddGA[];
/**
 *
 * request options object with the following fields
 *
 */
export type Any4WfdmhjC = any;
export interface ObjectOfLogTopicsStringDoaGddGAStringDoaGddGAAddressesHNbHzH6Q {
  fromBlock?: StringDoaGddGA;
  toBlock?: StringDoaGddGA;
  addresses?: Addresses;
  topics?: LogTopics;
  [k: string]: any;
}
export interface ObjectOfObjectHAgrRKSzObjectHAgrRKSzObjectHAgrRKSzW2ZLpdal {
  from?: ObjectHAgrRKSz;
  gas?: ObjectHAgrRKSz;
  nonce?: ObjectHAgrRKSz;
  [k: string]: any;
}
export type ClientVersion = string;
export interface ObjectOfObjectOfObjectOfNumberHo1ClIqDStringDoaGddGAStringDoaGddGANumberHo1ClIqDObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3XR5KPMFaJWaN3O44AnyRoIkom5SStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGA3PiD9Rs8 {
  enode?: StringDoaGddGA;
  listenAddr?: StringDoaGddGA;
  ip?: StringDoaGddGA;
  name?: StringDoaGddGA;
  id?: StringDoaGddGA;
  ports?: AnyRoIkom5S;
  protocols?: ObjectOfObjectOfNumberHo1ClIqDStringDoaGddGAStringDoaGddGANumberHo1ClIqDObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3XR5KPMFaJWaN3O44;
  [k: string]: any;
}
/**
 *
 * log bloom index details
 *
 */
export interface ObjectOfBlockNumberBooleanVyG3AEThBlockNumberBlockNumberBooleanVyG3AEThJBau9MS3 {
  startBlock?: BlockNumber;
  endBlock?: BlockNumber;
  currentBlock?: BlockNumber;
  requestAccepted?: BooleanVyG3AETh;
  caching?: BooleanVyG3AETh;
  [k: string]: any;
}
export interface ObjectOfStringDoaGddGASkRnsoOb {
  Status?: StringDoaGddGA;
  [k: string]: any;
}
export interface ObjectOfStringDoaGddGAObjectHAgrRKSz9BcNyMsw {
  addressMap?: ObjectHAgrRKSz;
  nextKey?: StringDoaGddGA;
  [k: string]: any;
}
export type UnorderedSetOfOneOfObjectOfBooleanVyG3AEThNumberHo1ClIqDYfgAYYtDObjectOfBooleanVyG3AEThNumberHo1ClIqDStringDoaGddGA6WRAEyNO7I8Jk1FtsWymiLqR = OneOfObjectOfBooleanVyG3AEThNumberHo1ClIqDYfgAYYtDObjectOfBooleanVyG3AEThNumberHo1ClIqDStringDoaGddGA6WRAEyNO7I8Jk1Ft[];
export type UnorderedSetOfBlockpbTVKCwO = Block[];
export interface ObjectOfObjectHAgrRKSzStringDoaGddGA43SNjuzX {
  storage?: ObjectHAgrRKSz;
  nextKey?: StringDoaGddGA;
  [k: string]: any;
}
export interface ObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFC {
  gas?: NumberHo1ClIqD;
  failed?: BooleanVyG3AETh;
  returnValue?: StringDoaGddGA;
  structLogs?: UnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9;
  [k: string]: any;
}
/**
 *
 * List of addresses
 *
 */
export type UnorderedSetOfAddressMvq5Ie3U = Address[];
export type ChainId = string;
/**
 *
 * Integer of the current gas price
 *
 */
export type GasPriceResult = string;
export type IntegerOrNull = Integer | Null;
export type BlockOrNull = Block | Null;
export type SetOfLogs = Log[];
export type TransactionOrNull = Transaction | Null;
export type TransactionReceiptOrNull = Receipt | Null;
export type ProofAccountOrNull = ProofAccount | Null;
export type GetWorkResults = [PowHash, SeedHash, Difficulty];
export type LogResult = Log[];
export type IsSyncingResult = SyncingData | BooleanVyG3AETh;
export type UnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAOB3LBxqosYoqQpCx = ObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAOB3LBxqo[];
export interface ObjectOfObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDNHEHhtSb {
  jsonrpc?: ObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbD;
  p2p?: ObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbD;
  metrics?: ObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbD;
  [k: string]: any;
}
export type UnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDStringDoaGddGAAnyURRrakAONumberHo1ClIqDObjectOfStringDoaGddGAStringDoaGddGAPPxYGqD4NumberHo1ClIqDStringDoaGddGAAnyC5RfZsDECPSxpeEerefHy7BH = ObjectOfStringDoaGddGANumberHo1ClIqDStringDoaGddGAAnyURRrakAONumberHo1ClIqDObjectOfStringDoaGddGAStringDoaGddGAPPxYGqD4NumberHo1ClIqDStringDoaGddGAAnyC5RfZsDECPSxpeEe[];
export interface ObjectDIJRwHAW { [key: string]: any; }
export interface ObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGALogsStringDoaGddGAStringDoaGddGAStringDoaGddGAUvMWg9Iu {
  contractAddress?: StringDoaGddGA;
  from?: StringDoaGddGA;
  output?: StringDoaGddGA;
  commitmentHash?: StringDoaGddGA;
  transactionHash?: StringDoaGddGA;
  privateFrom?: StringDoaGddGA;
  privacyGroupId?: StringDoaGddGA;
  status?: StringDoaGddGA;
  logs?: Logs;
  [k: string]: any;
}
export interface ObjectCiX8Sy14 { [key: string]: any; }
export type Transactions = ObjectOfBooleanVyG3AEThTransactionHashBlockTimeStampUMnCtlmD[];
/**
 *
 * Generated! Represents an alias to any of the provided schemas
 *
 */
export type AnyOfDataStringDoaGddGAStringDoaGddGAUnorderedSetOfStringDoaGddGADvj0XlFaBlockNumberBlockNumberBlockNumberBlockNumberBlockNumberStringDoaGddGABlockHashIntegerBlockHashIntegerUnorderedSetOfBytes79FVLUqoBlockHashObjectOfBlockHashBooleanVyG3AEThTooJ8TvrBlockHashBlockHashIntegerBlockHashStringDoaGddGAIntegerTransactionHashObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0RpUnorderedSetOfBytes79FVLUqoObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0RpBlockHashObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0RpBlockNumberObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0RpTransactionBlockNumberOrTagTransactionAddressBlockNumberBlockHashIsTransactionsIncludedBlockNumberOrTagIsTransactionsIncludedBlockHashBlockNumberOrTagAddressBlockNumberFilterAddressPositionBlockNumberOrTagBlockHashIntegerBlockNumberOrTagIntegerTransactionHashAddressBlockNumberOrTagTransactionHashBlockHashIntegerBlockNumberIntegerBlockHashBlockNumberOrTagAddressStorageKeysBlockNumberOrTagFilterFilterIdFilterIdFilterIdBytesDataWordDataWordNoncePowHashMixHashStringDoaGddGAUnorderedSetOfObjectHAgrRKSzAfoBnX12StringDoaGddGAAddressBlockNumberBlockNumberBlockHashBlockNumberOrTagAddressBooleanVyG3AEThBlockNumberBlockNumberUnorderedSetOfStringDoaGddGA8UEdgiIyStringDoaGddGATransactionBlockNumberOrTagAny4WfdmhjCStringDoaGddGABytesUnorderedSetOfStringDoaGddGADvj0XlFaStringDoaGddGAAddressBlockNumberAddressStringDoaGddGAUnorderedSetOfStringDoaGddGADvj0XlFaStringDoaGddGAFilterIdStringDoaGddGAFilterIdStringDoaGddGAFilterIdTransactionHashStringDoaGddGAAddressTransactionStringDoaGddGAObjectOfLogTopicsStringDoaGddGAStringDoaGddGAAddressesHNbHzH6QStringDoaGddGABytesStringDoaGddGABlockNumberIntegerObjectOfObjectHAgrRKSzObjectHAgrRKSzObjectHAgrRKSzW2ZLpdalClientVersionKeccakBooleanVyG3AEThStringDoaGddGAObjectOfObjectOfObjectOfNumberHo1ClIqDStringDoaGddGAStringDoaGddGANumberHo1ClIqDObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3XR5KPMFaJWaN3O44AnyRoIkom5SStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGA3PiD9Rs8ObjectHAgrRKSzObjectOfBlockNumberBooleanVyG3AEThBlockNumberBlockNumberBooleanVyG3AEThJBau9MS3ObjectOfStringDoaGddGASkRnsoObObjectOfStringDoaGddGASkRnsoObBooleanVyG3AEThObjectOfStringDoaGddGAObjectHAgrRKSz9BcNyMswUnorderedSetOfOneOfObjectOfBooleanVyG3AEThNumberHo1ClIqDYfgAYYtDObjectOfBooleanVyG3AEThNumberHo1ClIqDStringDoaGddGA6WRAEyNO7I8Jk1FtsWymiLqRUnorderedSetOfBlockpbTVKCwOStringDoaGddGAStringDoaGddGAObjectOfObjectHAgrRKSzStringDoaGddGA43SNjuzXObjectHAgrRKSzObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFCObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFCObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFCObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFCUnorderedSetOfAddressMvq5Ie3UBlockNumberOrTagBytesChainIdAddressIntegerGasPriceResultIntegerOrNullBlockOrNullBlockOrNullIntegerOrNullIntegerOrNullBytesSetOfLogsDataWordTransactionOrNullTransactionOrNullTransactionOrNullNonceOrNullTransactionReceiptOrNullBlockOrNullBlockOrNullIntegerOrNullIntegerOrNullProofAccountOrNullGetWorkResultsIntegerBooleanVyG3AEThFilterIdIntegerLogResultSetOfLogsBooleanVyG3AEThFilterIdKeccakBooleanVyG3AEThBooleanVyG3AEThIsSyncingResultStringDoaGddGABooleanVyG3AEThBooleanVyG3AEThObjectHAgrRKSzUnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAOB3LBxqosYoqQpCxAddressesAddressesBooleanVyG3AEThStringDoaGddGABooleanVyG3AEThStringDoaGddGAObjectOfObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDNHEHhtSbStringDoaGddGAUnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDStringDoaGddGAAnyURRrakAONumberHo1ClIqDObjectOfStringDoaGddGAStringDoaGddGAPPxYGqD4NumberHo1ClIqDStringDoaGddGAAnyC5RfZsDECPSxpeEerefHy7BHUnorderedSetOfObjectHAgrRKSzAfoBnX12BytesStringDoaGddGAStringDoaGddGAKeccakObjectDIJRwHAWBytesIntegerLogsLogsLogsAddressTransactionIntegerObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGALogsStringDoaGddGAStringDoaGddGAStringDoaGddGAUvMWg9IuBytesBooleanVyG3AEThStringDoaGddGATransactionObjectCiX8Sy14Transactions = Data | StringDoaGddGA | UnorderedSetOfStringDoaGddGADvj0XlFa | BlockNumber | BlockHash | Integer | UnorderedSetOfBytes79FVLUqo | ObjectOfBlockHashBooleanVyG3AEThTooJ8Tvr | TransactionHash | ObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0Rp | Transaction | BlockNumberOrTag | Address | IsTransactionsIncluded | Filter | Position | StorageKeys | FilterId | Bytes | DataWord | Nonce | PowHash | MixHash | UnorderedSetOfObjectHAgrRKSzAfoBnX12 | BooleanVyG3AETh | UnorderedSetOfStringDoaGddGA8UEdgiIy | Any4WfdmhjC | ObjectOfLogTopicsStringDoaGddGAStringDoaGddGAAddressesHNbHzH6Q | ObjectOfObjectHAgrRKSzObjectHAgrRKSzObjectHAgrRKSzW2ZLpdal | ClientVersion | Keccak | ObjectOfObjectOfObjectOfNumberHo1ClIqDStringDoaGddGAStringDoaGddGANumberHo1ClIqDObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3XR5KPMFaJWaN3O44AnyRoIkom5SStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGA3PiD9Rs8 | ObjectHAgrRKSz | ObjectOfBlockNumberBooleanVyG3AEThBlockNumberBlockNumberBooleanVyG3AEThJBau9MS3 | ObjectOfStringDoaGddGASkRnsoOb | ObjectOfStringDoaGddGAObjectHAgrRKSz9BcNyMsw | UnorderedSetOfOneOfObjectOfBooleanVyG3AEThNumberHo1ClIqDYfgAYYtDObjectOfBooleanVyG3AEThNumberHo1ClIqDStringDoaGddGA6WRAEyNO7I8Jk1FtsWymiLqR | UnorderedSetOfBlockpbTVKCwO | ObjectOfObjectHAgrRKSzStringDoaGddGA43SNjuzX | ObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFC | UnorderedSetOfAddressMvq5Ie3U | ChainId | GasPriceResult | IntegerOrNull | BlockOrNull | SetOfLogs | TransactionOrNull | NonceOrNull | TransactionReceiptOrNull | ProofAccountOrNull | GetWorkResults | LogResult | IsSyncingResult | UnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAOB3LBxqosYoqQpCx | Addresses | ObjectOfObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDNHEHhtSb | UnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDStringDoaGddGAAnyURRrakAONumberHo1ClIqDObjectOfStringDoaGddGAStringDoaGddGAPPxYGqD4NumberHo1ClIqDStringDoaGddGAAnyC5RfZsDECPSxpeEerefHy7BH | ObjectDIJRwHAW | Logs | ObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGALogsStringDoaGddGAStringDoaGddGAStringDoaGddGAUvMWg9Iu | ObjectCiX8Sy14 | Transactions;
export type Web3ClientVersion = () => Promise<ClientVersion>;
export type Web3Sha3 = (data: Data) => Promise<Keccak>;
export type AdminAddPeer = (enodeURL: StringDoaGddGA) => Promise<BooleanVyG3AETh>;
export type AdminChangeLogLevel = (level: StringDoaGddGA, log_filter: UnorderedSetOfStringDoaGddGADvj0XlFa) => Promise<StringDoaGddGA>;
export type AdminNodeInfo = () => Promise<ObjectOfObjectOfObjectOfNumberHo1ClIqDStringDoaGddGAStringDoaGddGANumberHo1ClIqDObjectOfNumberHo1ClIqDObjectOfNumberHo1ClIqDP3MZbLxONumberHo1ClIqDNumberHo1ClIqDDAEiGqn3XR5KPMFaJWaN3O44AnyRoIkom5SStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGA3PiD9Rs8>;
export type AdminPeers = () => Promise<ObjectHAgrRKSz>;
export type AdminGenerateLogBloomCache = (startBlock: BlockNumber, endBlock: BlockNumber) => Promise<ObjectOfBlockNumberBooleanVyG3AEThBlockNumberBlockNumberBooleanVyG3AEThJBau9MS3>;
export type AdminLogsRemoveCache = (fromBlock: BlockNumber, toBlock: BlockNumber) => Promise<ObjectOfStringDoaGddGASkRnsoOb>;
export type AdminLogsRepairCache = (startBlock: BlockNumber) => Promise<ObjectOfStringDoaGddGASkRnsoOb>;
export type AdminRemovePeer = (enodeURL: StringDoaGddGA) => Promise<BooleanVyG3AETh>;
export type DebugAccountRange = (blockHashOrNumber: BlockHash, txIndex: Integer, address: BlockHash, limit: Integer) => Promise<ObjectOfStringDoaGddGAObjectHAgrRKSz9BcNyMsw>;
export type DebugBatchSendRawTransaction = (signedTransactionData: UnorderedSetOfBytes79FVLUqo) => Promise<UnorderedSetOfOneOfObjectOfBooleanVyG3AEThNumberHo1ClIqDYfgAYYtDObjectOfBooleanVyG3AEThNumberHo1ClIqDStringDoaGddGA6WRAEyNO7I8Jk1FtsWymiLqR>;
export type DebugGetBadBlocks = () => Promise<UnorderedSetOfBlockpbTVKCwO>;
export type DebugStandardTraceBlockToFile = (blockHash: BlockHash, Options: ObjectOfBlockHashBooleanVyG3AEThTooJ8Tvr) => Promise<StringDoaGddGA>;
export type DebugStandardTraceBadBlockToFile = (blockHash: BlockHash) => Promise<StringDoaGddGA>;
export type DebugStorageRangeAt = (blockHash: BlockHash, txIndex: Integer, address: BlockHash, startKey: StringDoaGddGA, limit: Integer) => Promise<ObjectOfObjectHAgrRKSzStringDoaGddGA43SNjuzX>;
export type DebugMetrics = () => Promise<ObjectHAgrRKSz>;
export type DebugTraceTransaction = (transactionHash: TransactionHash, options: ObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0Rp) => Promise<ObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFC>;
export type DebugTraceBlock = (RLP of the block: UnorderedSetOfBytes79FVLUqo, options: ObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0Rp) => Promise<ObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFC>;
export type DebugTraceBlockByHash = (blockHash: BlockHash, options: ObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0Rp) => Promise<ObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFC>;
export type DebugTraceBlockByNumber = (blockNumber: BlockNumber, options: ObjectOfBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh38Nbw0Rp) => Promise<ObjectOfUnorderedSetOfObjectOfBooleanVyG3AEThObjectHAgrRKSzNumberHo1ClIqDStringDoaGddGAObjectHAgrRKSzNumberHo1ClIqDNumberHo1ClIqDNumberHo1ClIqDQbmaAfyQvLzPQIY9StringDoaGddGANumberHo1ClIqDBooleanVyG3AEThSNu44TFC>;
export type EthAccounts = () => Promise<UnorderedSetOfAddressMvq5Ie3U>;
export type EthBlockNumber = () => Promise<BlockNumberOrTag>;
export type EthCall = (transaction: Transaction, blockNumber: BlockNumberOrTag) => Promise<Bytes>;
export type EthChainId = () => Promise<ChainId>;
export type EthCoinbase = () => Promise<Address>;
export type EthEstimateGas = (transaction: Transaction) => Promise<Integer>;
export type EthGasPrice = () => Promise<GasPriceResult>;
export type EthGetBalance = (address: Address, blockNumber: BlockNumber) => Promise<IntegerOrNull>;
export type EthGetBlockByHash = (blockHash: BlockHash, includeTransactions: IsTransactionsIncluded) => Promise<BlockOrNull>;
export type EthGetBlockByNumber = (blockNumber: BlockNumberOrTag, includeTransactions: IsTransactionsIncluded) => Promise<BlockOrNull>;
export type EthGetBlockTransactionCountByHash = (blockHash: BlockHash) => Promise<IntegerOrNull>;
export type EthGetBlockTransactionCountByNumber = (blockNumber: BlockNumberOrTag) => Promise<IntegerOrNull>;
export type EthGetCode = (address: Address, blockNumber: BlockNumber) => Promise<Bytes>;
export type EthGetLogs = (filter: Filter) => Promise<SetOfLogs>;
export type EthGetStorageAt = (address: Address, key: Position, blockNumber: BlockNumberOrTag) => Promise<DataWord>;
export type EthGetTransactionByBlockHashAndIndex = (blockHash: BlockHash, index: Integer) => Promise<TransactionOrNull>;
export type EthGetTransactionByBlockNumberAndIndex = (blockNumber: BlockNumberOrTag, index: Integer) => Promise<TransactionOrNull>;
export type EthGetTransactionByHash = (transactionHash: TransactionHash) => Promise<TransactionOrNull>;
export type EthGetTransactionCount = (address: Address, blockNumber: BlockNumberOrTag) => Promise<NonceOrNull>;
export type EthGetTransactionReceipt = (transactionHash: TransactionHash) => Promise<TransactionReceiptOrNull>;
export type EthGetUncleByBlockHashAndIndex = (blockHash: BlockHash, index: Integer) => Promise<BlockOrNull>;
export type EthGetUncleByBlockNumberAndIndex = (uncleBlockNumber: BlockNumber, index: Integer) => Promise<BlockOrNull>;
export type EthGetUncleCountByBlockHash = (blockHash: BlockHash) => Promise<IntegerOrNull>;
export type EthGetUncleCountByBlockNumber = (blockNumber: BlockNumberOrTag) => Promise<IntegerOrNull>;
export type EthGetProof = (address: Address, storageKeys: StorageKeys, blockNumber: BlockNumberOrTag) => Promise<ProofAccountOrNull>;
export type EthGetWork = () => Promise<GetWorkResults>;
export type EthHashrate = () => Promise<Integer>;
export type EthMining = () => Promise<BooleanVyG3AETh>;
export type EthNewBlockFilter = () => Promise<FilterId>;
export type EthNewFilter = (filter: Filter) => Promise<Integer>;
export type EthGetFilterChanges = (filterId: FilterId) => Promise<LogResult>;
export type EthGetFilterLogs = (filterId: FilterId) => Promise<SetOfLogs>;
export type EthUninstallFilter = (filterId: FilterId) => Promise<BooleanVyG3AETh>;
export type EthNewPendingTransactionFilter = () => Promise<FilterId>;
export type EthSendRawTransaction = (signedTransactionData: Bytes) => Promise<Keccak>;
export type EthSubmitHashrate = (hashRate: DataWord, id: DataWord) => Promise<BooleanVyG3AETh>;
export type EthSubmitWork = (nonce: Nonce, powHash: PowHash, mixHash: MixHash) => Promise<BooleanVyG3AETh>;
export type EthSyncing = () => Promise<IsSyncingResult>;
export type EthSubscribe = (subscriptioName: StringDoaGddGA, optionalArguments : UnorderedSetOfObjectHAgrRKSzAfoBnX12) => Promise<StringDoaGddGA>;
export type EthUnsubscribe = (subscriptionId: StringDoaGddGA) => Promise<BooleanVyG3AETh>;
export type IbftDiscardValidatorVote = (address: Address) => Promise<BooleanVyG3AETh>;
export type IbftGetPendingVotes = () => Promise<ObjectHAgrRKSz>;
export type IbftGetSignerMetrics = (fromBlockNumber: BlockNumber, toBlockNumber: BlockNumber) => Promise<UnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAOB3LBxqosYoqQpCx>;
export type IbftGetValidatorsByBlockHash = (blockHash: BlockHash) => Promise<Addresses>;
export type IbftGetValidatorsByBlockNumber = (blockNumber: BlockNumberOrTag) => Promise<Addresses>;
export type IbftProposeValidatorVote = (address: Address, proposal: BooleanVyG3AETh) => Promise<BooleanVyG3AETh>;
export type NetEnode = () => Promise<StringDoaGddGA>;
export type NetListening = () => Promise<BooleanVyG3AETh>;
export type NetPeerCount = () => Promise<StringDoaGddGA>;
export type NetServices = () => Promise<ObjectOfObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDObjectOfNumberHo1ClIqDStringDoaGddGANWOHlwbDNHEHhtSb>;
export type NetVersion = () => Promise<StringDoaGddGA>;
export type TraceBlock = (blockNumber: BlockNumber) => Promise<UnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDStringDoaGddGAAnyURRrakAONumberHo1ClIqDObjectOfStringDoaGddGAStringDoaGddGAPPxYGqD4NumberHo1ClIqDStringDoaGddGAAnyC5RfZsDECPSxpeEerefHy7BH>;
export type TraceReplayBlockTransactions = (blockNumber: BlockNumber, options: UnorderedSetOfStringDoaGddGA8UEdgiIy) => Promise<UnorderedSetOfObjectHAgrRKSzAfoBnX12>;
export type PrivCall = (privacyGroupId: StringDoaGddGA, transaction: Transaction, blockNumber: BlockNumberOrTag) => Promise<Bytes>;
export type PrivCreatePrivacyGroup = (options: Any4WfdmhjC) => Promise<StringDoaGddGA>;
export type PrivDeletePrivacyGroup = (privacyGroupId: StringDoaGddGA) => Promise<StringDoaGddGA>;
export type PrivDistributeRawTransaction = (signedTransactionData: Bytes) => Promise<Keccak>;
export type PrivFindPrivacyGroup = (members: UnorderedSetOfStringDoaGddGADvj0XlFa) => Promise<ObjectDIJRwHAW>;
export type PrivGetCode = (privacyGroupId: StringDoaGddGA, address: Address, blockNumber: BlockNumber) => Promise<Bytes>;
export type PrivGetEeaTransactionCount = (address: Address, sender: StringDoaGddGA, recipients: UnorderedSetOfStringDoaGddGADvj0XlFa) => Promise<Integer>;
export type PrivGetFilterChanges = (privacyGroupId: StringDoaGddGA, filterId: FilterId) => Promise<Logs>;
export type PrivGetFilterLogs = (privacyGroupId: StringDoaGddGA, filterId: FilterId) => Promise<Logs>;
export type PrivGetLogs = (privacyGroupId: StringDoaGddGA, filterId: FilterId) => Promise<Logs>;
export type PrivGetPrivacyPrecompileAddress = () => Promise<Address>;
export type PrivGetPrivateTransaction = (transaction: TransactionHash) => Promise<Transaction>;
export type PrivGetTransactionCount = (privacyGroupId: StringDoaGddGA, address: Address) => Promise<Integer>;
export type PrivGetTransactionReceipt = (transaction: Transaction) => Promise<ObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGALogsStringDoaGddGAStringDoaGddGAStringDoaGddGAUvMWg9Iu>;
export type PrivNewFilter = (privacyGroupId: StringDoaGddGA, filterOptions: ObjectOfLogTopicsStringDoaGddGAStringDoaGddGAAddressesHNbHzH6Q) => Promise<Bytes>;
export type PrivUninstallFilter = (privacyGroupId: StringDoaGddGA, filterId: Bytes) => Promise<BooleanVyG3AETh>;
export type PrivDebugGetStateRoot = (privacyGroupId: StringDoaGddGA, blockNumber: BlockNumber) => Promise<StringDoaGddGA>;
export type TxpoolBesuPendingTransactions = (numResults: Integer, fields: ObjectOfObjectHAgrRKSzObjectHAgrRKSzObjectHAgrRKSzW2ZLpdal) => Promise<Transaction>;
export type TxpoolBesuStatistics = () => Promise<ObjectCiX8Sy14>;
export type TxpoolBesuTransactions = () => Promise<Transactions>;

export interface Options {
  transport: {
    type: "websocket" | "http" | "https" | "postmessagewindow" | "postmessageiframe";
    host: string;
    port: number;
    path?: string;
    protocol?: string;
  },
}

export class HyperledgerBesuJSONRPCSpecification {
  public rpc: Client;
  public static openrpcDocument: OpenRPC = {"openrpc":"1.2.4","info":{"title":"Hyperledger Besu JSON-RPC Specification","description":"A specification of the standard interface for Hyperledger Besu clients.","license":{"name":"CC0-1.0","url":"https://creativecommons.org/publicdomain/zero/1.0/legalcode"},"version":"0.0.4"},"servers":[{"name":"default local node","url":"http://localhost:8545"}],"methods":[{"name":"web3_clientVersion","description":"Returns the version of the current client","summary":"current client version","params":[],"result":{"name":"clientVersion","description":"client version","schema":{"title":"clientVersion","type":"string"}},"examples":[{"name":"Current client","params":[],"result":{"name":"node version","value":"besu/v21.7.1/linux-x86_64/adoptopenjdk-java-11"}}]},{"name":"web3_sha3","summary":"Hashes data","description":"Hashes data using the Keccak-256 algorithm","params":[{"name":"data","description":"data to hash using the Keccak-256 algorithm","summary":"data to hash","schema":{"title":"data","type":"string","pattern":"^0x[a-fA-F\\d]+$"}}],"result":{"name":"hashedData","description":"Keccak-256 hash of the given data","schema":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"}},"examples":[{"name":"sha3Example","params":[{"name":"sha3ParamExample","value":"0x68656c6c6f20776f726c00"}],"result":{"name":"sha3ResultExample","value":"0x5e39a0a66544c0668bde22d61c47a8710000ece931f13b84d3b2feb44ec96d3f"}}]},{"name":"admin_addPeer","summary":"Adds a static node.","params":[{"name":"enodeURL","required":true,"description":"enode URL of peer to add.","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"addPeerResult","description":"true if peer added or false if peer already a static node","schema":{"type":"boolean"}},"examples":[{"name":"addPeerExample","params":[{"name":"enodeURL","value":"enode://c93f69ddd83d3db3e93e5165d60b4f5d93a9731df776beee94c5f8a0c770e41bdea69094136402db0cef7af63f0aa636ff676d4a88c6d37276dfa4160c21ed5f@127.0.0.1:30303"}],"result":{"name":"addPeerResultExample","value":true}}]},{"name":"admin_changeLogLevel","summary":"Changes the log level without restarting Besu. You can change the log level for all logs, or you can change the log level for specific packages or classes.\nYou can specify only one log level per RPC call.","params":[{"name":"level","required":true,"description":"log level","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"log_filter","description":"(optional) packages or classes for which to change the log level","schema":{"type":"array","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGADvj0xlFa"}}],"result":{"name":"changeLogLevelResult","description":"Success if the log level has changed, otherwise error","schema":{"type":"string"}},"examples":[{"name":"changeLogLevelExample","params":[{"name":"level","value":"DEBUG"}],"result":{"name":"changeLogLevelResultExample","value":"Success"}}]},{"name":"admin_nodeInfo","summary":"Returns networking information about the node. The information includes general information about the node and specific information from each running Ethereum sub-protocol (for example, eth).","params":[],"result":{"name":"nodeInfoResult","description":"node object","schema":{"type":"object","properties":{"enode":{"type":"string","title":"string_doaGddGA"},"listenAddr":{"type":"string","title":"string_doaGddGA"},"ip":{"type":"string","title":"string_doaGddGA"},"name":{"type":"string","title":"string_doaGddGA"},"id":{"type":"string","title":"string_doaGddGA"},"ports":{"properties":{"discovery":{"type":"number","title":"number_Ho1clIqD"},"listener":{"type":"number","title":"number_Ho1clIqD"}},"title":"any_RoIkom5s"},"protocols":{"type":"object","properties":{"eth":{"type":"object","properties":{"config":{"type":"object","properties":{"chainId":{"type":"number","title":"number_Ho1clIqD"},"petersburgBlock":{"type":"number","title":"number_Ho1clIqD"},"contractSizeLimit":{"type":"number","title":"number_Ho1clIqD"},"ethash":{"type":"object","properties":{"fixeddifficulty":{"type":"number","title":"number_Ho1clIqD"}},"title":"objectOf_number_Ho1clIqD_P3MZbLxO"}},"title":"objectOf_number_Ho1clIqD_objectOf_number_Ho1clIqD_P3MZbLxO_number_Ho1clIqD_number_Ho1clIqD_DAEiGqn3"},"difficulty":{"type":"number","title":"number_Ho1clIqD"},"genesis":{"type":"string","title":"string_doaGddGA"},"head":{"type":"string","title":"string_doaGddGA"},"network":{"type":"number","title":"number_Ho1clIqD"}},"title":"objectOf_number_Ho1clIqD_string_doaGddGA_string_doaGddGA_number_Ho1clIqD_objectOf_number_Ho1clIqD_objectOf_number_Ho1clIqD_P3MZbLxO_number_Ho1clIqD_number_Ho1clIqD_DAEiGqn3_XR5kPMFa"}},"title":"objectOf_objectOf_number_Ho1clIqD_string_doaGddGA_string_doaGddGA_number_Ho1clIqD_objectOf_number_Ho1clIqD_objectOf_number_Ho1clIqD_P3MZbLxO_number_Ho1clIqD_number_Ho1clIqD_DAEiGqn3_XR5kPMFa_JWaN3O44"}}}},"examples":[{"name":"nodeInfoExample","params":[],"result":{"name":"nodeInfoResultExample","value":{"enode":"enode://f7226276f9dcfed1ffae8055261d96c4a61ac32769f50ea1955995f9a584b3a5792451931754258625a43c9b4132eb455347b183fdebe98abb90ab00d7c917b2@127.0.0.1:30303","listenAddr":"127.0.0.1:30303","ip":"127.0.0.1","name":"besu/v21.7.1/linux-x86_64/adoptopenjdk-java-11","id":"f7226276f9dcfed1ffae8055261d96c4a61ac32769f50ea1955995f9a584b3a5792451931754258625a43c9b4132eb455347b183fdebe98abb90ab00d7c917b2","ports":{"discovery":30303,"listener":30303},"protocols":{"eth":{"config":{"chainId":1337,"petersburgBlock":0,"contractSizeLimit":2147483647,"ethash":{"fixeddifficulty":100}},"difficulty":5551236,"genesis":"0xa08d1edb37ba1c62db764ef7c2566cbe368b850f5b3762c6c24114a3fd97b87f","head":"0xc3a8a3d54dc136d3189f89dbc2949252e17d8b921bb729851fe8cc4e7e491f81","network":2018}}}}}]},{"name":"admin_peers","summary":"Returns networking information about connected remote nodes.","params":[],"result":{"name":"peersResult","description":"list of objects returned for each remote node, with the following fields.","schema":{"type":"object"}},"examples":[{"name":"peersExample","params":[],"result":{"name":"peersResultExample","value":[]}}]},{"name":"admin_generateLogBloomCache","summary":"Generates cached log bloom indexes for blocks. APIs such as eth_getLogs and eth_getFilterLogs use the cache for improved performance.","params":[{"name":"startBlock","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}},{"name":"endBlock","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"log bloom","schema":{"type":"object","description":"log bloom index details","properties":{"startBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"endBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"currentBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"requestAccepted":{"type":"boolean","title":"boolean_vyG3AETh"},"caching":{"type":"boolean","title":"boolean_vyG3AETh"}}}},"examples":[{"name":"generateLogBloomCacheExample","params":[{"name":"startBlock","value":"0x0"},{"name":"endBlock","value":"0x10000"}],"result":{"name":"generateLogBloomCacheResultExample","value":{"startBlock":"0x0","endBlock":"0x10000","currentBlock":"0xd37f","requestAccepted":true,"caching":true}}}]},{"name":"admin_logsRemoveCache","summary":"Removes cache files for the specified range of blocks.","params":[{"name":"fromBlock","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}},{"name":"toBlock","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"logsRemoveCacheResult","description":"Cache Removed status or error","schema":{"type":"object","properties":{"Status":{"type":"string","title":"string_doaGddGA"}}}},"examples":[{"name":"logsRemoveCacheExample","params":[{"name":"fromBlock","value":"1"},{"name":"toBlock","value":"100"}],"result":{"name":"logsRemoveCacheResultExample","value":{"Status":"Cache Removed"}}}]},{"name":"admin_logsRepairCache","summary":"Removes cache files for the specified range of blocks.","params":[{"name":"startBlock","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"logsRepairCacheResult","description":"status of the repair request; Started or Already running","schema":{"type":"object","properties":{"Status":{"type":"string","title":"string_doaGddGA"}}}},"examples":[{"name":"logsRepairCacheExample","params":[{"name":"startBlock","value":"1200"}],"result":{"name":"logsRepairCacheResultExample","value":{"Status":"Already running"}}}]},{"name":"admin_removePeer","summary":"Removes a static node.","params":[{"name":"enodeURL","required":true,"description":"enode URL of peer to remove.","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"removePeerResult","description":"true if peer removed or false if peer not a static node","schema":{"type":"boolean"}},"examples":[{"name":"removePeerExample","params":[{"name":"startenodeURLBlock","value":"enode://f59c0ab603377b6ec88b89d5bb41b98fc385030ab1e4b03752db6f7dab364559d92c757c13116ae6408d2d33f0138e7812eb8b696b2a22fe3332c4b5127b22a3@127.0.0.1:30304"}],"result":{"name":"removePeerResultExample","value":false}}]},{"name":"debug_accountRange","summary":"Returns the accounts for a specified block","params":[{"name":"blockHashOrNumber","required":true,"description":"block hash or number","schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"txIndex","required":true,"description":"transaction index from which to start","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},{"name":"address","required":true,"description":"address hash from which to start","schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"limit","required":true,"description":"maximum number of account entries to return","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"accountRangeResult","description":"account details object with the following fields:","schema":{"type":"object","properties":{"addressMap":{"type":"object","title":"object_HAgrRKSz"},"nextKey":{"type":"string","title":"string_doaGddGA"}}}},"examples":[{"name":"accountRangeExample","params":[{"name":"blockHashOrNumber","value":"12345"},{"name":"txIndex","value":0},{"name":"address","value":"0"},{"name":"limit","value":5}],"result":{"name":"accountRangeResultExample","value":{"addressMap":{"0x984f41eb67eb23e42139410eade1008a90b01a018ce2577fea44262c6fc16ce3":"0x0000000000000000000000000000000000000000","0xe52111628d5433237c36e91f159620decfa7747d736dee9676f3afc40471618a":"0x0000000000000000000000000000000000000000","0xbcdea13f0e9ff4fa520c658f547404b4762de6e62f6475f0eb4d1568015570ff":"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"},"nextKey":"0x0000000000000000000000000000000000000000000000000000000000000000"}}}]},{"name":"debug_batchSendRawTransaction","summary":"Sends a list of signed transactions. This is used to quickly load a network with a lot of transactions. This does the same thing as calling eth_sendRawTransaction multiple times.","params":[{"name":"signedTransactionData","required":true,"description":"signed transaction data array","schema":{"type":"array","items":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"},"title":"unorderedSetOf_bytes79fVLUqo"}}],"result":{"name":"batchSendRawTransactionResult","description":"object returned for each transaction.","schema":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"index":{"type":"number","title":"number_Ho1clIqD"},"success":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_number_Ho1clIqD_YfgAYYtD"},{"type":"object","properties":{"index":{"type":"number","title":"number_Ho1clIqD"},"success":{"type":"boolean","title":"boolean_vyG3AETh"},"errorMessage":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_boolean_vyG3AETh_number_Ho1clIqD_string_doaGddGA_6wRAEyNO"}],"title":"oneOf_objectOf_boolean_vyG3AETh_number_Ho1clIqD_YfgAYYtD_objectOf_boolean_vyG3AETh_number_Ho1clIqD_string_doaGddGA_6wRAEyNO_7I8Jk1Ft"}}},"examples":[{"name":"batchSendRawTransactionExample","params":[{"name":"RawTransactions1","value":"0xf868808203e882520894627306090abab3a6e1400e9345bc60c78a8bef57872386f26fc10000801ba0ac74ecfa0e9b85785f042c143ead4780931234cc9a032fce99fab1f45e0d90faa02fd17e8eb433d4ca47727653232045d4f81322619c0852d3fe8ddcfcedb66a43"},{"name":"RawTransactions2","value":"0x416"},{"name":"RawTransactions3","value":"0xf868018203e882520894627306090abab3a6e1400e9345bc60c78a8bef57872386f26fc10000801ca0b24ea1bee8fe36984c36acbf80979a4509f23fc17141851e08d505c0df158aa0a00472a05903d4cd7a811bd4d5c59cc105d93f5943f3393f253e92e65fc36e7ce0"},{"name":"RawTransactions4","value":"0xf868808203e882520894627306090abab3a6e1400e9345bc60c78a8bef5787470de4df820000801ca0f7936b4de04792e3c65095cfbfd1399d231368f5f05f877588c0c8509f6c98c9a01834004dead527c8da1396eede42e1c60e41f38a77c2fd13a6e495479c729b99"}],"result":{"name":"batchSendRawTransactionResultExample","value":[{"index":0,"success":true},{"index":1,"success":false,"errorMessage":"Invalid raw transaction hex"},{"index":2,"success":true},{"index":3,"success":false,"errorMessage":"TRANSACTION_REPLACEMENT_UNDERPRICED"}]}}]},{"name":"debug_getBadBlocks","summary":"Returns a list of invalid blocks. This is used to detect and analyze consensus flaws.","params":[],"result":{"name":"getBadBlockResult","schema":{"type":"array","items":{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}}}},"examples":[{"name":"getBadBlocksExample","params":[],"result":{"name":"getBadBlocksResultExample","value":""}}]},{"name":"debug_standardTraceBlockToFile","summary":"Generates files containing the block trace. A separate file is generated for each transaction in the block.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"Options","schema":{"type":"object","properties":{"txHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"disableMemory":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_blockHash_boolean_vyG3AETh_TooJ8tvr"}}],"result":{"name":"standardTraceBlockToFileResult","schema":{"type":"string"}},"examples":[{"name":"standardTraceBlockToFileExample","params":[{"name":"blockHash","value":"0x6cacedb0ad16953d05bf266995c1e087b196d9411438934963c1fa9ba3be1ae0"}],"result":{"name":"standardTraceBlockToFileResultExample","value":"/Users/me/mynode/goerli/data/traces/block_0x2dc0b6c4-4-0x4ff04c4a-1612820117332"}}]},{"name":"debug_standardTraceBadBlockToFile","summary":"Generates files containing the block trace of invalid blocks. A separate file is generated for each transaction in the block.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}}],"result":{"name":"standardTraceBadBlockToFileResult","description":"location of the generated trace files","schema":{"type":"string"}},"examples":[{"name":"standardTraceBlockToFileExample","params":[{"name":"blockHash","value":"0x6cacedb0ad16953d05bf266995c1e087b196d9411438934963c1fa9ba3be1ae0"}],"result":{"name":"standardTraceBlockToFileResultExample","value":"/Users/me/mynode/goerli/data/traces/block_0x53741e9e-0-0x407ec43d-1600951088172"}}]},{"name":"debug_storageRangeAt","summary":"Returns the contract storage for the specified range.","params":[{"name":"blockHash","required":true,"description":"block hash or number","schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"txIndex","required":true,"description":"transaction index from which to start","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},{"name":"address","required":true,"description":"address hash from which to start","schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"startKey","required":true,"description":"maximum number of account entries to return","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"limit","required":true,"description":"maximum number of account entries to return","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"storageRangeAtResult","description":"the contract storage for the specified range.","schema":{"type":"object","properties":{"storage":{"type":"object","title":"object_HAgrRKSz"},"nextKey":{"type":"string","title":"string_doaGddGA"}}}},"examples":[{"name":"storageRangeAtExample","params":[{"name":"blockHash","value":"0x2b76b3a2fc44c0e21ea183d06c846353279a7acf12abcc6fb9d5e8fb14ae2f8c"},{"name":"txIndex","value":0},{"name":"address","value":"0x0e0d2c8f7794e82164f11798276a188147fbd415"},{"name":"startKey","value":"0x0000000000000000000000000000000000000000000000000000000000000000"},{"name":"limit","value":1}],"result":{"name":"storageRangeAtResultExample","value":{"storage":{"0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563":{"key":null,"value":"0x0000000000000000000000000000000000000000000000000000000000000001"}},"nextKey":"0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6"}}}]},{"name":"debug_metrics","summary":"Returns metrics providing information on the internal operation of Besu.","params":[],"result":{"name":"metricsResult","description":"metrics object","schema":{"type":"object"}}},{"name":"debug_traceTransaction","summary":"Reruns the transaction with the same state as when the transaction executed.","params":[{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}},{"name":"options","schema":{"type":"object","properties":{"disableStorage":{"type":"boolean","title":"boolean_vyG3AETh"},"disableMemory":{"type":"boolean","title":"boolean_vyG3AETh"},"disableStack ":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_boolean_vyG3AETh_boolean_vyG3AETh_38nbw0Rp"}}],"result":{"name":"traceTransactionResult","schema":{"type":"object","properties":{"gas":{"type":"number","title":"number_Ho1clIqD"},"failed":{"type":"boolean","title":"boolean_vyG3AETh"},"returnValue":{"type":"string","title":"string_doaGddGA"},"structLogs":{"type":"array","items":{"type":"object","properties":{"pc":{"type":"number","title":"number_Ho1clIqD"},"op":{"type":"string","title":"string_doaGddGA"},"gas":{"type":"number","title":"number_Ho1clIqD"},"gasCost":{"type":"number","title":"number_Ho1clIqD"},"depth":{"type":"number","title":"number_Ho1clIqD"},"stack":{"type":"object","title":"object_HAgrRKSz"},"memory":{"type":"object","title":"object_HAgrRKSz"},"storage":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQ"},"title":"unorderedSetOf_objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQvLzPQIY9"}}}},"examples":[{"name":"traceTransactionExample","params":[{"name":"transactionHash","value":"0x2cc6c94c21685b7e0f8ddabf277a5ccf98db157c62619cde8baea696a74ed18e"},{"name":"options","value":{"disableStorage":true}}],"result":{"name":"traceTransactionResultExample","value":{"gas":21000,"failed":false,"returnValue":"","structLogs":[{"pc":0,"op":"STOP","gas":0,"gasCost":0,"depth":1,"stack":[],"memory":[],"storage":null}]}}}]},{"name":"debug_traceBlock","summary":"Returns full trace of all invoked opcodes of all transactions included in the block.","params":[{"name":"RLP of the block","required":true,"schema":{"type":"array","items":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"},"title":"unorderedSetOf_bytes79fVLUqo"}},{"name":"options","schema":{"type":"object","properties":{"disableStorage":{"type":"boolean","title":"boolean_vyG3AETh"},"disableMemory":{"type":"boolean","title":"boolean_vyG3AETh"},"disableStack ":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_boolean_vyG3AETh_boolean_vyG3AETh_38nbw0Rp"}}],"result":{"name":"traceBlockResult","schema":{"type":"object","properties":{"gas":{"type":"number","title":"number_Ho1clIqD"},"failed":{"type":"boolean","title":"boolean_vyG3AETh"},"returnValue":{"type":"string","title":"string_doaGddGA"},"structLogs":{"type":"array","items":{"type":"object","properties":{"pc":{"type":"number","title":"number_Ho1clIqD"},"op":{"type":"string","title":"string_doaGddGA"},"gas":{"type":"number","title":"number_Ho1clIqD"},"gasCost":{"type":"number","title":"number_Ho1clIqD"},"depth":{"type":"number","title":"number_Ho1clIqD"},"stack":{"type":"object","title":"object_HAgrRKSz"},"memory":{"type":"object","title":"object_HAgrRKSz"},"storage":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQ"},"title":"unorderedSetOf_objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQvLzPQIY9"}}}},"examples":[{"name":"traceBlockExample","params":[{"name":"transactionHash","value":"0xf90277f90208a05a41d0e66b4120775176c09fcf39e7c0520517a13d2b57b18d33d342df038bfca01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794e6a7a1d47ff21b6321162aea7c6cb457d5476bcaa00e0df2706b0a4fb8bd08c9246d472abbe850af446405d9eba1db41db18b4a169a04513310fcb9f6f616972a3b948dc5d547f280849a87ebb5af0191f98b87be598a0fe2bf2a941abf41d72637e5b91750332a30283efd40c424dc522b77e6f0ed8c4bc1bbd82b44382520b8252088455c426598b657468706f6f6c2e6f7267a0b48c515a9dde8d346c3337ea520aa995a4738bb595495506125449c1149d6cf488ba4f8ecd18aab215f869f86780862d79883d2000825208945df9b87991262f6ba471f09758cde1c0fc1de734827a69801ca088ff6cf0fefd94db46111149ae4bfc179e9b94721fffd821d38d16464b3f71d0a045e0aff800961cfce805daef7016b9b675c137a6a41a548f7b60a3484c06a33ac0"}],"result":{"name":"traceBlockResultExample","value":{"gas":21000,"failed":false,"returnValue":"","structLogs":[{"pc":0,"op":"STOP","gas":0,"gasCost":0,"depth":1,"stack":[],"memory":[],"storage":null}]}}}]},{"name":"debug_traceBlockByHash","summary":"Returns full trace of all invoked opcodes of all transactions included in the block.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"options","schema":{"type":"object","properties":{"disableStorage":{"type":"boolean","title":"boolean_vyG3AETh"},"disableMemory":{"type":"boolean","title":"boolean_vyG3AETh"},"disableStack ":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_boolean_vyG3AETh_boolean_vyG3AETh_38nbw0Rp"}}],"result":{"name":"traceBlockByHashResult","schema":{"type":"object","properties":{"gas":{"type":"number","title":"number_Ho1clIqD"},"failed":{"type":"boolean","title":"boolean_vyG3AETh"},"returnValue":{"type":"string","title":"string_doaGddGA"},"structLogs":{"type":"array","items":{"type":"object","properties":{"pc":{"type":"number","title":"number_Ho1clIqD"},"op":{"type":"string","title":"string_doaGddGA"},"gas":{"type":"number","title":"number_Ho1clIqD"},"gasCost":{"type":"number","title":"number_Ho1clIqD"},"depth":{"type":"number","title":"number_Ho1clIqD"},"stack":{"type":"object","title":"object_HAgrRKSz"},"memory":{"type":"object","title":"object_HAgrRKSz"},"storage":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQ"},"title":"unorderedSetOf_objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQvLzPQIY9"}}}},"examples":[{"name":"traceBlockByHashExample","params":[{"name":"blockHash","value":"0xaceb3b2c9b25b0589230873921eb894b28722011b8df63977145517d754875a5"}],"result":{"name":"traceBlockByHashResultExample","value":{"gas":21000,"failed":false,"returnValue":"","structLogs":[{"pc":0,"op":"STOP","gas":0,"gasCost":0,"depth":1,"stack":[],"memory":[],"storage":null}]}}}]},{"name":"debug_traceBlockByNumber","summary":"Returns full trace of all invoked opcodes of all transactions included in the block.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}},{"name":"options","schema":{"type":"object","properties":{"disableStorage":{"type":"boolean","title":"boolean_vyG3AETh"},"disableMemory":{"type":"boolean","title":"boolean_vyG3AETh"},"disableStack ":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_boolean_vyG3AETh_boolean_vyG3AETh_38nbw0Rp"}}],"result":{"name":"traceBlockByHashResult","schema":{"type":"object","properties":{"gas":{"type":"number","title":"number_Ho1clIqD"},"failed":{"type":"boolean","title":"boolean_vyG3AETh"},"returnValue":{"type":"string","title":"string_doaGddGA"},"structLogs":{"type":"array","items":{"type":"object","properties":{"pc":{"type":"number","title":"number_Ho1clIqD"},"op":{"type":"string","title":"string_doaGddGA"},"gas":{"type":"number","title":"number_Ho1clIqD"},"gasCost":{"type":"number","title":"number_Ho1clIqD"},"depth":{"type":"number","title":"number_Ho1clIqD"},"stack":{"type":"object","title":"object_HAgrRKSz"},"memory":{"type":"object","title":"object_HAgrRKSz"},"storage":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQ"},"title":"unorderedSetOf_objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQvLzPQIY9"}}}},"examples":[{"name":"traceBlockByNumberExample","params":[{"name":"BlocNumber","value":"0x1"}],"result":{"name":"traceBlockByNumberResultExample","value":{"pc":0,"op":"STOP","gas":0,"gasCost":0,"depth":1,"stack":[],"memory":[],"storage":null,"reason":null}}}]},{"name":"eth_accounts","summary":"Returns a list of addresses owned by client.","params":[],"result":{"name":"addresses","schema":{"type":"array","description":"List of addresses","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}}},{"name":"eth_blockNumber","summary":"Returns the number of most recent block.","params":[],"result":{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},"examples":[{"name":"blockNumberExample","params":[],"result":{"name":"blockNumberResultExample","value":"0x14a45"}}]},{"name":"eth_call","summary":"Executes a new message call (locally) immediately without creating a transaction on the block chain.","params":[{"required":true,"name":"transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"returnValue","description":"The return value of the executed contract","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"callExample","params":[{"name":"Transaction","value":{"from":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","to":"0xd46e8dd67c5d32be8058bb8eb970870f07244567","gas":"0x76c0","gasPrice":"0x9184e72a000","value":"0x9184e72a","data":"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"}},{"name":"BlockNumber","value":"latest"}],"result":{"name":"callExampleResult","value":"0x"}}]},{"name":"eth_chainId","summary":"Returns the currently configured chain id","description":"Returns the currently configured chain id, a value used in replay-protected transaction signing as introduced by [EIP-155](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md).","params":[],"result":{"name":"chainId","description":"hex format integer of the current chain id. Defaults are ETC=61, ETH=1, Morden=62.","schema":{"title":"chainId","type":"string","pattern":"^0x[a-fA-F\\d]+$"}},"examples":[{"name":"chainIdExample","params":[],"result":{"name":"chainIdExampleResult","value":"0x1"}}]},{"name":"eth_coinbase","summary":"Returns the client coinbase address.","params":[],"result":{"name":"address","description":"The address owned by the client that is used as default for things like the mining reward","schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}},{"name":"eth_estimateGas","summary":"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.","params":[{"required":true,"name":"transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}}],"result":{"name":"gasUsed","description":"The amount of gas used","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},"examples":[{"name":"estimateGasExample","params":[{"name":"Transaction","value":{"from":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","to":"0xd46e8dd67c5d32be8058bb8eb970870f07244567","gas":"0x76c0","gasPrice":"0x9184e72a000","value":"0x9184e72a","data":"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"}},{"name":"BlockNumber","value":"latest"}],"result":{"name":"estimateGasExampleResult","value":"0x5498"}}]},{"name":"eth_gasPrice","summary":"Returns the current price per gas in wei","params":[],"result":{"name":"gasPrice","required":true,"schema":{"title":"gasPriceResult","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Integer of the current gas price"}},"examples":[{"name":"gasPriceExample","params":[],"result":{"name":"gasPriceExampleResult","value":"0x57b17e500"}}]},{"name":"eth_getBalance","summary":"Returns Ether balance of a given or account or contract","params":[{"name":"address","required":true,"description":"The address of the account or contract","schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","description":"A BlockNumber at which to request the balance","schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"getBalanceResult","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBalanceExample","params":[{"name":"Address","value":"0xc94770007dda54cF92009BFF0dE90c06F603a09f"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getBalanceExampleResult","value":"0x540x7c256203080098"}}]},{"name":"eth_getBlockByHash","summary":"Gets a block for a given hash","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"includeTransactions","description":"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.","required":true,"schema":{"title":"isTransactionsIncluded","type":"boolean"}}],"result":{"name":"getBlockByHashResult","schema":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockByHashExample","params":[{"name":"blockHash","value":"0xaf5526fcb88b2f0d163c9a78ee678bf95b20115dc3d4e2b7b1f5fc4a308724a0"},{"name":"isTransactionsIncluded","value":true}],"result":{"name":"getBlockByHashExampleResult","value":[{"difficulty":"0xbfabcdbd93dda","extraData":"0x737061726b706f6f6c2d636e2d6e6f64652d3132","gasLimit":"0x79f39e","gasUsed":"0x79ccd3","hash":"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35","logsBloom":"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1","miner":"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c","mixHash":"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7","nonce":"0x4db7a1c01d8a8072","number":"0x5bad55","parentHash":"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202","receiptsRoot":"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b","sha3Uncles":"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6","size":"0x41c7","stateRoot":"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305","timestamp":"0x5b541449","totalDifficulty":"0x12ac11391a2f3872fcd","transactions":["0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f","0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f","0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2","0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11","0x241d89f7888fbcfadfd415ee967882fec6fdd67c07ca8a00f2ca4c910a84c7dd"],"transactionsRoot":"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262","uncles":["0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c"]}]}}]},{"name":"eth_getBlockByNumber","summary":"Gets a block for a given number","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},{"name":"includeTransactions","description":"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.","required":true,"schema":{"title":"isTransactionsIncluded","type":"boolean"}}],"result":{"name":"getBlockByNumberResult","schema":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockByNumberExample","params":[{"name":"BlockNumber","value":"0x5BAD55"},{"name":"includeTransactions","value":false}],"result":{"name":"getBlockByNumberExampleResult","value":[{"difficulty":"0xbfabcdbd93dda","extraData":"0x737061726b706f6f6c2d636e2d6e6f64652d3132","gasLimit":"0x79f39e","gasUsed":"0x79ccd3","hash":"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35","logsBloom":"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1","miner":"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c","mixHash":"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7","nonce":"0x4db7a1c01d8a8072","number":"0x5bad55","parentHash":"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202","receiptsRoot":"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b","sha3Uncles":"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6","size":"0x41c7","stateRoot":"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305","timestamp":"0x5b541449","totalDifficulty":"0x12ac11391a2f3872fcd","transactions":["0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f","0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f","0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2"],"transactionsRoot":"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262","uncles":["0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c"]}]}}]},{"name":"eth_getBlockTransactionCountByHash","summary":"Returns the number of transactions in a block from a block matching the given block hash.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}}],"result":{"name":"blockTransactionCountByHash","description":"The Number of total transactions in the given block","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockTransactionCountByHashExample","params":[{"name":"BlockHash","value":"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35"}],"result":{"name":"getBlockTransactionCountByHashExampleResult","value":"0x50"}}]},{"name":"eth_getBlockTransactionCountByNumber","summary":"Returns the number of transactions in a block from a block matching the given block number.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"blockTransactionCountByHash","description":"The Number of total transactions in the given block","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockTransactionCountByNumberExample","params":[{"name":"BlockNumber","value":"0xC51AF5"}],"result":{"name":"getBlockTransactionCountByNumberExampleResult","value":"0x82"}}]},{"name":"eth_getCode","summary":"Returns code at a given contract address","params":[{"name":"address","required":true,"description":"The address of the contract","schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","description":"A BlockNumber of which the code existed","schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"bytes","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"getCodeExample","params":[{"name":"Address","value":"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getCodeExampleResult","value":"0x0x60606040..."}}]},{"name":"eth_getLogs","summary":"Returns an array of all logs matching a given filter object.","params":[{"name":"filter","required":true,"schema":{"title":"filter","type":"object","description":"A filter used to monitor the blockchain for log/events","properties":{"fromBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"toBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"address":{"title":"oneOrArrayOfAddresses","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}]},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}}}}}],"result":{"name":"logs","description":"An array of all logs matching filter with given id.","schema":{"title":"setOfLogs","type":"array","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"examples":[{"name":"eth_getLogsExample","params":[{"name":"Filter","value":{"address":"0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"],"blockHash":"0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb"}}],"result":{"name":"Logs","value":{"address":"0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907","blockHash":"0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb","blockNumber":"0x429d3b","data":"0x000000000000000000000000000000000000000000000000000000012a05f200","logIndex":"0x56","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75","0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078"],"transactionHash":"0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b","transactionIndex":"0xac"}}}]},{"name":"eth_getStorageAt","summary":"Gets a storage value from a contract address, a position, and an optional blockNumber","params":[{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"key","required":true,"schema":{"title":"position","type":"string","description":"Hex representation of the storage slot where the variable exists","pattern":"^0x([a-fA-F0-9]?)+$"}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"dataWord","schema":{"title":"dataWord","type":"string","description":"Hex representation of a 256 bit unit of data","pattern":"^0x([a-fA-F\\d]{64})?$"}},"examples":[{"name":"getStorageAtExample","params":[{"name":"Data","value":"0x295a70b2de5e3953354a6a8344e616ed314d7251"},{"name":"Quantity","value":"0x0"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getStorageAtResultExample","value":"0x0000000000000000000000000000000000000000000000000000000000000000"}}]},{"name":"eth_getTransactionByBlockHashAndIndex","summary":"Returns the information about a transaction requested by the block hash and index of which it was mined.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"index","description":"The ordering in which a transaction is mined within its block.","required":true,"schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionByBlockHashAndIndexExample","params":[{"name":"blockHashExample","value":"0xc0f4906fea23cf6f3cce98cb44e8e1449e455b28d684dfa9ff65426495584de6"},{"name":"indexExample","value":"0x0"}],"result":{"name":"getTransactionByBlockHashAndIndexResultExample","value":{"blockHash":"0xc0f4906fea23cf6f3cce98cb44e8e1449e455b28d684dfa9ff65426495584de6","blockNumber":"0x1e8480","from":"0x32be343b94f860124dc4fee278fdcbd38c102d88","gas":"0x51615","gasPrice":"0x6fc23ac00","hash":"0xc55e2b90168af6972193c1f86fa4d7d7b31a29c156665d15b9cd48618b5177ef","input":"0x","nonce":"0x1efc5","to":"0x104994f45d9d697ca104e5704a7b77d7fec3537c","transactionIndex":"0x0","value":"0x821878651a4d70000","type":"0x0","v":"0x1b","r":"0x51222d91a379452395d0abaff981af4cfcc242f25cfaf947dea8245a477731f9","s":"0x3a997c910b4701cca5d933fb26064ee5af7fe3236ff0ef2b58aa50b25aff8ca5"}}}]},{"name":"eth_getTransactionByBlockNumberAndIndex","summary":"Returns the information about a transaction requested by the block number and index of which it was mined.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},{"name":"index","description":"The ordering in which a transaction is mined within its block.","required":true,"schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionByBlockNumberAndIndexExample","params":[{"name":"blockNumber","value":"0xa1c0ff"},{"name":"indexExample","value":"0x0"}],"result":{"name":"getTransactionByBlockNumberAndIndexResultExample","value":{"blockHash":"0xf345d6ac2cb6290489915178fef0b2fc7f5a7312dd06773c77532de6740b2b4d","blockNumber":"0xa1c0ff","from":"0x79c384ac9c32e90f00a214c77caac1392ec8cdea","gas":"0xafbe","gasPrice":"0x1270b01800","hash":"0x61b27f711f58ee3090c0976c7e90d2b7eafeb7b889f0db593234f04f8ce07f22","input":"0xa9059cbb0000000000000000000000004b1a99467a284cc690e3237bc69105956816f7620000000000000000000000000000000000000000000000000000001919617600","nonce":"0xa","to":"0xf9e5af7b42d31d51677c75bbbd37c1986ec79aee","transactionIndex":"0x0","value":"0x0","type":"0x0","v":"0x1b","r":"0x2123cdbd1130f726ebed55fd2295239778dd4161495d2733f374d7863fc42ab1","s":"0x1f08fd53ff2c3969b88d5e622561d62a799ae68e36f5142689dbfde44bbe1bed"}}}]},{"name":"eth_getTransactionByHash","summary":"Returns the information about a transaction requested by transaction hash.","params":[{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}],"result":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionByHashExample","params":[{"name":"TransactionHash","value":"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44"}],"result":{"name":"getTransactionByHashResultExample","value":{"hash":"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b","blockHash":"0x1d59ff54b1eb26b013ce3cb5fc9dab3705b415a67127a003c3e61eb445bb8df2","blockNumber":"0x5daf3b","chainId":"0x1","from":"0xa7d9ddbe1f17865597fbd27ec712455208b6b76d","gas":"0xc350","gasPrice":"0x4a817c800","input":"0x68656c6c6f21","nonce":"0x15","r":"0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea","s":"0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c","to":"0xf02c1c8e6114b1dbe8937a39260b5b0a374432bb","transactionIndex":"0x41","v":"0x25","value":"0xf3dbb76162000"}}}]},{"name":"eth_getTransactionCount","summary":"Returns the number of transactions sent from an address","params":[{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"transactionCount","schema":{"title":"nonceOrNull","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionCountExample","params":[{"name":"Address","value":"0x9d8f8572f345e1ae53db1dFA4a7fce49B467bD7f"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getTransactionCountResultExample","value":"0x219"}}]},{"name":"eth_getTransactionReceipt","summary":"Returns the receipt information of a transaction by its hash.","params":[{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}],"result":{"name":"transactionReceiptResult","description":"returns either a receipt or null","schema":{"title":"transactionReceiptOrNull","oneOf":[{"title":"receipt","type":"object","description":"The receipt of a transaction","required":["blockHash","blockNumber","contractAddress","cumulativeGasUsed","from","gasUsed","logs","logsBloom","to","transactionHash","transactionIndex"],"properties":{"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"contractAddress":{"title":"ReceiptContractAddress","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}],"description":"The contract address created, if the transaction was a contract creation, otherwise null"},"cumulativeGasUsed":{"title":"ReceiptCumulativeGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The gas units used by the transaction"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gasUsed":{"title":"ReceiptGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total gas used by the transaction"},"logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}},"logsBloom":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"postTransactionState":{"title":"ReceiptPostTransactionState","type":"string","description":"The intermediate stateRoot directly after transaction execution.","pattern":"^0x[a-fA-F\\d]{64}$"},"status":{"title":"ReceiptStatus","description":"Whether or not the transaction threw an error.","type":"boolean"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionReceiptExample","params":[{"name":"TransactionHash","value":"0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b"}],"result":{"name":"getTransactionReceiptResultExample","value":{"transactionHash":"0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b","blockHash":"0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb","blockNumber":"0x429d3b","contractAddress":null,"cumulativeGasUsed":"0x64b559","from":"0x00b46c2526e227482e2ebb8f4c69e4674d262e75","gasUsed":"0xcaac","logs":[{"blockHash":"0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb","address":"0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907","logIndex":"0x56","data":"0x000000000000000000000000000000000000000000000000000000012a05f200","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75","0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078"],"blockNumber":"0x429d3b","transactionIndex":"0xac","transactionHash":"0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b"}],"logsBloom":"0xroot":"0x3ccba97c7fcc7e1636ce2d44be1a806a8999df26eab80a928205714a878d5114","status":null,"to":"0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907","transactionIndex":"0xac"}}}]},{"name":"eth_getUncleByBlockHashAndIndex","summary":"Returns information about a uncle of a block by hash and uncle index position.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"index","description":"The ordering in which a uncle is included within its block.","required":true,"schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"uncle","schema":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getUncleByBlockHashAndIndexExample","params":[{"name":"BlockHash","value":"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35"},{"name":"index","value":"0x0"}],"result":{"name":"getUncleByBlockHashAndIndexResultExample","value":{"difficulty":"0xbf93da424b943","extraData":"0x65746865726d696e652d657539","gasLimit":"0x7a121d","gasUsed":"0x79ea62","hash":"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c","logsBloom":"0x0948432021200401804810002000000000381001001202440000010020000080a016262050e44850268052000400100505022305a64000054004200b0c04110000080c1055c42001054b804940a0401401008a00112d80082113400c10006580140005011a40220020000010001c0a00082300434002000050840010102082801c2000148540201004491814020480080111a0300600000003800640024200109c00202010044000880000106810a1a010000028a0100000422000140011000050a2a44b3080001060800000540c108102102600d000004730404a880100600021080100403000180000062642408b440060590400080101e046f08000000430","miner":"0xea674fdde714fd979de3edf0f56aa9716b898ec8","mixHash":"0x0b15fe0a9aa789c167b0f5ade7b72969d9f2193014cb4e98382254f60ffb2f4a","nonce":"0xa212d6400b89b3f6","number":"0x5bad54","parentHash":"0x05e19fb68d9ec798073808e8b3170875cb327d4b6cde7d6f60fe194677bb26fd","receiptsRoot":"0x90807b32c4aa4610c57289de57fa68ba50ed53f14dd2c25f1862aa049029dcd6","sha3Uncles":"0xf763576c1ea6a8c61a206e16b1a2451bec5cba1c7545d7ff733a1e8c78715569","size":"0x216","stateRoot":"0xebc7a1603bfffe0a14bdb89f898e2f2824abb40f04579beb7b920c56d6e273c9","timestamp":"0x5b54143f","transactionsRoot":"0x7562cba41e067b364b933e7b566fb2444f6954fef3964a5a487d4cd79d97a56c","uncles":[]}}}]},{"name":"eth_getUncleByBlockNumberAndIndex","summary":"Returns information about a uncle of a block by hash and uncle index position.","params":[{"name":"uncleBlockNumber","description":"The block in which the uncle was included","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}},{"name":"index","description":"The ordering in which a uncle is included within its block.","required":true,"schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"uncleResult","description":"returns an uncle block or null","schema":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getUncleByBlockNumberAndIndexExample","params":[{"name":"BlockNumber","value":"0x29c"},{"name":"index","value":"0x0"}],"result":{"name":"getUncleByBlockNumberAndIndexResultExample","value":{"difficulty":"0x57f117f5c","extraData":"0x476574682f76312e302e302f77696e646f77732f676f312e342e32","gasLimit":"0x1388","gasUsed":"0x0","hash":"0x932bdf904546a2287a2c9b2ede37925f698a7657484b172d4e5184f80bdd464d","logsBloom":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","miner":"0x5bf5e9cf9b456d6591073513de7fd69a9bef04bc","mixHash":"0x4500aa4ee2b3044a155252e35273770edeb2ab6f8cb19ca8e732771484462169","nonce":"0x24732773618192ac","number":"0x299","parentHash":"0xa779859b1ee558258b7008bbabff272280136c5dd3eb3ea3bfa8f6ae03bf91e5","receiptsRoot":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","size":"0x21d","stateRoot":"0x2604fbf5183f5360da249b51f1b9f1e0f315d2ff3ffa1a4143ff221ad9ca1fec","timestamp":"0x55ba4827","transactionsRoot":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","uncles":[]}}}]},{"name":"eth_getUncleCountByBlockHash","summary":"Returns the number of uncles in a block from a block matching the given block hash.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}}],"result":{"name":"uncleCountResult","description":"The Number of total uncles in the given block","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getUncleCountByBlockHashExample","params":[{"name":"BlockHash","value":"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35"}],"result":{"name":"getUncleCountByBlockHashResultExample","value":"0x1"}}]},{"name":"eth_getUncleCountByBlockNumber","summary":"Returns the number of uncles in a block from a block matching the given block number.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"uncleCountResult","description":"The Number of total uncles in the given block","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getUncleCountByBlockNumberExample","params":[{"name":"BlockNumber","value":"0xe8"}],"result":{"name":"getUncleCountByBlockNumberResultExample","value":"0x0"}}]},{"name":"eth_getProof","summary":"Returns the account- and storage-values of the specified account including the Merkle-proof.","params":[{"name":"address","description":"The address of the account or contract","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"storageKeys","required":true,"schema":{"title":"storageKeys","description":"A storage key is indexed from the solidity compiler by the order it is declared. For mappings it uses the keccak of the mapping key with its position (and recursively for X-dimensional mappings)","items":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."}}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"account","schema":{"title":"proofAccountOrNull","oneOf":[{"title":"proofAccount","type":"object","description":"The merkle proofs of the specified account connecting them to the blockhash of the block specified","properties":{"address":{"title":"proofAccountAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The address of the account or contract of the request"},"accountProof":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}},"balance":{"title":"proofAccountBalance","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The Ether balance of the account or contract of the request"},"codeHash":{"title":"proofAccountCodeHash","type":"string","description":"The code hash of the contract of the request (keccak(NULL) if external account)","pattern":"^0x[a-fA-F\\d]{64}$"},"nonce":{"title":"proofAccountNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The transaction count of the account or contract of the request"},"storageHash":{"title":"proofAccountStorageHash","type":"string","description":"The storage hash of the contract of the request (keccak(rlp(NULL)) if external account)","pattern":"^0x[a-fA-F\\d]{64}$"},"storageProof":{"title":"storageProofSet","type":"array","description":"Current block header PoW hash.","items":{"title":"storageProof","type":"object","description":"Object proving a relationship of a storage value to an account's storageHash.","properties":{"key":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."},"value":{"title":"storageProofValue","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The value of the storage slot in its account tree"},"proof":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}}}}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getProofExample","params":[{"name":"Address","value":"0x7F0d15C7FAae65896648C8273B6d7E43f58Fa842"},{"name":"StorageProofKey","value":["0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"]},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getProofResultExample","value":"0x0"}}]},{"name":"eth_getWork","summary":"Returns the hash of the current block, the seedHash, and the boundary condition to be met ('target').","params":[],"result":{"name":"work","schema":{"title":"getWorkResults","type":"array","items":[{"title":"powHash","type":"string","description":"Current block header PoW hash.","pattern":"^0x([a-fA-F\\d]{64})?$"},{"title":"seedHash","type":"string","description":"The seed hash used for the DAG.","pattern":"^0x([a-fA-F\\d]{64})?$"},{"title":"difficulty","type":"string","description":"The boundary condition ('target'), 2^256 / difficulty.","pattern":"^0x([a-fA-F\\d]{64})?$"}]}}},{"name":"eth_hashrate","summary":"Returns the number of hashes per second that the node is mining with.","params":[],"result":{"name":"hashesPerSecond","description":"Integer of the number of hashes per second","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},"examples":[{"name":"hashrateExample","params":[],"result":{"name":"hashrateResultExample","value":"0x0"}}]},{"name":"eth_mining","summary":"Returns true if client is actively mining new blocks.","params":[],"result":{"name":"mining","description":"Whether or not the client is mining","schema":{"type":"boolean"}},"examples":[{"name":"miningExample","params":[],"result":{"name":"miningResultExample","value":false}}]},{"name":"eth_newBlockFilter","summary":"Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges.","params":[],"result":{"name":"filterId","schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}},"examples":[{"name":"newBlockFilterExample","params":[],"result":{"name":"newBlockFilterResultExample","value":"0x5e2fce0043c0ac9f1772609c2fc30d2c"}}]},{"name":"eth_newFilter","summary":"Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges.","params":[{"name":"filter","required":true,"schema":{"title":"filter","type":"object","description":"A filter used to monitor the blockchain for log/events","properties":{"fromBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"toBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"address":{"title":"oneOrArrayOfAddresses","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}]},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}}}}}],"result":{"name":"filterId","description":"The filter ID for use in `eth_getFilterChanges`","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},"examples":[{"name":"newFilterExample","params":[{"name":"BlockNumber","value":{"fromBlock":"earliest","toBlock":"latest","topics":[]}}],"result":{"name":"newFilterResultExample","value":"0xe921d6875bf20243493e19945c503dc0"}}]},{"name":"eth_getFilterChanges","summary":"Polling method for a filter, which returns an array of logs which occurred since last poll.","params":[{"name":"filterId","required":true,"schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}}],"result":{"name":"logResult","schema":{"title":"logResult","type":"array","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"examples":[{"name":"getFilterChangesExample","params":[{"name":"filterId","value":"0xcf4e9670c19fc799f196f814ea8d7838"}],"result":{"name":"getFilterChangesResult","value":[{"address":"0xb5a5f22694352c15b00323844ad545abb2b11028","blockHash":"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de","blockNumber":"0x5d12ab","data":"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000","logIndex":"0x0","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e","0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e"],"transactionHash":"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd","transactionIndex":"0x3"},{"address":"0xe38165c9f6deb144afc9c32c206b024817e1496d","blockHash":"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de","blockNumber":"0x5d12ab","data":"0x0000000000000000000000000000000000000000000000000000000025c6b720","logIndex":"0x3","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3","0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef"],"transactionHash":"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153","transactionIndex":"0x5"}]}}]},{"name":"eth_getFilterLogs","summary":"Returns an array of all logs matching filter with given id.","params":[{"name":"filterId","required":true,"schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}}],"result":{"name":"logs","description":"An array of all logs matching filter with given id.","schema":{"title":"setOfLogs","type":"array","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"examples":[{"name":"getFilterChangesExample","params":[{"name":"filterId","value":"0xcf4e9670c19fc799f196f814ea8d7838"}],"result":{"name":"getFilterChangesResult","value":[{"address":"0xb5a5f22694352c15b00323844ad545abb2b11028","blockHash":"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de","blockNumber":"0x5d12ab","data":"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000","logIndex":"0x0","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e","0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e"],"transactionHash":"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd","transactionIndex":"0x3"},{"address":"0xe38165c9f6deb144afc9c32c206b024817e1496d","blockHash":"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de","blockNumber":"0x5d12ab","data":"0x0000000000000000000000000000000000000000000000000000000025c6b720","logIndex":"0x3","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3","0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef"],"transactionHash":"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153","transactionIndex":"0x5"}]}}]},{"name":"eth_uninstallFilter","summary":"Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additionally Filters timeout when they aren't requested with eth_getFilterChanges for a period of time.","params":[{"name":"filterId","required":true,"schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}}],"result":{"name":"filterUninstalledSuccess","description":"returns true if the filter was successfully uninstalled, false otherwise.","schema":{"type":"boolean"}},"examples":[{"name":"uninstallFilterExample","params":[{"name":"FilterId","value":"0xe921d6875bf20243493e19945c503dc0"}],"result":{"name":"uninstallFilterResultExample","value":true}}]},{"name":"eth_newPendingTransactionFilter","summary":"Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges.","params":[],"result":{"name":"filterId","schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}},"examples":[{"name":"newPendingTransactionFilterExample","params":[],"result":{"name":"newPendingTransactionFilterResultExample","value":"0xe921d6875bf20243493e19945c503dc0"}}]},{"name":"eth_sendRawTransaction","summary":"Creates new message call transaction or a contract creation for signed transactions.","params":[{"name":"signedTransactionData","required":true,"description":"The signed transaction data","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}}],"result":{"name":"transactionHash","description":"The transaction hash, or the zero hash if the transaction is not yet available.","schema":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"}},"examples":[{"name":"sendRawTransactionExample","params":[{"name":"signedTransactionData","value":"0xf86a018203e882520894f17f52151ebef6c7334fad080c5704d77216b732896c6b935b8bbd400000801ba093129415f03b4794fd1512e79ee7f097e4271f66721020f8407aac92179893a5a0451b875d89721ec98be55201092980b0a87bb1c48507fccb86da713596b2a09e"}],"result":{"name":"sendRawTransactionResultExample","value":"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"}}]},{"name":"eth_submitHashrate","deprecated":true,"summary":"Used for submitting mining hashrate.","params":[{"name":"hashRate","required":true,"schema":{"title":"dataWord","type":"string","description":"Hex representation of a 256 bit unit of data","pattern":"^0x([a-fA-F\\d]{64})?$"}},{"name":"id","required":true,"description":"String identifying the client","schema":{"title":"dataWord","type":"string","description":"Hex representation of a 256 bit unit of data","pattern":"^0x([a-fA-F\\d]{64})?$"}}],"result":{"name":"submitHashRateSuccess","description":"whether of not submitting went through successfully","schema":{"type":"boolean"}},"examples":[{"name":"submitHashrateExample","params":[{"name":"hashrate","value":"0x0000000000000000000000000000000000000000000000000000000000500000"},{"name":"id","value":"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c"}],"result":{"name":"submitHashrateResultExample","value":true}}]},{"name":"eth_submitWork","summary":"Used for submitting a proof-of-work solution.","params":[{"name":"nonce","required":true,"schema":{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"}},{"name":"powHash","required":true,"schema":{"title":"powHash","type":"string","description":"Current block header PoW hash.","pattern":"^0x([a-fA-F\\d]{64})?$"}},{"name":"mixHash","required":true,"schema":{"title":"mixHash","type":"string","description":"The mix digest.","pattern":"^0x([a-fA-F\\d]{64})?$"}}],"result":{"name":"solutionValid","description":"returns true if the provided solution is valid, otherwise false.","schema":{"type":"boolean"}},"examples":[{"name":"submitWorkExample","params":[{"name":"nonceExample","description":"example of a number only used once","value":"0x0000000000000001"},{"name":"powHashExample","description":"proof of work to submit","value":"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"},{"name":"mixHashExample","description":"the mix digest example","value":"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000"}],"result":{"name":"solutionInvalidExample","description":"this example should return `false` as it is not a valid pow to submit","value":false}}]},{"name":"eth_syncing","summary":"Returns an object with data about the sync status or false.","params":[],"result":{"name":"syncing","schema":{"title":"isSyncingResult","oneOf":[{"title":"syncingData","description":"An object with sync status data","type":"object","properties":{"startingBlock":{"title":"syncingDataStartingBlock","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Block at which the import started (will only be reset, after the sync reached his head)"},"currentBlock":{"title":"syncingDataCurrentBlock","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The current block, same as eth_blockNumber"},"highestBlock":{"title":"syncingDataHighestBlock","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The estimated highest block"},"knownStates":{"title":"syncingDataKnownStates","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The known states"},"pulledStates":{"title":"syncingDataPulledStates","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The pulled states"}}},{"type":"boolean","title":"boolean_vyG3AETh"}]}},"examples":[{"name":"syncingExample","params":[],"result":{"name":"syncingResultExample","value":false}}]},{"name":"eth_subscribe","summary":"If successful this returns the subscription id. Subscriptions are creates with a regular RPC call with eth_subscribe as method and the subscription name as first parameter. ","params":[{"name":"subscriptioName","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"optionalArguments ","schema":{"type":"array","items":{"type":"object","title":"object_HAgrRKSz"},"title":"unorderedSetOf_object_HAgrRKSzAfoBnX12"}}],"result":{"name":"subscribeExample","schema":{"type":"string"}}},{"name":"eth_unsubscribe","summary":"Subscriptions are cancelled with a regular RPC call with eth_unsubscribe as method and the subscription id as first parameter.","params":[{"name":"subscriptionId","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"unsubscribeExample","schema":{"type":"boolean"}}},{"name":"ibft_discardValidatorVote","summary":"Discards a proposal to add or remove a validator with the specified address.","params":[{"name":"address","description":"Address of proposed validator.","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}],"result":{"name":"discardValidatorVoteResult","description":"Indicates if the proposal is discarded","schema":{"type":"boolean"}},"examples":[{"name":"discardValidatorVoteExample","params":[{"name":"Address","value":"0x42eb768f2244c8811c63729a21a3569731535f06"}],"result":{"name":"discardValidatorVoteResultExample","value":true}}]},{"name":"ibft_getPendingVotes","summary":"Returns votes cast in the current epoch.","params":[],"result":{"name":"getPendingVotesResult","description":"Map of strings to booleans - map of account addresses to corresponding boolean values indicating the vote for each account; if true, the vote is to add a validator. If false, the proposal is to remove a validator.","schema":{"type":"object"}},"examples":[{"name":"getPendingVotesExample","params":[],"result":{"name":"accountRangeExample","value":{"0xef1bfb6a12794615c9b0b5a21e6741f01e570185":true,"0x42d4287eac8078828cf5f3486cfe601a275a49a5":true}}}]},{"name":"ibft_getSignerMetrics","summary":"Provides the following validator metrics for the specified range:","description":"Number of blocks from each validator\nBlock number of the last block proposed by each validator (if any proposed in the specified range)\nAll validators present in the last block of the range","params":[{"name":"fromBlockNumber","schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}},{"name":"toBlockNumber","schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"getSignerMetricsResult","description":"list of validator objects","schema":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","title":"string_doaGddGA"},"proposedBlockCount":{"type":"string","title":"string_doaGddGA"},"lastProposedBlockNumber":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_string_doaGddGA_string_doaGddGA_string_doaGddGA_OB3LBxqo"}}},"examples":[{"name":"discardValidatorVoteExample","params":[{"name":"fromBlockNumber","value":"1"},{"name":"toBlockNumber","value":"100"}],"result":{"name":"discardValidatorVoteResultExample","value":[{"address":"0x7ffc57839b00206d1ad20c69a1981b489f772031","proposedBlockCount":"0x21","lastProposedBlockNumber":"0x61"},{"address":"0x42eb768f2244c8811c63729a21a3569731535f06","proposedBlockCount":"0x21","lastProposedBlockNumber":"0x63"},{"address":"0xb279182d99e65703f0076e4812653aab85fca0f0","proposedBlockCount":"0x21","lastProposedBlockNumber":"0x62"}]}}]},{"name":"ibft_getValidatorsByBlockHash","summary":"Lists the validators defined in the specified block.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}}],"result":{"name":"getValidatorsByBlockHashResult","description":"List of validator addresses.","schema":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}},"examples":[{"name":"getValidatorsByBlockHashExample","params":[{"name":"BlockHash","value":"0x98b2ddb5106b03649d2d337d42154702796438b3c74fd25a5782940e84237a48"}],"result":{"name":"getValidatorsByBlockHashResultExample","value":["0x42d4287eac8078828cf5f3486cfe601a275a49a5","0xb1b2bc9582d2901afdc579f528a35ca41403fa85","0xef1bfb6a12794615c9b0b5a21e6741f01e570185"]}}]},{"name":"ibft_getValidatorsByBlockNumber","summary":"Lists the validators defined in the specified block.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"getValidatorsByBlockNumberResult","description":"List of validator addresses.","schema":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}},"examples":[{"name":"getValidatorsByBlockNumberExample","params":[{"name":"BlockNumber","value":"0x09"}],"result":{"name":"getValidatorsByBlockNumberResultExample","value":["0x42d4287eac8078828cf5f3486cfe601a275a49a5","0xb1b2bc9582d2901afdc579f528a35ca41403fa85","0xef1bfb6a12794615c9b0b5a21e6741f01e570185"]}}]},{"name":"ibft_proposeValidatorVote","summary":"Proposes to add or remove a validator with the specified address.","params":[{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"proposal","required":true,"schema":{"type":"boolean","title":"boolean_vyG3AETh"}}],"result":{"name":"proposeValidatorVoteResult","schema":{"type":"boolean"}},"examples":[{"name":"getValidatorsByBlockNumberExample","params":[{"name":"address","value":"42d4287eac8078828cf5f3486cfe601a275a49a5"},{"name":"proposal","value":true}],"result":{"name":"getValidatorsByBlockNumberResultExample","value":true}}]},{"name":"net_enode","summary":"Returns the enode URL.","params":[],"result":{"name":"enodeResult","description":"Enode URL of the node.","schema":{"type":"string"}},"examples":[{"name":"enodeExample","params":[],"result":{"name":"enodeResultExample","value":"enode://6a63160d0ccef5e4986d270937c6c8d60a9a4d3b25471cda960900d037c61988ea14da67f69dbfb3497c465d0de1f001bb95598f74b68a39a5156a608c42fa1b@127.0.0.1:30303"}}]},{"name":"net_listening","summary":"Whether the client is actively listening for network connections.","params":[],"result":{"name":"listeningResult","description":"Indicates if the client is actively listening for network connections","schema":{"type":"boolean"}},"examples":[{"name":"listeningExample","params":[],"result":{"name":"listeningResultExample","value":true}}]},{"name":"net_peerCount","summary":"Returns the number of peers currently connected to the client.","params":[],"result":{"name":"peerCountResult","description":"Mumber of connected peers in hexadecimal","schema":{"type":"string"}},"examples":[{"name":"peerCountExample","params":[],"result":{"name":"peerCountResultExample","value":"0x5"}}]},{"name":"net_services","summary":"Returns enabled services (for example, jsonrpc) and the host and port for each service.","params":[],"result":{"name":"servicesResult","schema":{"type":"object","properties":{"jsonrpc":{"type":"object","properties":{"host":{"type":"string","title":"string_doaGddGA"},"port":{"type":"number","title":"number_Ho1clIqD"}},"title":"objectOf_number_Ho1clIqD_string_doaGddGA_NWOHlwbD"},"p2p":{"type":"object","properties":{"host":{"type":"string","title":"string_doaGddGA"},"port":{"type":"number","title":"number_Ho1clIqD"}},"title":"objectOf_number_Ho1clIqD_string_doaGddGA_NWOHlwbD"},"metrics":{"type":"object","properties":{"host":{"type":"string","title":"string_doaGddGA"},"port":{"type":"number","title":"number_Ho1clIqD"}},"title":"objectOf_number_Ho1clIqD_string_doaGddGA_NWOHlwbD"}}}},"examples":[{"name":"servicesExample","params":[],"result":{"name":"servicesResultExample","value":{"jsonrpc":{"host":"127.0.0.1","port":"8545"},"p2p":{"host":"127.0.0.1","port":"30303"},"metrics":{"host":"127.0.0.1","port":"9545"}}}}]},{"name":"net_version","summary":"Returns the network ID.","params":[],"result":{"name":"versionResult","description":"hex format integer of the current chain id.","schema":{"type":"string"}},"examples":[{"name":"versiontExample","params":[],"result":{"name":"versionResultExample","value":"2018"}}]},{"name":"trace_block","summary":"Provides transaction processing of type trace for the specified block.","params":[{"name":"blockNumber","summary":"integer representing a block number or one of the string tags latest, earliest, or pending.","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"blockResult","description":"list of calls to other contracts containing one object per call, in transaction execution order","schema":{"type":"array","items":{"type":"object","properties":{"action":{"callType":{"type":"string"},"from":{"type":"string"},"gas":{"type":"string"},"input":{"type":"string"},"to":{"type":"string"},"value":{"type":"string"},"title":"any_c5RfZsDE"},"blockHash":{"type":"string","title":"string_doaGddGA"},"blockNumber":{"type":"number","title":"number_Ho1clIqD"},"result":{"type":"object","properties":{"gasUsed":{"type":"string","title":"string_doaGddGA"},"output":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_string_doaGddGA_string_doaGddGA_pPxYGqD4"},"subtraces":{"type":"number","title":"number_Ho1clIqD"},"traceAddress":{"typer":"object","title":"any_uRRrakAO"},"transactionHash":{"type":"string","title":"string_doaGddGA"},"transactionPosition":{"type":"number","title":"number_Ho1clIqD"},"type":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_string_doaGddGA_number_Ho1clIqD_string_doaGddGA_any_uRRrakAO_number_Ho1clIqD_objectOf_string_doaGddGA_string_doaGddGA_pPxYGqD4_number_Ho1clIqD_string_doaGddGA_any_c5RfZsDE_cPSxpeEe"}}},"examples":[{"name":"blockExample","params":[{"name":"BlockNumber","value":"0x6"}],"result":{"name":"blockResultExample","value":{"action":{"author":"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73","rewardType":"block","value":"0x1bc16d674ec80000"},"blockHash":"0x3947cdf661fa81e8d66bfe8d125f857112a8c2ecdaa878aab27c50fe8f4d36ef","blockNumber":6,"result":null,"subtraces":0,"traceAddress":[],"transactionHash":null,"transactionPosition":null,"type":"reward"}}}]},{"name":"trace_replayBlockTransactions","summary":"Provides transaction processing tracing per block.","params":[{"name":"blockNumber","summary":"integer representing a block number or one of the string tags latest, earliest, or pending.","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}},{"name":"options","schema":{"type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGA8UEdgiIy"}}],"result":{"name":"replayBlockTransactionsResult","description":"the trace list items in the returned transaction trace object include the revert reason.","schema":{"type":"array","items":{"type":"object","title":"object_HAgrRKSz"}}},"examples":[{"name":"replayBlockTransactionsExample","params":[{"name":"blockNumber","value":"0x12"},{"name":"options","value":["trace","vmTrace","stateDiff"]}],"result":{"name":"replayBlockTransactionsResultExample","value":[]}}]},{"name":"priv_call","summary":"Invokes a private contract function locally and does not change the privacy group state.","params":[{"name":"privacyGroupId","schema":{"type":"string","title":"string_doaGddGA"}},{"required":true,"name":"transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"callResult","description":"return value of the executed contract","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"replayBlockTransactionsExample","params":[{"name":"privacyGroupId","value":"tb8NVyQqZnHNegf/3mYsyB+HEud4SPWn90rz3GoskRw="},{"name":"Transaction","value":{"to":"0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13","data":"0x3fa4f245"}},{"name":"Transaction","value":"latest"}],"result":{"name":"replayBlockTransactionsResultExample","value":"0x0000000000000000000000000000000000000000000000000000000000000001"}}]},{"name":"priv_createPrivacyGroup","summary":"Creates a group of nodes.","params":[{"name":"options","schema":{"description":"request options object with the following fields","properties":{"addresses":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},"name":{"type":"string","title":"string_doaGddGA"},"description":{"type":"string","title":"string_doaGddGA"}},"title":"any_4wfdmhjC"}}],"result":{"name":"createPrivacyGroupResult","schema":{"type":"string"}},"examples":[{"name":"createPrivacyGroupExample","params":[{"name":"Group","value":{"addresses":["sTZpbQhcOfd9ZaFDnC00e/N2Ofv9p4/ZTBbEeVtXJ3E=","quhb1pQPGN1w8ZSZSyiIfncEAlVY/M/rauSyQ5wVMRE="],"name":"Group A","description":"Description Group A"}}],"result":{"name":"createPrivacyGroupResultExample","value":"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk="}}]},{"name":"priv_deletePrivacyGroup","summary":"Returns the state root of the specified privacy group at the specified block.","params":[{"name":"privacyGroupId","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"deletePrivacyGroupResult","schema":{"type":"string"}},"examples":[{"name":"deletePrivacyGroupExample","params":[{"name":"privacyGroupId","value":"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk="}],"result":{"name":"deletePrivacyGroupResultExample","value":"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk="}}]},{"name":"priv_distributeRawTransaction","summary":"Distributes a signed, RLP encoded private transaction.","params":[{"name":"signedTransactionData","summary":"signed RLP-encoded private transaction","required":true,"schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}}],"result":{"name":"distributeRawTransactionResult","description":"the enclave key is a pointer to the private transaction in Orion.","schema":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"}},"examples":[{"name":"distributeRawTransactionExample","params":[{"name":"signedTransactionData","value":"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833"}],"result":{"name":"distributeRawTransactionResultExample","value":"0xfd0d90ab824574abc19c0776ca0210e764561d0ef6d621f2bbbea316eccfe56b"}}]},{"name":"priv_findPrivacyGroup","summary":"Returns a list of privacy groups containing only the listed members","params":[{"name":"members","required":true,"schema":{"type":"array","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGADvj0xlFa"}}],"result":{"name":"findPrivacyGroupResult","summary":"privacyGroupObjects containing only the specified members;","description":"privacy group objects containing only the specified members; privacy groups are EEA-compliant or Besu-extended with types:\nLEGACY for EEA-compliant groups.\nPANTHEON for Besu-extended groups.","schema":{"type":"object","items":[{"name":"privacyGroupId","type":"string","title":"string_LRO9Qa9G"},{"name":"description","type":"string","title":"string_Sjpfeutu"},{"name":"type","type":"string","title":"string_AjybXYep"},{"name":"members","type":"object","items":{"type":"string","title":"string_doaGddGA"},"title":"object_TH0UsnUy"}]}},"examples":[{"name":"findPrivacyGroupExample","params":[{"name":"member1","value":"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk="},{"name":"member2","value":"g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw="}],"result":{"name":"findPrivacyGroupResultExample","value":{"privacyGroupId":"GpK3ErNO0xF27T0sevgkJ3+4qk9Z+E3HtXYxcKIBKX8=","name":"Group B","description":"Description of Group B","type":"PANTHEON","members":["negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=","g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw="]}}}]},{"name":"priv_getCode","summary":"Returns the code of the private smart contract at the specified address. Compiled smart contract code is stored as a hexadecimal value.","params":[{"name":"privacyGroupId","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"getCodeResult","description":"Code stored at the specified address","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"getCodeExample","params":[{"name":"privacyGroupId","value":"1lJxSIP4JOp6uRn9wYsPeWwqoOP1c4nPQjylB4FExUA="},{"name":"address","value":"0xeaf1c1bd00ef0bec5e39fba81740f1c5d05aa201"},{"name":"blockNumber","value":"latest"}],"result":{"name":"getCodeResultExample","value":"0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029"}}]},{"name":"priv_getEeaTransactionCount","summary":"Returns the private transaction count for the specified account and group of sender and recipients.","params":[{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"sender","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"recipients","required":true,"schema":{"type":"array","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGADvj0xlFa"}}],"result":{"name":"getEeaTransactionCountResult","description":"integer representing the number of private transactions sent from the address to the specified group of sender and recipients","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},"examples":[{"name":"getEeaTransactionCountExample","params":[{"name":"address","value":"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"},{"name":"sender","value":"GGilEkXLaQ9yhhtbpBT03Me9iYa7U/mWXxrJhnbl1XY="},{"name":"recipients","value":["KkOjNLmCI6r+mICrC6l+XuEDjFEzQllaMQMpWLl4y1s=","eLb69r4K8/9WviwlfDiZ4jf97P9czyS3DkKu0QYGLjg="]}],"result":{"name":"getEeaTransactionCountResultExample","value":"0x1"}}]},{"name":"priv_getFilterChanges","summary":"Returns an array of logs for the specified filter for a private contract.","params":[{"name":"privacyGroupId","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"filterId","required":true,"schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}}],"result":{"name":"getFilterChangesResult","description":"list of log objects, or an empty list if nothing has changed since the last poll","schema":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"examples":[{"name":"getFilterChangesExample","params":[{"name":"privacyGroupId","value":"4rFldHM792LeP/e2WPkTXZedjwKuTr/KwCFTt6mBbkI="},{"name":"FilterId","value":"0x4a35b92809d73f4f53a2355d62125442"}],"result":{"name":"getFilterChangesResultExample","value":{"logIndex":"0x0","removed":false,"blockNumber":"0x4d0","blockHash":"0x1c8200667a869e99b945374c37277b5ee7a7ae67943e13c82563381387553dbb","transactionHash":"0xb1966b9b372ba68952f48f3a3e78f036f5ae82ceca2de972a782d07fb88f6d88","transactionIndex":"0x0","address":"0x991cc548c154b2953cc48c02f782e1314097dfbb","data":"0x","topics":["0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410","0x0000000000000000000000000000000000000000000000000000000000000002"]}}}]},{"name":"priv_getFilterLogs","summary":"Polls the specified filter for a private contract and returns an array of changes that have occurred since the last poll.","params":[{"name":"privacyGroupId","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"filterId","required":true,"schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}}],"result":{"name":"getFilterLogsResult","description":"list of log objects, or an empty list if nothing has changed since the last poll","schema":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"examples":[{"name":"getFilterLogsExample","params":[{"name":"privacyGroupId","value":"4rFldHM792LeP/e2WPkTXZedjwKuTr/KwCFTt6mBbkI="},{"name":"FilterId","value":"0x4a35b92809d73f4f53a2355d62125442"}],"result":{"name":"getFilterLogsResultExample","value":[{"logIndex":"0x0","removed":false,"blockNumber":"0x493","blockHash":"0xd9cb3a852e1e02c95f035a2e32d57f82c10cab61faa3e8f5c010adf979bb4786","transactionHash":"0x78866dc51fdf189d8cca74f6a8fe54f172348fbd2163bbe80fa8b106cfc7deb4","transactionIndex":"0x0","address":"0x991cc548c154b2953cc48c02f782e1314097dfbb","data":"0x","topics":["0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410","0x0000000000000000000000000000000000000000000000000000000000000001"]},{"logIndex":"0x0","removed":false,"blockNumber":"0x4d0","blockHash":"0x1c8200667a869e99b945374c37277b5ee7a7ae67943e13c82563381387553dbb","transactionHash":"0xb1966b9b372ba68952f48f3a3e78f036f5ae82ceca2de972a782d07fb88f6d88","transactionIndex":"0x0","address":"0x991cc548c154b2953cc48c02f782e1314097dfbb","data":"0x","topics":["0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410","0x0000000000000000000000000000000000000000000000000000000000000002"]}]}}]},{"name":"priv_getLogs","summary":"Returns an array of logs matching a specified filter object.","params":[{"name":"privacyGroupId","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"filterId","required":true,"schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}}],"result":{"name":"getLogsResult","description":"list of log objects, or an empty list if nothing has changed since the last poll","schema":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"examples":[{"name":"getLogsExample","params":[{"name":"privacyGroupId","value":"vGy/TZgO6y8VPMVeJAQ99MF1NaTf5ohA3TFfzoEF71k="},{"name":"filterId","value":{"fromBlock":"earliest","toBlock":"latest","addresses":["0x630c507ff633312087dc33c513b66276abcd2fc3"],"topics":["0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410"]}}],"result":{"name":"getLogsResultExample","value":[{"logIndex":"0x0","removed":false,"blockNumber":"0x342","blockHash":"0xf5954f068fa2f2f7741281e8c753a8e92047e27ab3c4971836d2c89fab86d92b","transactionHash":"0xa9ba5cffde9d4ad8997c5c4352d5d49eeea0e9def8a4ea69991b8837c49d4e4f","transactionIndex":"0x0","address":"0x630c507ff633312087dc33c513b66276abcd2fc3","data":"0x","topics":["0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410","0x0000000000000000000000000000000000000000000000000000000000000001"]},{"logIndex":"0x0","removed":false,"blockNumber":"0x383","blockHash":"0x91b73a47d53e3a88d62ed091a89a4be7557ad91b552e7ff7d86bf78977d5d45d","transactionHash":"0xc2a185faf00e87434e55b7f70cc4c38be354c2128b4b96b5f5def0b54a2173ec","transactionIndex":"0x0","address":"0x630c507ff633312087dc33c513b66276abcd2fc3","data":"0x","topics":["0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410","0x0000000000000000000000000000000000000000000000000000000000000002"]}]}}]},{"name":"priv_getPrivacyPrecompileAddress","summary":"Returns the address of the privacy precompiled contract. The address is derived and based on the value of the privacy-flexible-groups-enabled option.","params":[],"result":{"name":"getPrivacyPrecompileAddressResult","schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"examples":[{"name":"getPrivacyPrecompileAddressExample","params":[],"result":{"name":"getPrivacyPrecompileAddressResultExample","value":"0x000000000000000000000000000000000000007e"}}]},{"name":"priv_getPrivateTransaction","summary":"Returns the private transaction if you are a participant, otherwise, null.","params":[{"name":"transaction","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}],"result":{"name":"PrivateTransaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},"examples":[{"name":"getPrivateTransactionExample","params":[{"name":"transcation","value":"0x623c4ce5275a87b91f4f1c521012d39ca19311c787bde405490f4c0426a71498"}],"result":{"name":"getPrivateTransactionResultExample","value":{"from":"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73","gas":"0x2dc6c0","gasPrice":"0x0","hash":"0x623c4ce5275a87b91f4f1c521012d39ca19311c787bde405490f4c0426a71498","input":"0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610221806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633fa4f2451461005c5780636057361d1461008757806367e404ce146100b4575b600080fd5b34801561006857600080fd5b5061007161010b565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100b260048036038101908080359060200190929190505050610115565b005b3480156100c057600080fd5b506100c96101cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600254905090565b7fc9db20adedc6cf2b5d25252b101ab03e124902a73fcb12b753f3d1aaa2d8f9f53382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a18060028190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a723058208efaf938851fb2d235f8bf9a9685f149129a30fe0f4b20a6c1885dc02f639eba0029","nonce":"0x0","to":null,"value":"0x0","v":"0xfe8","r":"0x654a6a9663ca70bb13e27cca14b3777cc92da184e19a151cdeef2ccbbd5c6405","s":"0x5dd4667b020c8a5af7ae28d4c3126f8dcb1187f49dcf0de9d7a39b1651892eef","privateFrom":"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=","privateFor":["g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw="],"restriction":"restricted"}}}]},{"name":"priv_getTransactionCount","summary":"Returns the private transaction count for specified account and privacy group.","params":[{"name":"privacyGroupId","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}],"result":{"name":"integerPrivateTransactions","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},"examples":[{"name":"getTransactionCountExample","params":[{"name":"privacyGroupId","value":"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"},{"name":"address","value":"kAbelwaVW7okoEn1+okO+AbA4Hhz/7DaCOWVQz9nx5M="}],"result":{"name":"getTransactionCountResultExample","value":"0x1"}}]},{"name":"priv_getTransactionReceipt","summary":"Returns information about the private transaction after mining the transaction. Receipts for pending transactions are not available.","params":[{"name":"transaction","required":true,"schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}}],"result":{"name":"getTransactionReceiptResult","schema":{"type":"object","properties":{"contractAddress":{"type":"string","title":"string_doaGddGA"},"from":{"type":"string","title":"string_doaGddGA"},"output":{"type":"string","title":"string_doaGddGA"},"commitmentHash":{"type":"string","title":"string_doaGddGA"},"transactionHash":{"type":"string","title":"string_doaGddGA"},"privateFrom":{"type":"string","title":"string_doaGddGA"},"privacyGroupId":{"type":"string","title":"string_doaGddGA"},"status":{"type":"string","title":"string_doaGddGA"},"logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}}}},"examples":[{"name":"getTransactionReceiptExample","params":[{"name":"transaction","value":"0xf3ab9693ad92e277bf785e1772f29fb1864904bbbe87b0470455ddb082caab9d"}],"result":{"name":"getTransactionReceiptResultExample","value":{"contractAddress":"0x493b76031593402e24e16faa81f677b58e2d53f3","from":"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73","output":"0x6080604052600436106049576000357c010000000000000000000000000000000000000000000\n                0000000000000900463ffffffff1680633fa4f24514604e57806355241077146076575b600080fd5b3480156059\n                57600080fd5b50606060a0565b6040518082815260200191505060405180910390f35b348015608157600080fd5b\n                50609e6004803603810190808035906020019092919050505060a6565b005b60005481565b8060008190555050560\n                0a165627a7a723058202bdbba2e694dba8fff33d9d0976df580f57bff0a40e25a46c398f8063b4c00360029","commitmentHash":"0x79b9e6b0856db398ad7dc208f15b1d38c0c0b0c5f99e4a443a2c5a85510e96a5","transactionHash":"0x36219e92b5f53d4150aa9ef7d2d793118cced523de6724100da5b534e3ceb4b8","privateFrom":"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=","privacyGroupId":"cD636RZlcqVSpoxT/ExbkWQfBO7kPAZO0QlWHErNSL8=","status":"0x1","logs":[]}}}]},{"name":"priv_newFilter","summary":"Creates a log filter for a private contract. To poll for logs associated with the created filter, use priv_getFilterChanges. To get all logs associated with the filter, use priv_getFilterLogs.","params":[{"name":"privacyGroupId","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"filterOptions","required":true,"schema":{"type":"object","properties":{"fromBlock":{"type":"string","title":"string_doaGddGA"},"toBlock":{"type":"string","title":"string_doaGddGA"},"addresses":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}}},"title":"objectOf_LogTopics_string_doaGddGA_string_doaGddGA_addresses_hNbHzH6q"}}],"result":{"name":"newFilterResult","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"newFilterExample","params":[{"name":"privacyGroupId","value":"4rFldHM792LeP/e2WPkTXZedjwKuTr/KwCFTt6mBbkI="},{"name":"filterOptions","value":{"fromBlock":"earliest","toBlock":"latest","addresses":["0x991cc548c154b2953cc48c02f782e1314097dfbb"],"topics":["0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410"]}}],"result":{"name":"newFilterResultExample","value":"0x4a35b92809d73f4f53a2355d62125442"}}]},{"name":"priv_uninstallFilter","summary":"Uninstalls a filter for a private contract with the specified ID. When a filter is no longer required, call this method.","params":[{"name":"privacyGroupId","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"filterId","required":true,"schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}}],"result":{"name":"uninstallFilterResult","schema":{"type":"boolean"}},"examples":[{"name":"uninstallFilterExample","params":[{"name":"privacyGroupId","value":"4rFldHM792LeP/e2WPkTXZedjwKuTr/KwCFTt6mBbkI="},{"name":"filterId","value":"0x4a35b92809d73f4f53a2355d62125442"}],"result":{"name":"uninstallFilterResultExample","value":true}}]},{"name":"priv_debugGetStateRoot","summary":"Returns the state root of the specified privacy group at the specified block.","params":[{"name":"privacyGroupId","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"blockNumber","schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"debugGetStateRootResult","schema":{"type":"string"}},"examples":[{"name":"debugGetStateRootExample","params":[{"name":"privacyGroupId","value":"xJdxvWOEmrs2MCkKWlgArTzWIXFfU/tmVxI3EKssVTk="},{"name":"blockNumber","value":"latest"}],"result":{"name":"debugGetStateRootResultExample","value":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"}}]},{"name":"txpool_besuPendingTransactions","summary":"Lists pending transactions that match the supplied filter conditions.","params":[{"name":"numResults","required":true,"schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},{"name":"fields","required":true,"schema":{"type":"object","properties":{"from":{"type":"object","title":"object_HAgrRKSz"},"gas":{"type":"object","title":"object_HAgrRKSz"},"nonce":{"type":"object","title":"object_HAgrRKSz"}},"title":"objectOf_object_HAgrRKSz_object_HAgrRKSz_object_HAgrRKSz_W2zLpdal"}}],"result":{"name":"besuPendingTransactionsResult","summary":"details of the pending transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},"examples":[{"name":"besuPendingTransactionsExample","params":[{"name":"numResults","value":2},{"name":"fields","value":{"from":{"eq":"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"},"gas":{"lt":"0x5209"},"nonce":{"gt":"0x1"}}}],"result":{"name":"besuPendingTransactionsResultExample","value":{"from":"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73","gas":"0x5208","gasPrice":"0xab5d04c00","hash":"0xb7b2f4306c1c228ec94043da73b582594007091a7dfe024b1f8d6d772284e54b","input":"0x","nonce":"0x2","to":"0xf8be4ebda7f62d79a665294ec1263bfdb59aabf2","value":"0x0","v":"0xfe8","r":"0x5beb711e652c6cf0a589d3cea904eefc4f45ce4372652288701d08cc4412086d","s":"0x3af14a56e63aa5fb7dcb444a89708363a9d2c1eba1f777c67690288415080ded"}}}]},{"name":"txpool_besuStatistics","summary":"Lists statistics about the node transaction pool.","params":[],"result":{"name":"besuStatisticsResult","summary":"transaction pool statistics","schema":{"type":"object","items":[{"name":"maxSize","type":"number","title":"number_YlVY4lgn"},{"name":"localCount","type":"number","title":"number_NLXmAkTQ"},{"name":"remoteCount","type":"number","title":"number_h3AdBvun"}]}},"examples":[{"name":"besuStatisticsExample","params":[],"result":{"name":"besuStatisticsResultExample","value":{"maxSize":4096,"localCount":0,"remoteCount":0}}}]},{"name":"txpool_besuTransactions","summary":"Lists transactions in the node transaction pool.","params":[],"result":{"name":"besuTransactionsResult","summary":"list of transactions","schema":{"title":"transactions","type":"array","items":{"type":"object","properties":{"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"isReceivedFromLocalSource":{"type":"boolean","title":"boolean_vyG3AETh"},"addedToPoolAt":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"}},"title":"objectOf_boolean_vyG3AETh_transactionHash_blockTimeStamp_uMnCtlmD"}}},"examples":[{"name":"besuTransactionsExample","params":[],"result":{"name":"besuTransactionsResultExample","value":[{"hash":"0x8a66830098be4006a3f63a03b6e9b67aa721e04bd6b46d420b8f1937689fb4f1","isReceivedFromLocalSource":true,"addedToPoolAt":"2019-03-21T01:35:50.911Z"},{"hash":"0x41ee803c3987ceb5bcea0fad7a76a8106a2a6dd654409007d9931032ea54579b","isReceivedFromLocalSource":true,"addedToPoolAt":"2019-03-21T01:36:00.374Z"}]}}]}],"components":{"schemas":{"TransactionWithSender":{"title":"Transaction object with sender","type":"object","allOf":[{"required":["from"],"properties":{"from":{"title":"from","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}},{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}]},"HostPort":{"type":"object","properties":{"host":{"type":"string","title":"string_doaGddGA"},"port":{"type":"number","title":"number_Ho1clIqD"}},"title":"objectOf_number_Ho1clIqD_string_doaGddGA_NWOHlwbD"},"TraceObject":{"type":"object","properties":{"gas":{"type":"number","title":"number_Ho1clIqD"},"failed":{"type":"boolean","title":"boolean_vyG3AETh"},"returnValue":{"type":"string","title":"string_doaGddGA"},"structLogs":{"type":"array","items":{"type":"object","properties":{"pc":{"type":"number","title":"number_Ho1clIqD"},"op":{"type":"string","title":"string_doaGddGA"},"gas":{"type":"number","title":"number_Ho1clIqD"},"gasCost":{"type":"number","title":"number_Ho1clIqD"},"depth":{"type":"number","title":"number_Ho1clIqD"},"stack":{"type":"object","title":"object_HAgrRKSz"},"memory":{"type":"object","title":"object_HAgrRKSz"},"storage":{"type":"boolean","title":"boolean_vyG3AETh"}},"title":"objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQ"},"title":"unorderedSetOf_objectOf_boolean_vyG3AETh_object_HAgrRKSz_number_Ho1clIqD_string_doaGddGA_object_HAgrRKSz_number_Ho1clIqD_number_Ho1clIqD_number_Ho1clIqD_qbmaAfyQvLzPQIY9"}}},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"Uint":{"title":"hex encoded unsigned integer","type":"string","pattern":"^0x[0-9a-f]+$"},"ProofNode":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"},"StorageProofKey":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."},"StorageProof":{"title":"storageProofSet","type":"array","description":"Current block header PoW hash.","items":{"title":"storageProof","type":"object","description":"Object proving a relationship of a storage value to an account's storageHash.","properties":{"key":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."},"value":{"title":"storageProofValue","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The value of the storage slot in its account tree"},"proof":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}}}}},"ProofNodes":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}},"PowHash":{"title":"powHash","type":"string","description":"Current block header PoW hash.","pattern":"^0x([a-fA-F\\d]{64})?$"},"SeedHash":{"title":"seedHash","type":"string","description":"The seed hash used for the DAG.","pattern":"^0x([a-fA-F\\d]{64})?$"},"MixHash":{"title":"mixHash","type":"string","description":"The mix digest.","pattern":"^0x([a-fA-F\\d]{64})?$"},"Difficulty":{"title":"difficulty","type":"string","description":"The boundary condition ('target'), 2^256 / difficulty.","pattern":"^0x([a-fA-F\\d]{64})?$"},"FilterId":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."},"BlockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"BlockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"BlockNumberTag":{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]},"BlockOrNull":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]},"IntegerOrNull":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]},"AddressOrNull":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"Receipt":{"title":"receipt","type":"object","description":"The receipt of a transaction","required":["blockHash","blockNumber","contractAddress","cumulativeGasUsed","from","gasUsed","logs","logsBloom","to","transactionHash","transactionIndex"],"properties":{"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"contractAddress":{"title":"ReceiptContractAddress","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}],"description":"The contract address created, if the transaction was a contract creation, otherwise null"},"cumulativeGasUsed":{"title":"ReceiptCumulativeGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The gas units used by the transaction"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gasUsed":{"title":"ReceiptGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total gas used by the transaction"},"logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}},"logsBloom":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"postTransactionState":{"title":"ReceiptPostTransactionState","type":"string","description":"The intermediate stateRoot directly after transaction execution.","pattern":"^0x[a-fA-F\\d]{64}$"},"status":{"title":"ReceiptStatus","description":"Whether or not the transaction threw an error.","type":"boolean"}}},"BloomFilter":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"Log":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}},"Logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}},"Topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"Topic":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"},"TransactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"BlockNumberOrNull":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"BlockHashOrNull":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"NonceOrNull":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"From":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"To":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"Block":{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},"Transaction":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},"Transactions":{"title":"transactions","description":"An array of transactions","type":"array","items":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},"TxTransaction":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},"TransactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"KeccakOrPending":{"title":"keccakOrPending","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}]},"Keccak":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},"Nonce":{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},"Null":{"title":"null","type":"null","description":"Null"},"Integer":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},"Address":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},"Addresses":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"Position":{"title":"position","type":"string","description":"Hex representation of the storage slot where the variable exists","pattern":"^0x([a-fA-F0-9]?)+$"},"DataWord":{"title":"dataWord","type":"string","description":"Hex representation of a 256 bit unit of data","pattern":"^0x([a-fA-F\\d]{64})?$"},"Bytes":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"contentDescriptors":{"Addresses":{"name":"addresses","schema":{"type":"array","description":"List of addresses","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}},"Block":{"name":"block","summary":"A block","description":"A block object","schema":{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}}},"startBlock":{"name":"startBlock","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}},"endBlock":{"name":"endBlock","required":true,"schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}},"Null":{"name":"Null","description":"JSON Null value","summary":"Null value","schema":{"title":"null","type":"null","description":"Null"}},"Signature":{"name":"signature","summary":"The signature.","required":true,"schema":{"title":"signatureBytes","type":"string","description":"Hex representation of byte array between 2 and 65 chars long","pattern":"0x^([A-Fa-f0-9]{2}){65}$"}},"GasPrice":{"name":"gasPrice","required":true,"schema":{"title":"gasPriceResult","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Integer of the current gas price"}},"Transaction":{"required":true,"name":"transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},"Logbloom":{"name":"log bloom","schema":{"type":"object","description":"log bloom index details","properties":{"startBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"endBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"currentBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"requestAccepted":{"type":"boolean","title":"boolean_vyG3AETh"},"caching":{"type":"boolean","title":"boolean_vyG3AETh"}}}},"TransactionResult":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"UncleCountResult":{"name":"uncleCountResult","description":"The Number of total uncles in the given block","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"Message":{"name":"message","required":true,"schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"Filter":{"name":"filter","required":true,"schema":{"title":"filter","type":"object","description":"A filter used to monitor the blockchain for log/events","properties":{"fromBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"toBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"address":{"title":"oneOrArrayOfAddresses","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}]},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}}}}},"Address":{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"BlockHash":{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},"Nonce":{"name":"nonce","required":true,"schema":{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"}},"Position":{"name":"key","required":true,"schema":{"title":"position","type":"string","description":"Hex representation of the storage slot where the variable exists","pattern":"^0x([a-fA-F0-9]?)+$"}},"Logs":{"name":"logs","description":"An array of all logs matching filter with given id.","schema":{"title":"setOfLogs","type":"array","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"FilterId":{"name":"filterId","schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}},"BlockNumber":{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},"TransactionHash":{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}}}} ;
  public transport: HTTPTransport | WebSocketTransport | PostMessageWindowTransport | PostMessageIframeTransport;
  private validator: MethodCallValidator;
  private timeout: number | undefined;

  constructor(options: Options) {

    if (options.transport === undefined || options.transport.type === undefined) {
      throw new Error("Invalid constructor params");
    }
    const {type, host, port, protocol} = options.transport;
    let path = options.transport.path || "";
    if(path && path[0] !== "/") {
        path = "/" + path;
    }
    switch (type) {
      case 'http':
      case 'https':
        this.transport = new HTTPTransport((protocol || type) + "://" + host + ":" + port + path);
        break;
      case 'websocket':
        this.transport = new WebSocketTransport((protocol || "ws://") + host + ":" + port + path);
        break;
      case 'postmessageiframe':
        this.transport = new PostMessageIframeTransport(protocol + "://" + host + ":" + port + path);
        break;
      case 'postmessagewindow':
        this.transport = new PostMessageWindowTransport(protocol + "://" + host + ":" + port + path);
        break;
      default:
        throw new Error("unsupported transport");
        break;
    }
    this.rpc = new Client(new RequestManager([this.transport]));
    this.validator = new MethodCallValidator(HyperledgerBesuJSONRPCSpecification.openrpcDocument);
  }
  /**
   * Adds a JSONRPC notification handler to handle receiving notifications.
   * @example
   * myClient.onNotification((data)=>console.log(data));
   */
  public onNotification(callback: (data: any) => void) {
    this.rpc.onNotification(callback);
  }

  /**
   * Adds an optional JSONRPCError handler to handle receiving errors that cannot be resolved to a specific request
   * @example
   * myClient.onError((err: JSONRPCError)=>console.log(err.message));
   */
  public onError(callback: (data: JSONRPCError) => void) {
     this.rpc.onError(callback);
  }

  /**
   * Sets a default timeout in ms for all requests excluding notifications.
   * @example
   * // 20s timeout
   * myClient.setDefaultTimeout(20000);
   * // Removes timeout from request
   * myClient.setDefaultTimeout(undefined);
   */
   public setDefaultTimeout(ms?: number) {
    this.timeout = ms;
  }

  /**
   * Initiates [[HyperledgerBesuJSONRPCSpecification.startBatch]] in order to build a batch call.
   *
   * Subsequent calls to [[HyperledgerBesuJSONRPCSpecification.request]] will be added to the batch.
   * Once [[HyperledgerBesuJSONRPCSpecification.stopBatch]] is called, the promises for the [[HyperledgerBesuJSONRPCSpecification.request]]
   * will then be resolved.  If there is already a batch in progress this method is a noop.
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public startBatch(): void {
    return this.rpc.startBatch();
  }

  /**
   * Initiates [[Client.stopBatch]] in order to finalize and send the batch to the underlying transport.
   *
   * stopBatch will send the [[HyperledgerBesuJSONRPCSpecification]] calls made since the last [[HyperledgerBesuJSONRPCSpecification.startBatch]] call. For
   * that reason, [[HyperledgerBesuJSONRPCSpecification.startBatch]] MUST be called before [[HyperledgerBesuJSONRPCSpecification.stopBatch]].
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public stopBatch(): void {
    return this.rpc.stopBatch();
  }

  private request(methodName: string, params: any[]): Promise<any> {
    const methodObject = _.find(HyperledgerBesuJSONRPCSpecification.openrpcDocument.methods, ({name}) => name === methodName) as MethodObject;
    const notification = methodObject.result ? false : true;
    const openRpcMethodValidationErrors = this.validator.validate(methodName, params);
    if ( openRpcMethodValidationErrors instanceof MethodNotFoundError || openRpcMethodValidationErrors.length > 0) {
      return Promise.reject(openRpcMethodValidationErrors);
    }

    let rpcParams;
    if (methodObject.paramStructure && methodObject.paramStructure === "by-name") {
      rpcParams = _.zipObject(params, _.map(methodObject.params, "name"));
    } else {
      rpcParams = params;
    }
    if (notification) {
      return this.rpc.notify({method: methodName, params: rpcParams});
    }
    return this.rpc.request({method: methodName, params: rpcParams}, this.timeout);
  }

  
  /**
   * current client version
   */
  // tslint:disable-next-line:max-line-length
  public web3_clientVersion: Web3ClientVersion = (...params) => {
    return this.request("web3_clientVersion", params);
  }
  
  /**
   * Hashes data
   */
  // tslint:disable-next-line:max-line-length
  public web3_sha3: Web3Sha3 = (...params) => {
    return this.request("web3_sha3", params);
  }
  
  /**
   * Adds a static node.
   */
  // tslint:disable-next-line:max-line-length
  public admin_addPeer: AdminAddPeer = (...params) => {
    return this.request("admin_addPeer", params);
  }
  
  /**
   * Changes the log level without restarting Besu. You can change the log level for all logs, or you can change the log level for specific packages or classes.
You can specify only one log level per RPC call.
   */
  // tslint:disable-next-line:max-line-length
  public admin_changeLogLevel: AdminChangeLogLevel = (...params) => {
    return this.request("admin_changeLogLevel", params);
  }
  
  /**
   * Returns networking information about the node. The information includes general information about the node and specific information from each running Ethereum sub-protocol (for example, eth).
   */
  // tslint:disable-next-line:max-line-length
  public admin_nodeInfo: AdminNodeInfo = (...params) => {
    return this.request("admin_nodeInfo", params);
  }
  
  /**
   * Returns networking information about connected remote nodes.
   */
  // tslint:disable-next-line:max-line-length
  public admin_peers: AdminPeers = (...params) => {
    return this.request("admin_peers", params);
  }
  
  /**
   * Generates cached log bloom indexes for blocks. APIs such as eth_getLogs and eth_getFilterLogs use the cache for improved performance.
   */
  // tslint:disable-next-line:max-line-length
  public admin_generateLogBloomCache: AdminGenerateLogBloomCache = (...params) => {
    return this.request("admin_generateLogBloomCache", params);
  }
  
  /**
   * Removes cache files for the specified range of blocks.
   */
  // tslint:disable-next-line:max-line-length
  public admin_logsRemoveCache: AdminLogsRemoveCache = (...params) => {
    return this.request("admin_logsRemoveCache", params);
  }
  
  /**
   * Removes cache files for the specified range of blocks.
   */
  // tslint:disable-next-line:max-line-length
  public admin_logsRepairCache: AdminLogsRepairCache = (...params) => {
    return this.request("admin_logsRepairCache", params);
  }
  
  /**
   * Removes a static node.
   */
  // tslint:disable-next-line:max-line-length
  public admin_removePeer: AdminRemovePeer = (...params) => {
    return this.request("admin_removePeer", params);
  }
  
  /**
   * Returns the accounts for a specified block
   */
  // tslint:disable-next-line:max-line-length
  public debug_accountRange: DebugAccountRange = (...params) => {
    return this.request("debug_accountRange", params);
  }
  
  /**
   * Sends a list of signed transactions. This is used to quickly load a network with a lot of transactions. This does the same thing as calling eth_sendRawTransaction multiple times.
   */
  // tslint:disable-next-line:max-line-length
  public debug_batchSendRawTransaction: DebugBatchSendRawTransaction = (...params) => {
    return this.request("debug_batchSendRawTransaction", params);
  }
  
  /**
   * Returns a list of invalid blocks. This is used to detect and analyze consensus flaws.
   */
  // tslint:disable-next-line:max-line-length
  public debug_getBadBlocks: DebugGetBadBlocks = (...params) => {
    return this.request("debug_getBadBlocks", params);
  }
  
  /**
   * Generates files containing the block trace. A separate file is generated for each transaction in the block.
   */
  // tslint:disable-next-line:max-line-length
  public debug_standardTraceBlockToFile: DebugStandardTraceBlockToFile = (...params) => {
    return this.request("debug_standardTraceBlockToFile", params);
  }
  
  /**
   * Generates files containing the block trace of invalid blocks. A separate file is generated for each transaction in the block.
   */
  // tslint:disable-next-line:max-line-length
  public debug_standardTraceBadBlockToFile: DebugStandardTraceBadBlockToFile = (...params) => {
    return this.request("debug_standardTraceBadBlockToFile", params);
  }
  
  /**
   * Returns the contract storage for the specified range.
   */
  // tslint:disable-next-line:max-line-length
  public debug_storageRangeAt: DebugStorageRangeAt = (...params) => {
    return this.request("debug_storageRangeAt", params);
  }
  
  /**
   * Returns metrics providing information on the internal operation of Besu.
   */
  // tslint:disable-next-line:max-line-length
  public debug_metrics: DebugMetrics = (...params) => {
    return this.request("debug_metrics", params);
  }
  
  /**
   * Reruns the transaction with the same state as when the transaction executed.
   */
  // tslint:disable-next-line:max-line-length
  public debug_traceTransaction: DebugTraceTransaction = (...params) => {
    return this.request("debug_traceTransaction", params);
  }
  
  /**
   * Returns full trace of all invoked opcodes of all transactions included in the block.
   */
  // tslint:disable-next-line:max-line-length
  public debug_traceBlock: DebugTraceBlock = (...params) => {
    return this.request("debug_traceBlock", params);
  }
  
  /**
   * Returns full trace of all invoked opcodes of all transactions included in the block.
   */
  // tslint:disable-next-line:max-line-length
  public debug_traceBlockByHash: DebugTraceBlockByHash = (...params) => {
    return this.request("debug_traceBlockByHash", params);
  }
  
  /**
   * Returns full trace of all invoked opcodes of all transactions included in the block.
   */
  // tslint:disable-next-line:max-line-length
  public debug_traceBlockByNumber: DebugTraceBlockByNumber = (...params) => {
    return this.request("debug_traceBlockByNumber", params);
  }
  
  /**
   * Returns a list of addresses owned by client.
   */
  // tslint:disable-next-line:max-line-length
  public eth_accounts: EthAccounts = (...params) => {
    return this.request("eth_accounts", params);
  }
  
  /**
   * Returns the number of most recent block.
   */
  // tslint:disable-next-line:max-line-length
  public eth_blockNumber: EthBlockNumber = (...params) => {
    return this.request("eth_blockNumber", params);
  }
  
  /**
   * Executes a new message call (locally) immediately without creating a transaction on the block chain.
   */
  // tslint:disable-next-line:max-line-length
  public eth_call: EthCall = (...params) => {
    return this.request("eth_call", params);
  }
  
  /**
   * Returns the currently configured chain id
   */
  // tslint:disable-next-line:max-line-length
  public eth_chainId: EthChainId = (...params) => {
    return this.request("eth_chainId", params);
  }
  
  /**
   * Returns the client coinbase address.
   */
  // tslint:disable-next-line:max-line-length
  public eth_coinbase: EthCoinbase = (...params) => {
    return this.request("eth_coinbase", params);
  }
  
  /**
   * Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.
   */
  // tslint:disable-next-line:max-line-length
  public eth_estimateGas: EthEstimateGas = (...params) => {
    return this.request("eth_estimateGas", params);
  }
  
  /**
   * Returns the current price per gas in wei
   */
  // tslint:disable-next-line:max-line-length
  public eth_gasPrice: EthGasPrice = (...params) => {
    return this.request("eth_gasPrice", params);
  }
  
  /**
   * Returns Ether balance of a given or account or contract
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBalance: EthGetBalance = (...params) => {
    return this.request("eth_getBalance", params);
  }
  
  /**
   * Gets a block for a given hash
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockByHash: EthGetBlockByHash = (...params) => {
    return this.request("eth_getBlockByHash", params);
  }
  
  /**
   * Gets a block for a given number
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockByNumber: EthGetBlockByNumber = (...params) => {
    return this.request("eth_getBlockByNumber", params);
  }
  
  /**
   * Returns the number of transactions in a block from a block matching the given block hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockTransactionCountByHash: EthGetBlockTransactionCountByHash = (...params) => {
    return this.request("eth_getBlockTransactionCountByHash", params);
  }
  
  /**
   * Returns the number of transactions in a block from a block matching the given block number.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockTransactionCountByNumber: EthGetBlockTransactionCountByNumber = (...params) => {
    return this.request("eth_getBlockTransactionCountByNumber", params);
  }
  
  /**
   * Returns code at a given contract address
   */
  // tslint:disable-next-line:max-line-length
  public eth_getCode: EthGetCode = (...params) => {
    return this.request("eth_getCode", params);
  }
  
  /**
   * Returns an array of all logs matching a given filter object.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getLogs: EthGetLogs = (...params) => {
    return this.request("eth_getLogs", params);
  }
  
  /**
   * Gets a storage value from a contract address, a position, and an optional blockNumber
   */
  // tslint:disable-next-line:max-line-length
  public eth_getStorageAt: EthGetStorageAt = (...params) => {
    return this.request("eth_getStorageAt", params);
  }
  
  /**
   * Returns the information about a transaction requested by the block hash and index of which it was mined.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionByBlockHashAndIndex: EthGetTransactionByBlockHashAndIndex = (...params) => {
    return this.request("eth_getTransactionByBlockHashAndIndex", params);
  }
  
  /**
   * Returns the information about a transaction requested by the block number and index of which it was mined.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionByBlockNumberAndIndex: EthGetTransactionByBlockNumberAndIndex = (...params) => {
    return this.request("eth_getTransactionByBlockNumberAndIndex", params);
  }
  
  /**
   * Returns the information about a transaction requested by transaction hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionByHash: EthGetTransactionByHash = (...params) => {
    return this.request("eth_getTransactionByHash", params);
  }
  
  /**
   * Returns the number of transactions sent from an address
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionCount: EthGetTransactionCount = (...params) => {
    return this.request("eth_getTransactionCount", params);
  }
  
  /**
   * Returns the receipt information of a transaction by its hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionReceipt: EthGetTransactionReceipt = (...params) => {
    return this.request("eth_getTransactionReceipt", params);
  }
  
  /**
   * Returns information about a uncle of a block by hash and uncle index position.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getUncleByBlockHashAndIndex: EthGetUncleByBlockHashAndIndex = (...params) => {
    return this.request("eth_getUncleByBlockHashAndIndex", params);
  }
  
  /**
   * Returns information about a uncle of a block by hash and uncle index position.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getUncleByBlockNumberAndIndex: EthGetUncleByBlockNumberAndIndex = (...params) => {
    return this.request("eth_getUncleByBlockNumberAndIndex", params);
  }
  
  /**
   * Returns the number of uncles in a block from a block matching the given block hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getUncleCountByBlockHash: EthGetUncleCountByBlockHash = (...params) => {
    return this.request("eth_getUncleCountByBlockHash", params);
  }
  
  /**
   * Returns the number of uncles in a block from a block matching the given block number.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getUncleCountByBlockNumber: EthGetUncleCountByBlockNumber = (...params) => {
    return this.request("eth_getUncleCountByBlockNumber", params);
  }
  
  /**
   * Returns the account- and storage-values of the specified account including the Merkle-proof.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getProof: EthGetProof = (...params) => {
    return this.request("eth_getProof", params);
  }
  
  /**
   * Returns the hash of the current block, the seedHash, and the boundary condition to be met ('target').
   */
  // tslint:disable-next-line:max-line-length
  public eth_getWork: EthGetWork = (...params) => {
    return this.request("eth_getWork", params);
  }
  
  /**
   * Returns the number of hashes per second that the node is mining with.
   */
  // tslint:disable-next-line:max-line-length
  public eth_hashrate: EthHashrate = (...params) => {
    return this.request("eth_hashrate", params);
  }
  
  /**
   * Returns true if client is actively mining new blocks.
   */
  // tslint:disable-next-line:max-line-length
  public eth_mining: EthMining = (...params) => {
    return this.request("eth_mining", params);
  }
  
  /**
   * Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges.
   */
  // tslint:disable-next-line:max-line-length
  public eth_newBlockFilter: EthNewBlockFilter = (...params) => {
    return this.request("eth_newBlockFilter", params);
  }
  
  /**
   * Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges.
   */
  // tslint:disable-next-line:max-line-length
  public eth_newFilter: EthNewFilter = (...params) => {
    return this.request("eth_newFilter", params);
  }
  
  /**
   * Polling method for a filter, which returns an array of logs which occurred since last poll.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getFilterChanges: EthGetFilterChanges = (...params) => {
    return this.request("eth_getFilterChanges", params);
  }
  
  /**
   * Returns an array of all logs matching filter with given id.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getFilterLogs: EthGetFilterLogs = (...params) => {
    return this.request("eth_getFilterLogs", params);
  }
  
  /**
   * Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additionally Filters timeout when they aren't requested with eth_getFilterChanges for a period of time.
   */
  // tslint:disable-next-line:max-line-length
  public eth_uninstallFilter: EthUninstallFilter = (...params) => {
    return this.request("eth_uninstallFilter", params);
  }
  
  /**
   * Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges.
   */
  // tslint:disable-next-line:max-line-length
  public eth_newPendingTransactionFilter: EthNewPendingTransactionFilter = (...params) => {
    return this.request("eth_newPendingTransactionFilter", params);
  }
  
  /**
   * Creates new message call transaction or a contract creation for signed transactions.
   */
  // tslint:disable-next-line:max-line-length
  public eth_sendRawTransaction: EthSendRawTransaction = (...params) => {
    return this.request("eth_sendRawTransaction", params);
  }
  
  /**
   * Used for submitting mining hashrate.
   */
  // tslint:disable-next-line:max-line-length
  public eth_submitHashrate: EthSubmitHashrate = (...params) => {
    return this.request("eth_submitHashrate", params);
  }
  
  /**
   * Used for submitting a proof-of-work solution.
   */
  // tslint:disable-next-line:max-line-length
  public eth_submitWork: EthSubmitWork = (...params) => {
    return this.request("eth_submitWork", params);
  }
  
  /**
   * Returns an object with data about the sync status or false.
   */
  // tslint:disable-next-line:max-line-length
  public eth_syncing: EthSyncing = (...params) => {
    return this.request("eth_syncing", params);
  }
  
  /**
   * If successful this returns the subscription id. Subscriptions are creates with a regular RPC call with eth_subscribe as method and the subscription name as first parameter. 
   */
  // tslint:disable-next-line:max-line-length
  public eth_subscribe: EthSubscribe = (...params) => {
    return this.request("eth_subscribe", params);
  }
  
  /**
   * Subscriptions are cancelled with a regular RPC call with eth_unsubscribe as method and the subscription id as first parameter.
   */
  // tslint:disable-next-line:max-line-length
  public eth_unsubscribe: EthUnsubscribe = (...params) => {
    return this.request("eth_unsubscribe", params);
  }
  
  /**
   * Discards a proposal to add or remove a validator with the specified address.
   */
  // tslint:disable-next-line:max-line-length
  public ibft_discardValidatorVote: IbftDiscardValidatorVote = (...params) => {
    return this.request("ibft_discardValidatorVote", params);
  }
  
  /**
   * Returns votes cast in the current epoch.
   */
  // tslint:disable-next-line:max-line-length
  public ibft_getPendingVotes: IbftGetPendingVotes = (...params) => {
    return this.request("ibft_getPendingVotes", params);
  }
  
  /**
   * Provides the following validator metrics for the specified range:
   */
  // tslint:disable-next-line:max-line-length
  public ibft_getSignerMetrics: IbftGetSignerMetrics = (...params) => {
    return this.request("ibft_getSignerMetrics", params);
  }
  
  /**
   * Lists the validators defined in the specified block.
   */
  // tslint:disable-next-line:max-line-length
  public ibft_getValidatorsByBlockHash: IbftGetValidatorsByBlockHash = (...params) => {
    return this.request("ibft_getValidatorsByBlockHash", params);
  }
  
  /**
   * Lists the validators defined in the specified block.
   */
  // tslint:disable-next-line:max-line-length
  public ibft_getValidatorsByBlockNumber: IbftGetValidatorsByBlockNumber = (...params) => {
    return this.request("ibft_getValidatorsByBlockNumber", params);
  }
  
  /**
   * Proposes to add or remove a validator with the specified address.
   */
  // tslint:disable-next-line:max-line-length
  public ibft_proposeValidatorVote: IbftProposeValidatorVote = (...params) => {
    return this.request("ibft_proposeValidatorVote", params);
  }
  
  /**
   * Returns the enode URL.
   */
  // tslint:disable-next-line:max-line-length
  public net_enode: NetEnode = (...params) => {
    return this.request("net_enode", params);
  }
  
  /**
   * Whether the client is actively listening for network connections.
   */
  // tslint:disable-next-line:max-line-length
  public net_listening: NetListening = (...params) => {
    return this.request("net_listening", params);
  }
  
  /**
   * Returns the number of peers currently connected to the client.
   */
  // tslint:disable-next-line:max-line-length
  public net_peerCount: NetPeerCount = (...params) => {
    return this.request("net_peerCount", params);
  }
  
  /**
   * Returns enabled services (for example, jsonrpc) and the host and port for each service.
   */
  // tslint:disable-next-line:max-line-length
  public net_services: NetServices = (...params) => {
    return this.request("net_services", params);
  }
  
  /**
   * Returns the network ID.
   */
  // tslint:disable-next-line:max-line-length
  public net_version: NetVersion = (...params) => {
    return this.request("net_version", params);
  }
  
  /**
   * Provides transaction processing of type trace for the specified block.
   */
  // tslint:disable-next-line:max-line-length
  public trace_block: TraceBlock = (...params) => {
    return this.request("trace_block", params);
  }
  
  /**
   * Provides transaction processing tracing per block.
   */
  // tslint:disable-next-line:max-line-length
  public trace_replayBlockTransactions: TraceReplayBlockTransactions = (...params) => {
    return this.request("trace_replayBlockTransactions", params);
  }
  
  /**
   * Invokes a private contract function locally and does not change the privacy group state.
   */
  // tslint:disable-next-line:max-line-length
  public priv_call: PrivCall = (...params) => {
    return this.request("priv_call", params);
  }
  
  /**
   * Creates a group of nodes.
   */
  // tslint:disable-next-line:max-line-length
  public priv_createPrivacyGroup: PrivCreatePrivacyGroup = (...params) => {
    return this.request("priv_createPrivacyGroup", params);
  }
  
  /**
   * Returns the state root of the specified privacy group at the specified block.
   */
  // tslint:disable-next-line:max-line-length
  public priv_deletePrivacyGroup: PrivDeletePrivacyGroup = (...params) => {
    return this.request("priv_deletePrivacyGroup", params);
  }
  
  /**
   * Distributes a signed, RLP encoded private transaction.
   */
  // tslint:disable-next-line:max-line-length
  public priv_distributeRawTransaction: PrivDistributeRawTransaction = (...params) => {
    return this.request("priv_distributeRawTransaction", params);
  }
  
  /**
   * Returns a list of privacy groups containing only the listed members
   */
  // tslint:disable-next-line:max-line-length
  public priv_findPrivacyGroup: PrivFindPrivacyGroup = (...params) => {
    return this.request("priv_findPrivacyGroup", params);
  }
  
  /**
   * Returns the code of the private smart contract at the specified address. Compiled smart contract code is stored as a hexadecimal value.
   */
  // tslint:disable-next-line:max-line-length
  public priv_getCode: PrivGetCode = (...params) => {
    return this.request("priv_getCode", params);
  }
  
  /**
   * Returns the private transaction count for the specified account and group of sender and recipients.
   */
  // tslint:disable-next-line:max-line-length
  public priv_getEeaTransactionCount: PrivGetEeaTransactionCount = (...params) => {
    return this.request("priv_getEeaTransactionCount", params);
  }
  
  /**
   * Returns an array of logs for the specified filter for a private contract.
   */
  // tslint:disable-next-line:max-line-length
  public priv_getFilterChanges: PrivGetFilterChanges = (...params) => {
    return this.request("priv_getFilterChanges", params);
  }
  
  /**
   * Polls the specified filter for a private contract and returns an array of changes that have occurred since the last poll.
   */
  // tslint:disable-next-line:max-line-length
  public priv_getFilterLogs: PrivGetFilterLogs = (...params) => {
    return this.request("priv_getFilterLogs", params);
  }
  
  /**
   * Returns an array of logs matching a specified filter object.
   */
  // tslint:disable-next-line:max-line-length
  public priv_getLogs: PrivGetLogs = (...params) => {
    return this.request("priv_getLogs", params);
  }
  
  /**
   * Returns the address of the privacy precompiled contract. The address is derived and based on the value of the privacy-flexible-groups-enabled option.
   */
  // tslint:disable-next-line:max-line-length
  public priv_getPrivacyPrecompileAddress: PrivGetPrivacyPrecompileAddress = (...params) => {
    return this.request("priv_getPrivacyPrecompileAddress", params);
  }
  
  /**
   * Returns the private transaction if you are a participant, otherwise, null.
   */
  // tslint:disable-next-line:max-line-length
  public priv_getPrivateTransaction: PrivGetPrivateTransaction = (...params) => {
    return this.request("priv_getPrivateTransaction", params);
  }
  
  /**
   * Returns the private transaction count for specified account and privacy group.
   */
  // tslint:disable-next-line:max-line-length
  public priv_getTransactionCount: PrivGetTransactionCount = (...params) => {
    return this.request("priv_getTransactionCount", params);
  }
  
  /**
   * Returns information about the private transaction after mining the transaction. Receipts for pending transactions are not available.
   */
  // tslint:disable-next-line:max-line-length
  public priv_getTransactionReceipt: PrivGetTransactionReceipt = (...params) => {
    return this.request("priv_getTransactionReceipt", params);
  }
  
  /**
   * Creates a log filter for a private contract. To poll for logs associated with the created filter, use priv_getFilterChanges. To get all logs associated with the filter, use priv_getFilterLogs.
   */
  // tslint:disable-next-line:max-line-length
  public priv_newFilter: PrivNewFilter = (...params) => {
    return this.request("priv_newFilter", params);
  }
  
  /**
   * Uninstalls a filter for a private contract with the specified ID. When a filter is no longer required, call this method.
   */
  // tslint:disable-next-line:max-line-length
  public priv_uninstallFilter: PrivUninstallFilter = (...params) => {
    return this.request("priv_uninstallFilter", params);
  }
  
  /**
   * Returns the state root of the specified privacy group at the specified block.
   */
  // tslint:disable-next-line:max-line-length
  public priv_debugGetStateRoot: PrivDebugGetStateRoot = (...params) => {
    return this.request("priv_debugGetStateRoot", params);
  }
  
  /**
   * Lists pending transactions that match the supplied filter conditions.
   */
  // tslint:disable-next-line:max-line-length
  public txpool_besuPendingTransactions: TxpoolBesuPendingTransactions = (...params) => {
    return this.request("txpool_besuPendingTransactions", params);
  }
  
  /**
   * Lists statistics about the node transaction pool.
   */
  // tslint:disable-next-line:max-line-length
  public txpool_besuStatistics: TxpoolBesuStatistics = (...params) => {
    return this.request("txpool_besuStatistics", params);
  }
  
  /**
   * Lists transactions in the node transaction pool.
   */
  // tslint:disable-next-line:max-line-length
  public txpool_besuTransactions: TxpoolBesuTransactions = (...params) => {
    return this.request("txpool_besuTransactions", params);
  }
  
}
export default HyperledgerBesuJSONRPCSpecification;
