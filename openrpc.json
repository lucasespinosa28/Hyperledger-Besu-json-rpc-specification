{
    "openrpc": "1.2.4",
    "info": {
      "title": "",
      "version": "1.0.0"
    },
    "methods": [
        {
			"name": "admin_addPeer",
			"summary": "Adds a static node.",
			"params": []	
		},
        {
			"name": "admin_changeLogLevel",
			"summary": "Changes the log level without restarting Besu. You can change the log level for all logs, or you can change the log level for specific packages or classes.",
			"params": []		
		},
        {
			"name": "admin_generateLogBloomCache",
			"summary": "Generates cached log bloom indexes for blocks. APIs such as eth_getLogs and eth_getFilterLogs use the cache for improved performance.",
			"params": []		
		},
        {
			"name": "admin_logsRemoveCache",
			"summary": "Removes cache files for the specified range of blocks.",
			"params": []		
		},
        {
			"name": "admin_logsRepairCache",
			"summary": "Repairs cached logs by fixing all segments starting with the specified block number.",
			"params": []	
		},
        {
			"name": "admin_nodeInfo",
			"summary": "Returns networking information about the node. The information includes general information about the node and specific information from each running Ethereum sub-protocol (for example, eth).",
			"params": []		
		},
        {
			"name": "admin_peers",
			"summary": "Returns networking information about connected remote nodes.",
			"params": []		
		},
        {
			"name": "admin_removePeer",
			"summary": "Removes a static node.",
			"params": []		
		},
        {
			"name": "eth_accounts",
			"summary": "Returns a list of account addresses a client owns.",
			"params": []	
		},
        {
			"name": "eth_blockNumber",
			"summary": "Returns the index corresponding to the block number of the current chain head.",
			"params": []		
		},
        {
			"name": "eth_call",
			"summary": "Invokes a contract function locally and does not change the state of the blockchain.",
			"params": []		
		},
        {
			"name": "eth_chainId",
			"summary": "Returns the chain ID.",
			"params": []		
		},
        {
			"name": "eth_coinbase",
			"summary": "Returns the client coinbase address. The coinbase address is the account to pay mining rewards to.",
			"params": []		
		},
        {
			"name": "eth_estimateGas",
			"summary": "Returns an estimate of the gas required for a transaction to complete. The estimation process does not use gas and the transaction is not added to the blockchain. The resulting estimate can be greater than the amount of gas the transaction ends up using, for reasons including EVM mechanics and node performance.",
			"params": []		
		},
        {
			"name": "eth_gasPrice",
			"summary": "Returns a percentile gas unit price for the most recent blocks, in Wei. By default, the last 100 blocks are examined and the 50th percentile gas unit price (that is, the median value) is returned.",
			"params": []		
		},
        {
			"name": "eth_getBalance",
			"summary": "Returns the account balance of the specified address.",
			"params": []		
		},
        {
			"name": "eth_getBlockByHash",
			"summary": "Returns information about the block matching the specified block hash.",
			"params": []		
		},
        {
			"name": "eth_getBlockByNumber",
			"summary": "Returns information about the block matching the specified block number.",
			"params": []		
		},
        {
			"name": "eth_getBlockTransactionCountByHash",
			"summary": "Returns the number of transactions in the block matching the specified block hash.",
			"params": []		
		},
        {
			"name": "eth_getBlockTransactionCountByNumber",
			"summary": "Returns the number of transactions in a block matching the specified block number.",
			"params": []		
		},
        {
			"name": "eth_getCode",
			"summary": "Returns the code of the smart contract at the specified address. Besu stores compiled smart contract code as a hexadecimal value.",
			"params": []		
		},
        {
			"name": "eth_getFilterChanges",
			"summary": "Polls the specified filter and returns an array of changes that have occurred since the last poll.",
			"params": []		
		},
        {
			"name": "eth_getFilterLogs",
			"summary": "Returns an array of logs for the specified filter.",
			"params": []		
		},
        {
			"name": "eth_getLogs",
			"summary": "Returns an array of logs matching a specified filter object.",
			"params": []		
		},
        {
			"name": "eth_getMinerDataByBlockHash",
			"summary": "Returns miner data for the specified block.",
			"params": []		
		},
        {
			"name": "eth_getMinerDataByBlockNumber",
			"summary": "Returns miner data for the specified block.",
			"params": []		
		},
        {
			"name": "eth_getProof",
			"summary": "Returns the account and storage values of the specified account, including the Merkle proof.\nThe API allows IoT devices or mobile apps which are unable to run light clients to verify responses from untrusted sources, by using a trusted block hash.",
			"params": []		
		},
        {
			"name": "eth_getStorageAt",
			"summary": "Returns the value of a storage position at a specified address.",
			"params": []		
		},
        {
			"name": "eth_getTransactionByBlockHashAndIndex",
			"summary": "Returns transaction information for the specified block hash and transaction index position.",
			"params": []		
		},
        {
			"name": "eth_getTransactionByBlockNumberAndIndex",
			"summary": "Returns transaction information for the specified block number and transaction index position.",
			"params": []		
		},
        {
			"name": "eth_getTransactionByHash",
			"summary": "Returns transaction information for the specified transaction hash.",
			"params": []		
		},
        {
			"name": "eth_getTransactionCount",
			"summary": "Returns the number of transactions sent from a specified address. Use the pending tag to get the next account nonce not used by any pending transactions.",
			"params": []		
		},
        {
			"name": "eth_getTransactionReceipt",
			"summary": "Returns the receipt of a transaction by transaction hash. Receipts for pending transactions are not available.",
			"params": []		
		},
        {
			"name": "eth_getUncleByBlockHashAndIndex",
			"summary": "Returns uncle specified by block hash and index.",
			"params": []		
		},
        {
			"name": "eth_getUncleByBlockNumberAndIndex",
			"summary": "Returns uncle specified by block number and index.",
			"params": []		
		},
        {
			"name": "eth_getUncleCountByBlockHash",
			"summary": "Returns the number of uncles in a block from a block matching the given block hash.",
			"params": []		
		},
        {
			"name": "eth_getUncleCountByBlockNumber",
			"summary": "Returns the number of uncles in a block matching the specified block number.",
			"params": []		
		},
        {
			"name": "eth_getWork",
			"summary": "Returns the hash of the current block, the seed hash, and the required target boundary condition.",
			"params": []		
		},
        {
			"name": "eth_hashrate",
			"summary": "Returns the number of hashes per second with which the node is mining.",
			"params": []		
		},
        {
			"name": "eth_mining",
			"summary": "Whether the client is actively mining new blocks. Besu pauses mining while the client synchronizes with the network regardless of command settings or methods called.",
			"params": []		
		},
        {
			"name": "eth_newBlockFilter",
			"summary": "Creates a filter to retrieve new block hashes. To poll for new blocks, use eth_getFilterChanges.",
			"params": []		
		},
        {
			"name": "eth_newFilter",
			"summary": "Creates a log filter. To poll for logs associated with the created filter, use eth_getFilterChanges. To get all logs associated with the filter, use eth_getFilterLogs.",
			"params": []		
		},
        {
			"name": "eth_protocolVersion",
			"summary": "Returns current Ethereum protocol version.",
			"params": []		
		},
        {
			"name": "eth_sendRawTransaction",
			"summary": "Sends a signed transaction. A transaction can send ether, deploy a contract, or interact with a contract.",
			"params": []		
		},
        {
			"name": "eth_submitHashrate",
			"summary": "Submits the mining hashrate. This is used by mining software such as Ethminer.",
			"params": []		
		},
        {
			"name": "eth_submitWork",
			"summary": "Submits a proof of work (Ethash) solution. This is used by mining software such as Ethminer.",
			"params": []		
		},
        {
			"name": "eth_syncing",
			"summary": "Returns an object with data about the synchronization status, or false if not synchronizin.",
			"params": []		
		},
        {
			"name": "eth_uninstallFilter",
			"summary": "Uninstalls a filter with the specified ID. When a filter is no longer required, call this method.",
			"params": []		
		}
    ]
  }
  