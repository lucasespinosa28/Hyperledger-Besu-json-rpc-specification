{"data":{"openrpcDocument":{"id":"openrpcDocument","openrpcDocument":"{\n  \"openrpc\": \"1.2.4\",\n  \"info\": {\n    \"title\": \"hyperledger besu JSON-RPC Specification\",\n    \"description\": \"A specification of the standard interface for Hyperledger Besu clients.\",\n    \"license\": {\n      \"name\": \"CC0-1.0\",\n      \"url\": \"https://creativecommons.org/publicdomain/zero/1.0/legalcode\"\n    },\n    \"version\": \"0.0.4\"\n  },\n  \"servers\": [\n    {\n      \"name\": \"default local node\",\n      \"url\": \"http://localhost:8545\"\n    }\n  ],\n  \"methods\": [\n    {\n      \"name\": \"web3_clientVersion\",\n      \"description\": \"Returns the version of the current client\",\n      \"summary\": \"current client version\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"clientVersion\",\n        \"description\": \"client version\",\n        \"schema\": {\n          \"title\": \"clientVersion\",\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"Current client\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"node version\",\n            \"value\": \"besu/v21.7.1/linux-x86_64/adoptopenjdk-java-11\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"web3_sha3\",\n      \"summary\": \"Hashes data\",\n      \"description\": \"Hashes data using the Keccak-256 algorithm\",\n      \"params\": [\n        {\n          \"name\": \"data\",\n          \"description\": \"data to hash using the Keccak-256 algorithm\",\n          \"summary\": \"data to hash\",\n          \"schema\": {\n            \"title\": \"data\",\n            \"type\": \"string\",\n            \"pattern\": \"^0x[a-fA-F\\\\d]+$\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"hashedData\",\n        \"description\": \"Keccak-256 hash of the given data\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Keccak\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"sha3Example\",\n          \"params\": [\n            {\n              \"name\": \"sha3ParamExample\",\n              \"value\": \"0x68656c6c6f20776f726c00\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"sha3ResultExample\",\n            \"value\": \"0x5e39a0a66544c0668bde22d61c47a8710000ece931f13b84d3b2feb44ec96d3f\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"admin_addPeer\",\n      \"summary\": \"Adds a static node.\",\n      \"params\": [\n        {\n          \"name\": \"enodeURL\",\n          \"required\": true,\n          \"description\": \"enode URL of peer to add.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"addPeerResult\",\n        \"description\": \"true if peer added or false if peer already a static node\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"addPeerExample\",\n          \"params\": [\n            {\n              \"name\": \"enodeURL\",\n              \"value\": \"enode://c93f69ddd83d3db3e93e5165d60b4f5d93a9731df776beee94c5f8a0c770e41bdea69094136402db0cef7af63f0aa636ff676d4a88c6d37276dfa4160c21ed5f@127.0.0.1:30303\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"addPeerResultExample\",\n            \"value\": true\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"admin_changeLogLevel\",\n      \"summary\": \"Changes the log level without restarting Besu. You can change the log level for all logs, or you can change the log level for specific packages or classes.\\nYou can specify only one log level per RPC call.\",\n      \"params\": [\n        {\n          \"name\": \"level\",\n          \"required\": true,\n          \"description\": \"log level\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"log_filter\",\n          \"description\": \"(optional) packages or classes for which to change the log level\",\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"changeLogLevelResult\",\n        \"description\": \"Success if the log level has changed, otherwise error\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"changeLogLevelExample\",\n          \"params\": [\n            {\n              \"name\": \"level\",\n              \"value\": \"DEBUG\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"changeLogLevelResultExample\",\n            \"value\": \"Success\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"admin_nodeInfo\",\n      \"summary\": \"Returns networking information about the node. The information includes general information about the node and specific information from each running Ethereum sub-protocol (for example, eth).\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"nodeInfoResult\",\n        \"description\": \"node object\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"enode\": {\n              \"type\": \"string\"\n            },\n            \"listenAddr\": {\n              \"type\": \"string\"\n            },\n            \"ip\": {\n              \"type\": \"string\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"ports\": {\n              \"properties\": {\n                \"discovery\": {\n                  \"type\": \"number\"\n                },\n                \"listener\": {\n                  \"type\": \"number\"\n                }\n              }\n            },\n            \"protocols\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"eth\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"config\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"chainId\": {\n                          \"type\": \"number\"\n                        },\n                        \"petersburgBlock\": {\n                          \"type\": \"number\"\n                        },\n                        \"contractSizeLimit\": {\n                          \"type\": \"number\"\n                        },\n                        \"ethash\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"fixeddifficulty\": {\n                              \"type\": \"number\"\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"difficulty\": {\n                      \"type\": \"number\"\n                    },\n                    \"genesis\": {\n                      \"type\": \"string\"\n                    },\n                    \"head\": {\n                      \"type\": \"string\"\n                    },\n                    \"network\": {\n                      \"type\": \"number\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"nodeInfoExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"nodeInfoResultExample\",\n            \"value\": {\n              \"enode\": \"enode://f7226276f9dcfed1ffae8055261d96c4a61ac32769f50ea1955995f9a584b3a5792451931754258625a43c9b4132eb455347b183fdebe98abb90ab00d7c917b2@127.0.0.1:30303\",\n              \"listenAddr\": \"127.0.0.1:30303\",\n              \"ip\": \"127.0.0.1\",\n              \"name\": \"besu/v21.7.1/linux-x86_64/adoptopenjdk-java-11\",\n              \"id\": \"f7226276f9dcfed1ffae8055261d96c4a61ac32769f50ea1955995f9a584b3a5792451931754258625a43c9b4132eb455347b183fdebe98abb90ab00d7c917b2\",\n              \"ports\": {\n                \"discovery\": 30303,\n                \"listener\": 30303\n              },\n              \"protocols\": {\n                \"eth\": {\n                  \"config\": {\n                    \"chainId\": 1337,\n                    \"petersburgBlock\": 0,\n                    \"contractSizeLimit\": 2147483647,\n                    \"ethash\": {\n                      \"fixeddifficulty\": 100\n                    }\n                  },\n                  \"difficulty\": 5551236,\n                  \"genesis\": \"0xa08d1edb37ba1c62db764ef7c2566cbe368b850f5b3762c6c24114a3fd97b87f\",\n                  \"head\": \"0xc3a8a3d54dc136d3189f89dbc2949252e17d8b921bb729851fe8cc4e7e491f81\",\n                  \"network\": 2018\n                }\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"admin_peers\",\n      \"summary\": \"Returns networking information about connected remote nodes.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"peersResult\",\n        \"description\": \"list of objects returned for each remote node, with the following fields.\",\n        \"schema\": {\n          \"type\": \"object\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"peersExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"peersResultExample\",\n            \"value\": []\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"admin_generateLogBloomCache\",\n      \"summary\": \"Generates cached log bloom indexes for blocks. APIs such as eth_getLogs and eth_getFilterLogs use the cache for improved performance.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/startBlock\"\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/endBlock\"\n        }\n      ],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/Logbloom\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"generateLogBloomCacheExample\",\n          \"params\": [\n            {\n              \"name\": \"startBlock\",\n              \"value\": \"0x0\"\n            },\n            {\n              \"name\": \"endBlock\",\n              \"value\": \"0x10000\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"generateLogBloomCacheResultExample\",\n            \"value\": {\n              \"startBlock\": \"0x0\",\n              \"endBlock\": \"0x10000\",\n              \"currentBlock\": \"0xd37f\",\n              \"requestAccepted\": true,\n              \"caching\": true\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"admin_logsRemoveCache\",\n      \"summary\": \"Removes cache files for the specified range of blocks.\",\n      \"params\": [\n        {\n          \"name\": \"fromBlock\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        },\n        {\n          \"name\": \"toBlock\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"logsRemoveCacheResult\",\n        \"description\": \"Cache Removed status or error\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"Status\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"logsRemoveCacheExample\",\n          \"params\": [\n            {\n              \"name\": \"fromBlock\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"toBlock\",\n              \"value\": \"100\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"logsRemoveCacheResultExample\",\n            \"value\": {\n              \"Status\": \"Cache Removed\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"admin_logsRepairCache\",\n      \"summary\": \"Removes cache files for the specified range of blocks.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/startBlock\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"logsRepairCacheResult\",\n        \"description\": \"status of the repair request; Started or Already running\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"Status\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"logsRepairCacheExample\",\n          \"params\": [\n            {\n              \"name\": \"startBlock\",\n              \"value\": \"1200\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"logsRepairCacheResultExample\",\n            \"value\": {\n              \"Status\": \"Already running\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"admin_removePeer\",\n      \"summary\": \"Removes a static node.\",\n      \"params\": [\n        {\n          \"name\": \"enodeURL\",\n          \"required\": true,\n          \"description\": \"enode URL of peer to remove.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"removePeerResult\",\n        \"description\": \"true if peer removed or false if peer not a static node\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"removePeerExample\",\n          \"params\": [\n            {\n              \"name\": \"startenodeURLBlock\",\n              \"value\": \"enode://f59c0ab603377b6ec88b89d5bb41b98fc385030ab1e4b03752db6f7dab364559d92c757c13116ae6408d2d33f0138e7812eb8b696b2a22fe3332c4b5127b22a3@127.0.0.1:30304\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"removePeerResultExample\",\n            \"value\": false\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_accountRange\",\n      \"summary\": \"Returns the accounts for a specified block\",\n      \"params\": [\n        {\n          \"name\": \"blockHashOrNumber\",\n          \"required\": true,\n          \"description\": \"block hash or number\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          }\n        },\n        {\n          \"name\": \"txIndex\",\n          \"required\": true,\n          \"description\": \"transaction index from which to start\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Integer\"\n          }\n        },\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"description\": \"address hash from which to start\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          }\n        },\n        {\n          \"name\": \"limit\",\n          \"required\": true,\n          \"description\": \"maximum number of account entries to return\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Integer\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"accountRangeResult\",\n        \"description\": \"account details object with the following fields:\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"addressMap\": {\n              \"type\": \"object\"\n            },\n            \"nextKey\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"accountRangeExample\",\n          \"params\": [\n            {\n              \"name\": \"blockHashOrNumber\",\n              \"value\": \"12345\"\n            },\n            {\n              \"name\": \"txIndex\",\n              \"value\": 0\n            },\n            {\n              \"name\": \"address\",\n              \"value\": \"0\"\n            },\n            {\n              \"name\": \"limit\",\n              \"value\": 5\n            }\n          ],\n          \"result\": {\n            \"name\": \"accountRangeResultExample\",\n            \"value\": {\n              \"addressMap\": {\n                \"0x984f41eb67eb23e42139410eade1008a90b01a018ce2577fea44262c6fc16ce3\": \"0x0000000000000000000000000000000000000000\",\n                \"0xe52111628d5433237c36e91f159620decfa7747d736dee9676f3afc40471618a\": \"0x0000000000000000000000000000000000000000\",\n                \"0xbcdea13f0e9ff4fa520c658f547404b4762de6e62f6475f0eb4d1568015570ff\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\"\n              },\n              \"nextKey\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_batchSendRawTransaction\",\n      \"summary\": \"Sends a list of signed transactions. This is used to quickly load a network with a lot of transactions. This does the same thing as calling eth_sendRawTransaction multiple times.\",\n      \"params\": [\n        {\n          \"name\": \"signedTransactionData\",\n          \"required\": true,\n          \"description\": \"signed transaction data array\",\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Bytes\"\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"batchSendRawTransactionResult\",\n        \"description\": \"object returned for each transaction.\",\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"index\": {\n                    \"type\": \"number\"\n                  },\n                  \"success\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"index\": {\n                    \"type\": \"number\"\n                  },\n                  \"success\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"errorMessage\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            ]\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"batchSendRawTransactionExample\",\n          \"params\": [\n            {\n              \"name\": \"RawTransactions1\",\n              \"value\": \"0xf868808203e882520894627306090abab3a6e1400e9345bc60c78a8bef57872386f26fc10000801ba0ac74ecfa0e9b85785f042c143ead4780931234cc9a032fce99fab1f45e0d90faa02fd17e8eb433d4ca47727653232045d4f81322619c0852d3fe8ddcfcedb66a43\"\n            },\n            {\n              \"name\": \"RawTransactions2\",\n              \"value\": \"0x416\"\n            },\n            {\n              \"name\": \"RawTransactions3\",\n              \"value\": \"0xf868018203e882520894627306090abab3a6e1400e9345bc60c78a8bef57872386f26fc10000801ca0b24ea1bee8fe36984c36acbf80979a4509f23fc17141851e08d505c0df158aa0a00472a05903d4cd7a811bd4d5c59cc105d93f5943f3393f253e92e65fc36e7ce0\"\n            },\n            {\n              \"name\": \"RawTransactions4\",\n              \"value\": \"0xf868808203e882520894627306090abab3a6e1400e9345bc60c78a8bef5787470de4df820000801ca0f7936b4de04792e3c65095cfbfd1399d231368f5f05f877588c0c8509f6c98c9a01834004dead527c8da1396eede42e1c60e41f38a77c2fd13a6e495479c729b99\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"batchSendRawTransactionResultExample\",\n            \"value\": [\n              {\n                \"index\": 0,\n                \"success\": true\n              },\n              {\n                \"index\": 1,\n                \"success\": false,\n                \"errorMessage\": \"Invalid raw transaction hex\"\n              },\n              {\n                \"index\": 2,\n                \"success\": true\n              },\n              {\n                \"index\": 3,\n                \"success\": false,\n                \"errorMessage\": \"TRANSACTION_REPLACEMENT_UNDERPRICED\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_getBadBlocks\",\n      \"summary\": \"Returns a list of invalid blocks. This is used to detect and analyze consensus flaws.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getBadBlockResult\",\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/components/schemas/Block\"\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBadBlocksExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getBadBlocksResultExample\",\n            \"value\": \"\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_standardTraceBlockToFile\",\n      \"summary\": \"Generates files containing the block trace. A separate file is generated for each transaction in the block.\",\n      \"params\": [\n        {\n          \"name\": \"blockHash\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          }\n        },\n        {\n          \"name\": \"Options\",\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"txHash\": {\n                \"$ref\": \"#/components/schemas/BlockHash\"\n              },\n              \"disableMemory\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"standardTraceBlockToFileResult\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"standardTraceBlockToFileExample\",\n          \"params\": [\n            {\n              \"name\": \"blockHash\",\n              \"value\": \"0x6cacedb0ad16953d05bf266995c1e087b196d9411438934963c1fa9ba3be1ae0\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"standardTraceBlockToFileResultExample\",\n            \"value\": \"/Users/me/mynode/goerli/data/traces/block_0x2dc0b6c4-4-0x4ff04c4a-1612820117332\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_standardTraceBadBlockToFile\",\n      \"summary\": \"Generates files containing the block trace of invalid blocks. A separate file is generated for each transaction in the block.\",\n      \"params\": [\n        {\n          \"name\": \"blockHash\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"standardTraceBadBlockToFileResult\",\n        \"description\": \"location of the generated trace files\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"standardTraceBlockToFileExample\",\n          \"params\": [\n            {\n              \"name\": \"blockHash\",\n              \"value\": \"0x6cacedb0ad16953d05bf266995c1e087b196d9411438934963c1fa9ba3be1ae0\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"standardTraceBlockToFileResultExample\",\n            \"value\": \"/Users/me/mynode/goerli/data/traces/block_0x53741e9e-0-0x407ec43d-1600951088172\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_storageRangeAt\",\n      \"summary\": \"Returns the contract storage for the specified range.\",\n      \"params\": [\n        {\n          \"name\": \"blockHash\",\n          \"required\": true,\n          \"description\": \"block hash or number\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          }\n        },\n        {\n          \"name\": \"txIndex\",\n          \"required\": true,\n          \"description\": \"transaction index from which to start\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Integer\"\n          }\n        },\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"description\": \"address hash from which to start\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          }\n        },\n        {\n          \"name\": \"startKey\",\n          \"required\": true,\n          \"description\": \"maximum number of account entries to return\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"limit\",\n          \"required\": true,\n          \"description\": \"maximum number of account entries to return\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Integer\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"storageRangeAtResult\",\n        \"description\": \"the contract storage for the specified range.\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"storage\": {\n              \"type\": \"object\"\n            },\n            \"nextKey\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"storageRangeAtExample\",\n          \"params\": [\n            {\n              \"name\": \"blockHash\",\n              \"value\": \"0x2b76b3a2fc44c0e21ea183d06c846353279a7acf12abcc6fb9d5e8fb14ae2f8c\"\n            },\n            {\n              \"name\": \"txIndex\",\n              \"value\": 0\n            },\n            {\n              \"name\": \"address\",\n              \"value\": \"0x0e0d2c8f7794e82164f11798276a188147fbd415\"\n            },\n            {\n              \"name\": \"startKey\",\n              \"value\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n            },\n            {\n              \"name\": \"limit\",\n              \"value\": 1\n            }\n          ],\n          \"result\": {\n            \"name\": \"storageRangeAtResultExample\",\n            \"value\": {\n              \"storage\": {\n                \"0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\": {\n                  \"key\": null,\n                  \"value\": \"0x0000000000000000000000000000000000000000000000000000000000000001\"\n                }\n              },\n              \"nextKey\": \"0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_metrics\",\n      \"summary\": \"Returns metrics providing information on the internal operation of Besu.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"metricsResult\",\n        \"description\": \"metrics object\",\n        \"schema\": {\n          \"type\": \"object\"\n        }\n      }\n    },\n    {\n      \"name\": \"debug_traceTransaction\",\n      \"summary\": \"Reruns the transaction with the same state as when the transaction executed.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/TransactionHash\"\n        },\n        {\n          \"name\": \"options\",\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"disableStorage\": {\n                \"type\": \"boolean\"\n              },\n              \"disableMemory\": {\n                \"type\": \"boolean\"\n              },\n              \"disableStack \": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"traceTransactionResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TraceObject\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"traceTransactionExample\",\n          \"params\": [\n            {\n              \"name\": \"transactionHash\",\n              \"value\": \"0x2cc6c94c21685b7e0f8ddabf277a5ccf98db157c62619cde8baea696a74ed18e\"\n            },\n            {\n              \"name\": \"options\",\n              \"value\": {\n                \"disableStorage\": true\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"traceTransactionResultExample\",\n            \"value\": {\n              \"gas\": 21000,\n              \"failed\": false,\n              \"returnValue\": \"\",\n              \"structLogs\": [\n                {\n                  \"pc\": 0,\n                  \"op\": \"STOP\",\n                  \"gas\": 0,\n                  \"gasCost\": 0,\n                  \"depth\": 1,\n                  \"stack\": [],\n                  \"memory\": [],\n                  \"storage\": null\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_traceBlock\",\n      \"summary\": \"Returns full trace of all invoked opcodes of all transactions included in the block.\",\n      \"params\": [\n        {\n          \"name\": \"RLP of the block\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Bytes\"\n            }\n          }\n        },\n        {\n          \"name\": \"options\",\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"disableStorage\": {\n                \"type\": \"boolean\"\n              },\n              \"disableMemory\": {\n                \"type\": \"boolean\"\n              },\n              \"disableStack \": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"traceBlockResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TraceObject\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"traceBlockExample\",\n          \"params\": [\n            {\n              \"name\": \"transactionHash\",\n              \"value\": \"0xf90277f90208a05a41d0e66b4120775176c09fcf39e7c0520517a13d2b57b18d33d342df038bfca01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794e6a7a1d47ff21b6321162aea7c6cb457d5476bcaa00e0df2706b0a4fb8bd08c9246d472abbe850af446405d9eba1db41db18b4a169a04513310fcb9f6f616972a3b948dc5d547f280849a87ebb5af0191f98b87be598a0fe2bf2a941abf41d72637e5b91750332a30283efd40c424dc522b77e6f0ed8c4b9010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000860153886c1bbd82b44382520b8252088455c426598b657468706f6f6c2e6f7267a0b48c515a9dde8d346c3337ea520aa995a4738bb595495506125449c1149d6cf488ba4f8ecd18aab215f869f86780862d79883d2000825208945df9b87991262f6ba471f09758cde1c0fc1de734827a69801ca088ff6cf0fefd94db46111149ae4bfc179e9b94721fffd821d38d16464b3f71d0a045e0aff800961cfce805daef7016b9b675c137a6a41a548f7b60a3484c06a33ac0\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"traceBlockResultExample\",\n            \"value\": {\n              \"gas\": 21000,\n              \"failed\": false,\n              \"returnValue\": \"\",\n              \"structLogs\": [\n                {\n                  \"pc\": 0,\n                  \"op\": \"STOP\",\n                  \"gas\": 0,\n                  \"gasCost\": 0,\n                  \"depth\": 1,\n                  \"stack\": [],\n                  \"memory\": [],\n                  \"storage\": null\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_traceBlockByHash\",\n      \"summary\": \"Returns full trace of all invoked opcodes of all transactions included in the block.\",\n      \"params\": [\n        {\n          \"name\": \"blockHash\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          }\n        },\n        {\n          \"name\": \"options\",\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"disableStorage\": {\n                \"type\": \"boolean\"\n              },\n              \"disableMemory\": {\n                \"type\": \"boolean\"\n              },\n              \"disableStack \": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"traceBlockByHashResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TraceObject\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"traceBlockByHashExample\",\n          \"params\": [\n            {\n              \"name\": \"blockHash\",\n              \"value\": \"0xaceb3b2c9b25b0589230873921eb894b28722011b8df63977145517d754875a5\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"traceBlockByHashResultExample\",\n            \"value\": {\n              \"gas\": 21000,\n              \"failed\": false,\n              \"returnValue\": \"\",\n              \"structLogs\": [\n                {\n                  \"pc\": 0,\n                  \"op\": \"STOP\",\n                  \"gas\": 0,\n                  \"gasCost\": 0,\n                  \"depth\": 1,\n                  \"stack\": [],\n                  \"memory\": [],\n                  \"storage\": null\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"debug_traceBlockByNumber\",\n      \"summary\": \"Returns full trace of all invoked opcodes of all transactions included in the block.\",\n      \"params\": [\n        {\n          \"name\": \"blockNumber\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        },\n        {\n          \"name\": \"options\",\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"disableStorage\": {\n                \"type\": \"boolean\"\n              },\n              \"disableMemory\": {\n                \"type\": \"boolean\"\n              },\n              \"disableStack \": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"traceBlockByHashResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TraceObject\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"traceBlockByNumberExample\",\n          \"params\": [\n            {\n              \"name\": \"BlocNumber\",\n              \"value\": \"0x1\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"traceBlockByNumberResultExample\",\n            \"value\": {\n              \"pc\": 0,\n              \"op\": \"STOP\",\n              \"gas\": 0,\n              \"gasCost\": 0,\n              \"depth\": 1,\n              \"stack\": [],\n              \"memory\": [],\n              \"storage\": null,\n              \"reason\": null\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_accounts\",\n      \"summary\": \"Returns a list of addresses owned by client.\",\n      \"params\": [],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/Addresses\"\n      }\n    },\n    {\n      \"name\": \"eth_blockNumber\",\n      \"summary\": \"Returns the number of most recent block.\",\n      \"params\": [],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"blockNumberExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"blockNumberResultExample\",\n            \"value\": \"0x14a45\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_call\",\n      \"summary\": \"Executes a new message call (locally) immediately without creating a transaction on the block chain.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/Transaction\"\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"returnValue\",\n        \"description\": \"The return value of the executed contract\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Bytes\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"callExample\",\n          \"params\": [\n            {\n              \"name\": \"Transaction\",\n              \"value\": {\n                \"from\": \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n                \"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\n                \"gas\": \"0x76c0\",\n                \"gasPrice\": \"0x9184e72a000\",\n                \"value\": \"0x9184e72a\",\n                \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"\n              }\n            },\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"callExampleResult\",\n            \"value\": \"0x\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_chainId\",\n      \"summary\": \"Returns the currently configured chain id\",\n      \"description\": \"Returns the currently configured chain id, a value used in replay-protected transaction signing as introduced by [EIP-155](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md).\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"chainId\",\n        \"description\": \"hex format integer of the current chain id. Defaults are ETC=61, ETH=1, Morden=62.\",\n        \"schema\": {\n          \"title\": \"chainId\",\n          \"type\": \"string\",\n          \"pattern\": \"^0x[a-fA-F\\\\d]+$\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"chainIdExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"chainIdExampleResult\",\n            \"value\": \"0x1\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_coinbase\",\n      \"summary\": \"Returns the client coinbase address.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"address\",\n        \"description\": \"The address owned by the client that is used as default for things like the mining reward\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Address\"\n        }\n      }\n    },\n    {\n      \"name\": \"eth_estimateGas\",\n      \"summary\": \"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/Transaction\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"gasUsed\",\n        \"description\": \"The amount of gas used\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Integer\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"estimateGasExample\",\n          \"params\": [\n            {\n              \"name\": \"Transaction\",\n              \"value\": {\n                \"from\": \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n                \"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\n                \"gas\": \"0x76c0\",\n                \"gasPrice\": \"0x9184e72a000\",\n                \"value\": \"0x9184e72a\",\n                \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"\n              }\n            },\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"estimateGasExampleResult\",\n            \"value\": \"0x5498\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_gasPrice\",\n      \"summary\": \"Returns the current price per gas in wei\",\n      \"params\": [],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/GasPrice\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"gasPriceExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"gasPriceExampleResult\",\n            \"value\": \"0x57b17e500\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getBalance\",\n      \"summary\": \"Returns Ether balance of a given or account or contract\",\n      \"params\": [\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"description\": \"The address of the account or contract\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        },\n        {\n          \"name\": \"blockNumber\",\n          \"description\": \"A BlockNumber at which to request the balance\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBalanceResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/IntegerOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBalanceExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\"\n            },\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBalanceExampleResult\",\n            \"value\": \"0x540x7c256203080098\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getBlockByHash\",\n      \"summary\": \"Gets a block for a given hash\",\n      \"params\": [\n        {\n          \"name\": \"blockHash\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          }\n        },\n        {\n          \"name\": \"includeTransactions\",\n          \"description\": \"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.\",\n          \"required\": true,\n          \"schema\": {\n            \"title\": \"isTransactionsIncluded\",\n            \"type\": \"boolean\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBlockByHashResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockByHashExample\",\n          \"params\": [\n            {\n              \"name\": \"blockHash\",\n              \"value\": \"0xaf5526fcb88b2f0d163c9a78ee678bf95b20115dc3d4e2b7b1f5fc4a308724a0\"\n            },\n            {\n              \"name\": \"isTransactionsIncluded\",\n              \"value\": true\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockByHashExampleResult\",\n            \"value\": [\n              {\n                \"difficulty\": \"0xbfabcdbd93dda\",\n                \"extraData\": \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\",\n                \"gasLimit\": \"0x79f39e\",\n                \"gasUsed\": \"0x79ccd3\",\n                \"hash\": \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\n                \"logsBloom\": \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\",\n                \"miner\": \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\",\n                \"mixHash\": \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\",\n                \"nonce\": \"0x4db7a1c01d8a8072\",\n                \"number\": \"0x5bad55\",\n                \"parentHash\": \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\",\n                \"receiptsRoot\": \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\",\n                \"sha3Uncles\": \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\",\n                \"size\": \"0x41c7\",\n                \"stateRoot\": \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\",\n                \"timestamp\": \"0x5b541449\",\n                \"totalDifficulty\": \"0x12ac11391a2f3872fcd\",\n                \"transactions\": [\n                  \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\",\n                  \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\",\n                  \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\",\n                  \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\",\n                  \"0x241d89f7888fbcfadfd415ee967882fec6fdd67c07ca8a00f2ca4c910a84c7dd\"\n                ],\n                \"transactionsRoot\": \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\",\n                \"uncles\": [\n                  \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\"\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getBlockByNumber\",\n      \"summary\": \"Gets a block for a given number\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        },\n        {\n          \"name\": \"includeTransactions\",\n          \"description\": \"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.\",\n          \"required\": true,\n          \"schema\": {\n            \"title\": \"isTransactionsIncluded\",\n            \"type\": \"boolean\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBlockByNumberResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockByNumberExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"0x5BAD55\"\n            },\n            {\n              \"name\": \"includeTransactions\",\n              \"value\": false\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockByNumberExampleResult\",\n            \"value\": [\n              {\n                \"difficulty\": \"0xbfabcdbd93dda\",\n                \"extraData\": \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\",\n                \"gasLimit\": \"0x79f39e\",\n                \"gasUsed\": \"0x79ccd3\",\n                \"hash\": \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\n                \"logsBloom\": \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\",\n                \"miner\": \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\",\n                \"mixHash\": \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\",\n                \"nonce\": \"0x4db7a1c01d8a8072\",\n                \"number\": \"0x5bad55\",\n                \"parentHash\": \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\",\n                \"receiptsRoot\": \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\",\n                \"sha3Uncles\": \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\",\n                \"size\": \"0x41c7\",\n                \"stateRoot\": \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\",\n                \"timestamp\": \"0x5b541449\",\n                \"totalDifficulty\": \"0x12ac11391a2f3872fcd\",\n                \"transactions\": [\n                  \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\",\n                  \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\",\n                  \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\"\n                ],\n                \"transactionsRoot\": \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\",\n                \"uncles\": [\n                  \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\"\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getBlockTransactionCountByHash\",\n      \"summary\": \"Returns the number of transactions in a block from a block matching the given block hash.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockHash\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"blockTransactionCountByHash\",\n        \"description\": \"The Number of total transactions in the given block\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/IntegerOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockTransactionCountByHashExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockHash\",\n              \"value\": \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockTransactionCountByHashExampleResult\",\n            \"value\": \"0x50\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getBlockTransactionCountByNumber\",\n      \"summary\": \"Returns the number of transactions in a block from a block matching the given block number.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"blockTransactionCountByHash\",\n        \"description\": \"The Number of total transactions in the given block\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/IntegerOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockTransactionCountByNumberExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"0xC51AF5\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockTransactionCountByNumberExampleResult\",\n            \"value\": \"0x82\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getCode\",\n      \"summary\": \"Returns code at a given contract address\",\n      \"params\": [\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"description\": \"The address of the contract\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        },\n        {\n          \"name\": \"blockNumber\",\n          \"description\": \"A BlockNumber of which the code existed\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"bytes\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Bytes\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getCodeExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": \"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\"\n            },\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getCodeExampleResult\",\n            \"value\": \"0x0x60606040...\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getLogs\",\n      \"summary\": \"Returns an array of all logs matching a given filter object.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/Filter\"\n        }\n      ],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/Logs\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"eth_getLogsExample\",\n          \"params\": [\n            {\n              \"name\": \"Filter\",\n              \"value\": {\n                \"address\": \"0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\",\n                \"topics\": [\n                  \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n                ],\n                \"blockHash\": \"0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"Logs\",\n            \"value\": {\n              \"address\": \"0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\",\n              \"blockHash\": \"0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb\",\n              \"blockNumber\": \"0x429d3b\",\n              \"data\": \"0x000000000000000000000000000000000000000000000000000000012a05f200\",\n              \"logIndex\": \"0x56\",\n              \"removed\": false,\n              \"topics\": [\n                \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n                \"0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\",\n                \"0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\"\n              ],\n              \"transactionHash\": \"0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b\",\n              \"transactionIndex\": \"0xac\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getStorageAt\",\n      \"summary\": \"Gets a storage value from a contract address, a position, and an optional blockNumber\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/Address\"\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/Position\"\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"dataWord\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/DataWord\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getStorageAtExample\",\n          \"params\": [\n            {\n              \"name\": \"Data\",\n              \"value\": \"0x295a70b2de5e3953354a6a8344e616ed314d7251\"\n            },\n            {\n              \"name\": \"Quantity\",\n              \"value\": \"0x0\"\n            },\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getStorageAtResultExample\",\n            \"value\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getTransactionByBlockHashAndIndex\",\n      \"summary\": \"Returns the information about a transaction requested by the block hash and index of which it was mined.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockHash\"\n        },\n        {\n          \"name\": \"index\",\n          \"description\": \"The ordering in which a transaction is mined within its block.\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Integer\"\n          }\n        }\n      ],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/TransactionResult\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionByBlockHashAndIndexExample\",\n          \"params\": [\n            {\n              \"name\": \"blockHashExample\",\n              \"value\": \"0xc0f4906fea23cf6f3cce98cb44e8e1449e455b28d684dfa9ff65426495584de6\"\n            },\n            {\n              \"name\": \"indexExample\",\n              \"value\": \"0x0\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTransactionByBlockHashAndIndexResultExample\",\n            \"value\": {\n              \"blockHash\": \"0xc0f4906fea23cf6f3cce98cb44e8e1449e455b28d684dfa9ff65426495584de6\",\n              \"blockNumber\": \"0x1e8480\",\n              \"from\": \"0x32be343b94f860124dc4fee278fdcbd38c102d88\",\n              \"gas\": \"0x51615\",\n              \"gasPrice\": \"0x6fc23ac00\",\n              \"hash\": \"0xc55e2b90168af6972193c1f86fa4d7d7b31a29c156665d15b9cd48618b5177ef\",\n              \"input\": \"0x\",\n              \"nonce\": \"0x1efc5\",\n              \"to\": \"0x104994f45d9d697ca104e5704a7b77d7fec3537c\",\n              \"transactionIndex\": \"0x0\",\n              \"value\": \"0x821878651a4d70000\",\n              \"type\": \"0x0\",\n              \"v\": \"0x1b\",\n              \"r\": \"0x51222d91a379452395d0abaff981af4cfcc242f25cfaf947dea8245a477731f9\",\n              \"s\": \"0x3a997c910b4701cca5d933fb26064ee5af7fe3236ff0ef2b58aa50b25aff8ca5\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getTransactionByBlockNumberAndIndex\",\n      \"summary\": \"Returns the information about a transaction requested by the block number and index of which it was mined.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        },\n        {\n          \"name\": \"index\",\n          \"description\": \"The ordering in which a transaction is mined within its block.\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Integer\"\n          }\n        }\n      ],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/TransactionResult\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionByBlockNumberAndIndexExample\",\n          \"params\": [\n            {\n              \"name\": \"blockNumber\",\n              \"value\": \"0xa1c0ff\"\n            },\n            {\n              \"name\": \"indexExample\",\n              \"value\": \"0x0\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTransactionByBlockNumberAndIndexResultExample\",\n            \"value\": {\n              \"blockHash\": \"0xf345d6ac2cb6290489915178fef0b2fc7f5a7312dd06773c77532de6740b2b4d\",\n              \"blockNumber\": \"0xa1c0ff\",\n              \"from\": \"0x79c384ac9c32e90f00a214c77caac1392ec8cdea\",\n              \"gas\": \"0xafbe\",\n              \"gasPrice\": \"0x1270b01800\",\n              \"hash\": \"0x61b27f711f58ee3090c0976c7e90d2b7eafeb7b889f0db593234f04f8ce07f22\",\n              \"input\": \"0xa9059cbb0000000000000000000000004b1a99467a284cc690e3237bc69105956816f7620000000000000000000000000000000000000000000000000000001919617600\",\n              \"nonce\": \"0xa\",\n              \"to\": \"0xf9e5af7b42d31d51677c75bbbd37c1986ec79aee\",\n              \"transactionIndex\": \"0x0\",\n              \"value\": \"0x0\",\n              \"type\": \"0x0\",\n              \"v\": \"0x1b\",\n              \"r\": \"0x2123cdbd1130f726ebed55fd2295239778dd4161495d2733f374d7863fc42ab1\",\n              \"s\": \"0x1f08fd53ff2c3969b88d5e622561d62a799ae68e36f5142689dbfde44bbe1bed\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getTransactionByHash\",\n      \"summary\": \"Returns the information about a transaction requested by transaction hash.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/TransactionHash\"\n        }\n      ],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/TransactionResult\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionByHashExample\",\n          \"params\": [\n            {\n              \"name\": \"TransactionHash\",\n              \"value\": \"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTransactionByHashResultExample\",\n            \"value\": {\n              \"hash\": \"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\",\n              \"blockHash\": \"0x1d59ff54b1eb26b013ce3cb5fc9dab3705b415a67127a003c3e61eb445bb8df2\",\n              \"blockNumber\": \"0x5daf3b\",\n              \"chainId\": \"0x1\",\n              \"from\": \"0xa7d9ddbe1f17865597fbd27ec712455208b6b76d\",\n              \"gas\": \"0xc350\",\n              \"gasPrice\": \"0x4a817c800\",\n              \"input\": \"0x68656c6c6f21\",\n              \"nonce\": \"0x15\",\n              \"r\": \"0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea\",\n              \"s\": \"0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c\",\n              \"to\": \"0xf02c1c8e6114b1dbe8937a39260b5b0a374432bb\",\n              \"transactionIndex\": \"0x41\",\n              \"v\": \"0x25\",\n              \"value\": \"0xf3dbb76162000\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getTransactionCount\",\n      \"summary\": \"Returns the number of transactions sent from an address\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/Address\"\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"transactionCount\",\n        \"schema\": {\n          \"title\": \"nonceOrNull\",\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/components/schemas/Nonce\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/Null\"\n            }\n          ]\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionCountExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": \"0x9d8f8572f345e1ae53db1dFA4a7fce49B467bD7f\"\n            },\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTransactionCountResultExample\",\n            \"value\": \"0x219\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getTransactionReceipt\",\n      \"summary\": \"Returns the receipt information of a transaction by its hash.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/TransactionHash\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"transactionReceiptResult\",\n        \"description\": \"returns either a receipt or null\",\n        \"schema\": {\n          \"title\": \"transactionReceiptOrNull\",\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/components/schemas/Receipt\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/Null\"\n            }\n          ]\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionReceiptExample\",\n          \"params\": [\n            {\n              \"name\": \"TransactionHash\",\n              \"value\": \"0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTransactionReceiptResultExample\",\n            \"value\": {\n              \"transactionHash\": \"0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b\",\n              \"blockHash\": \"0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb\",\n              \"blockNumber\": \"0x429d3b\",\n              \"contractAddress\": null,\n              \"cumulativeGasUsed\": \"0x64b559\",\n              \"from\": \"0x00b46c2526e227482e2ebb8f4c69e4674d262e75\",\n              \"gasUsed\": \"0xcaac\",\n              \"logs\": [\n                {\n                  \"blockHash\": \"0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb\",\n                  \"address\": \"0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\",\n                  \"logIndex\": \"0x56\",\n                  \"data\": \"0x000000000000000000000000000000000000000000000000000000012a05f200\",\n                  \"removed\": false,\n                  \"topics\": [\n                    \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n                    \"0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\",\n                    \"0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\"\n                  ],\n                  \"blockNumber\": \"0x429d3b\",\n                  \"transactionIndex\": \"0xac\",\n                  \"transactionHash\": \"0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b\"\n                }\n              ],\n              \"logsBloom\": \"0xn              \"root\": \"0x3ccba97c7fcc7e1636ce2d44be1a806a8999df26eab80a928205714a878d5114\",\n              \"status\": null,\n              \"to\": \"0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\",\n              \"transactionIndex\": \"0xac\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getUncleByBlockHashAndIndex\",\n      \"summary\": \"Returns information about a uncle of a block by hash and uncle index position.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockHash\"\n        },\n        {\n          \"name\": \"index\",\n          \"description\": \"The ordering in which a uncle is included within its block.\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Integer\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"uncle\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getUncleByBlockHashAndIndexExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockHash\",\n              \"value\": \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"\n            },\n            {\n              \"name\": \"index\",\n              \"value\": \"0x0\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getUncleByBlockHashAndIndexResultExample\",\n            \"value\": {\n              \"difficulty\": \"0xbf93da424b943\",\n              \"extraData\": \"0x65746865726d696e652d657539\",\n              \"gasLimit\": \"0x7a121d\",\n              \"gasUsed\": \"0x79ea62\",\n              \"hash\": \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\",\n              \"logsBloom\": \"0x0948432021200401804810002000000000381001001202440000010020000080a016262050e44850268052000400100505022305a64000054004200b0c04110000080c1055c42001054b804940a0401401008a00112d80082113400c10006580140005011a40220020000010001c0a00082300434002000050840010102082801c2000148540201004491814020480080111a0300600000003800640024200109c00202010044000880000106810a1a010000028a0100000422000140011000050a2a44b3080001060800000540c108102102600d000004730404a880100600021080100403000180000062642408b440060590400080101e046f08000000430\",\n              \"miner\": \"0xea674fdde714fd979de3edf0f56aa9716b898ec8\",\n              \"mixHash\": \"0x0b15fe0a9aa789c167b0f5ade7b72969d9f2193014cb4e98382254f60ffb2f4a\",\n              \"nonce\": \"0xa212d6400b89b3f6\",\n              \"number\": \"0x5bad54\",\n              \"parentHash\": \"0x05e19fb68d9ec798073808e8b3170875cb327d4b6cde7d6f60fe194677bb26fd\",\n              \"receiptsRoot\": \"0x90807b32c4aa4610c57289de57fa68ba50ed53f14dd2c25f1862aa049029dcd6\",\n              \"sha3Uncles\": \"0xf763576c1ea6a8c61a206e16b1a2451bec5cba1c7545d7ff733a1e8c78715569\",\n              \"size\": \"0x216\",\n              \"stateRoot\": \"0xebc7a1603bfffe0a14bdb89f898e2f2824abb40f04579beb7b920c56d6e273c9\",\n              \"timestamp\": \"0x5b54143f\",\n              \"transactionsRoot\": \"0x7562cba41e067b364b933e7b566fb2444f6954fef3964a5a487d4cd79d97a56c\",\n              \"uncles\": []\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getUncleByBlockNumberAndIndex\",\n      \"summary\": \"Returns information about a uncle of a block by hash and uncle index position.\",\n      \"params\": [\n        {\n          \"name\": \"uncleBlockNumber\",\n          \"description\": \"The block in which the uncle was included\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        },\n        {\n          \"name\": \"index\",\n          \"description\": \"The ordering in which a uncle is included within its block.\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Integer\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"uncleResult\",\n        \"description\": \"returns an uncle block or null\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getUncleByBlockNumberAndIndexExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"0x29c\"\n            },\n            {\n              \"name\": \"index\",\n              \"value\": \"0x0\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getUncleByBlockNumberAndIndexResultExample\",\n            \"value\": {\n              \"difficulty\": \"0x57f117f5c\",\n              \"extraData\": \"0x476574682f76312e302e302f77696e646f77732f676f312e342e32\",\n              \"gasLimit\": \"0x1388\",\n              \"gasUsed\": \"0x0\",\n              \"hash\": \"0x932bdf904546a2287a2c9b2ede37925f698a7657484b172d4e5184f80bdd464d\",\n              \"logsBloom\": \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n              \"miner\": \"0x5bf5e9cf9b456d6591073513de7fd69a9bef04bc\",\n              \"mixHash\": \"0x4500aa4ee2b3044a155252e35273770edeb2ab6f8cb19ca8e732771484462169\",\n              \"nonce\": \"0x24732773618192ac\",\n              \"number\": \"0x299\",\n              \"parentHash\": \"0xa779859b1ee558258b7008bbabff272280136c5dd3eb3ea3bfa8f6ae03bf91e5\",\n              \"receiptsRoot\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n              \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\n              \"size\": \"0x21d\",\n              \"stateRoot\": \"0x2604fbf5183f5360da249b51f1b9f1e0f315d2ff3ffa1a4143ff221ad9ca1fec\",\n              \"timestamp\": \"0x55ba4827\",\n              \"transactionsRoot\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n              \"uncles\": []\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getUncleCountByBlockHash\",\n      \"summary\": \"Returns the number of uncles in a block from a block matching the given block hash.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockHash\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"uncleCountResult\",\n        \"description\": \"The Number of total uncles in the given block\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/IntegerOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getUncleCountByBlockHashExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockHash\",\n              \"value\": \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getUncleCountByBlockHashResultExample\",\n            \"value\": \"0x1\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getUncleCountByBlockNumber\",\n      \"summary\": \"Returns the number of uncles in a block from a block matching the given block number.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/UncleCountResult\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"getUncleCountByBlockNumberExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"0xe8\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getUncleCountByBlockNumberResultExample\",\n            \"value\": \"0x0\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getProof\",\n      \"summary\": \"Returns the account- and storage-values of the specified account including the Merkle-proof.\",\n      \"params\": [\n        {\n          \"name\": \"address\",\n          \"description\": \"The address of the account or contract\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        },\n        {\n          \"name\": \"storageKeys\",\n          \"required\": true,\n          \"schema\": {\n            \"title\": \"storageKeys\",\n            \"description\": \"A storage key is indexed from the solidity compiler by the order it is declared. For mappings it uses the keccak of the mapping key with its position (and recursively for X-dimensional mappings)\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/StorageProofKey\"\n            }\n          }\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"account\",\n        \"schema\": {\n          \"title\": \"proofAccountOrNull\",\n          \"oneOf\": [\n            {\n              \"title\": \"proofAccount\",\n              \"type\": \"object\",\n              \"description\": \"The merkle proofs of the specified account connecting them to the blockhash of the block specified\",\n              \"properties\": {\n                \"address\": {\n                  \"title\": \"proofAccountAddress\",\n                  \"description\": \"The address of the account or contract of the request\",\n                  \"$ref\": \"#/components/schemas/Address\"\n                },\n                \"accountProof\": {\n                  \"$ref\": \"#/components/schemas/ProofNodes\"\n                },\n                \"balance\": {\n                  \"title\": \"proofAccountBalance\",\n                  \"description\": \"The Ether balance of the account or contract of the request\",\n                  \"$ref\": \"#/components/schemas/Integer\"\n                },\n                \"codeHash\": {\n                  \"title\": \"proofAccountCodeHash\",\n                  \"description\": \"The code hash of the contract of the request (keccak(NULL) if external account)\",\n                  \"$ref\": \"#/components/schemas/Keccak\"\n                },\n                \"nonce\": {\n                  \"title\": \"proofAccountNonce\",\n                  \"description\": \"The transaction count of the account or contract of the request\",\n                  \"$ref\": \"#/components/schemas/Nonce\"\n                },\n                \"storageHash\": {\n                  \"title\": \"proofAccountStorageHash\",\n                  \"description\": \"The storage hash of the contract of the request (keccak(rlp(NULL)) if external account)\",\n                  \"$ref\": \"#/components/schemas/Keccak\"\n                },\n                \"storageProof\": {\n                  \"$ref\": \"#/components/schemas/StorageProof\"\n                }\n              }\n            },\n            {\n              \"$ref\": \"#/components/schemas/Null\"\n            }\n          ]\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getProofExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": \"0x7F0d15C7FAae65896648C8273B6d7E43f58Fa842\"\n            },\n            {\n              \"name\": \"StorageProofKey\",\n              \"value\": [\n                \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\"\n              ]\n            },\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getProofResultExample\",\n            \"value\": \"0x0\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getWork\",\n      \"summary\": \"Returns the hash of the current block, the seedHash, and the boundary condition to be met ('target').\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"work\",\n        \"schema\": {\n          \"title\": \"getWorkResults\",\n          \"type\": \"array\",\n          \"items\": [\n            {\n              \"$ref\": \"#/components/schemas/PowHash\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/SeedHash\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/Difficulty\"\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"name\": \"eth_hashrate\",\n      \"summary\": \"Returns the number of hashes per second that the node is mining with.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"hashesPerSecond\",\n        \"description\": \"Integer of the number of hashes per second\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Integer\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"hashrateExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"hashrateResultExample\",\n            \"value\": \"0x0\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_mining\",\n      \"summary\": \"Returns true if client is actively mining new blocks.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"mining\",\n        \"description\": \"Whether or not the client is mining\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"miningExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"miningResultExample\",\n            \"value\": false\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_newBlockFilter\",\n      \"summary\": \"Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges.\",\n      \"params\": [],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/FilterId\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"newBlockFilterExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"newBlockFilterResultExample\",\n            \"value\": \"0x5e2fce0043c0ac9f1772609c2fc30d2c\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_newFilter\",\n      \"summary\": \"Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/Filter\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"filterId\",\n        \"description\": \"The filter ID for use in `eth_getFilterChanges`\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Integer\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"newFilterExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": {\n                \"fromBlock\": \"earliest\",\n                \"toBlock\": \"latest\",\n                \"topics\": []\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"newFilterResultExample\",\n            \"value\": \"0xe921d6875bf20243493e19945c503dc0\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getFilterChanges\",\n      \"summary\": \"Polling method for a filter, which returns an array of logs which occurred since last poll.\",\n      \"params\": [\n        {\n          \"name\": \"filterId\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/FilterId\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"logResult\",\n        \"schema\": {\n          \"title\": \"logResult\",\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/components/schemas/Log\"\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getFilterChangesExample\",\n          \"params\": [\n            {\n              \"name\": \"filterId\",\n              \"value\": \"0xcf4e9670c19fc799f196f814ea8d7838\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getFilterChangesResult\",\n            \"value\": [\n              {\n                \"address\": \"0xb5a5f22694352c15b00323844ad545abb2b11028\",\n                \"blockHash\": \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\",\n                \"blockNumber\": \"0x5d12ab\",\n                \"data\": \"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000\",\n                \"logIndex\": \"0x0\",\n                \"removed\": false,\n                \"topics\": [\n                  \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n                  \"0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e\",\n                  \"0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e\"\n                ],\n                \"transactionHash\": \"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd\",\n                \"transactionIndex\": \"0x3\"\n              },\n              {\n                \"address\": \"0xe38165c9f6deb144afc9c32c206b024817e1496d\",\n                \"blockHash\": \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\",\n                \"blockNumber\": \"0x5d12ab\",\n                \"data\": \"0x0000000000000000000000000000000000000000000000000000000025c6b720\",\n                \"logIndex\": \"0x3\",\n                \"removed\": false,\n                \"topics\": [\n                  \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n                  \"0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3\",\n                  \"0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef\"\n                ],\n                \"transactionHash\": \"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153\",\n                \"transactionIndex\": \"0x5\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_getFilterLogs\",\n      \"summary\": \"Returns an array of all logs matching filter with given id.\",\n      \"params\": [\n        {\n          \"name\": \"filterId\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/FilterId\"\n          }\n        }\n      ],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/Logs\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"getFilterChangesExample\",\n          \"params\": [\n            {\n              \"name\": \"filterId\",\n              \"value\": \"0xcf4e9670c19fc799f196f814ea8d7838\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getFilterChangesResult\",\n            \"value\": [\n              {\n                \"address\": \"0xb5a5f22694352c15b00323844ad545abb2b11028\",\n                \"blockHash\": \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\",\n                \"blockNumber\": \"0x5d12ab\",\n                \"data\": \"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000\",\n                \"logIndex\": \"0x0\",\n                \"removed\": false,\n                \"topics\": [\n                  \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n                  \"0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e\",\n                  \"0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e\"\n                ],\n                \"transactionHash\": \"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd\",\n                \"transactionIndex\": \"0x3\"\n              },\n              {\n                \"address\": \"0xe38165c9f6deb144afc9c32c206b024817e1496d\",\n                \"blockHash\": \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\",\n                \"blockNumber\": \"0x5d12ab\",\n                \"data\": \"0x0000000000000000000000000000000000000000000000000000000025c6b720\",\n                \"logIndex\": \"0x3\",\n                \"removed\": false,\n                \"topics\": [\n                  \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n                  \"0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3\",\n                  \"0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef\"\n                ],\n                \"transactionHash\": \"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153\",\n                \"transactionIndex\": \"0x5\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_uninstallFilter\",\n      \"summary\": \"Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additionally Filters timeout when they aren't requested with eth_getFilterChanges for a period of time.\",\n      \"params\": [\n        {\n          \"name\": \"filterId\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/FilterId\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"filterUninstalledSuccess\",\n        \"description\": \"returns true if the filter was successfully uninstalled, false otherwise.\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"uninstallFilterExample\",\n          \"params\": [\n            {\n              \"name\": \"FilterId\",\n              \"value\": \"0xe921d6875bf20243493e19945c503dc0\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"uninstallFilterResultExample\",\n            \"value\": true\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_newPendingTransactionFilter\",\n      \"summary\": \"Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges.\",\n      \"params\": [],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/FilterId\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"newPendingTransactionFilterExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"newPendingTransactionFilterResultExample\",\n            \"value\": \"0xe921d6875bf20243493e19945c503dc0\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_sendRawTransaction\",\n      \"summary\": \"Creates new message call transaction or a contract creation for signed transactions.\",\n      \"params\": [\n        {\n          \"name\": \"signedTransactionData\",\n          \"required\": true,\n          \"description\": \"The signed transaction data\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Bytes\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"transactionHash\",\n        \"description\": \"The transaction hash, or the zero hash if the transaction is not yet available.\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Keccak\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"sendRawTransactionExample\",\n          \"params\": [\n            {\n              \"name\": \"signedTransactionData\",\n              \"value\": \"0xf86a018203e882520894f17f52151ebef6c7334fad080c5704d77216b732896c6b935b8bbd400000801ba093129415f03b4794fd1512e79ee7f097e4271f66721020f8407aac92179893a5a0451b875d89721ec98be55201092980b0a87bb1c48507fccb86da713596b2a09e\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"sendRawTransactionResultExample\",\n            \"value\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_submitHashrate\",\n      \"deprecated\": true,\n      \"summary\": \"Used for submitting mining hashrate.\",\n      \"params\": [\n        {\n          \"name\": \"hashRate\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/DataWord\"\n          }\n        },\n        {\n          \"name\": \"id\",\n          \"required\": true,\n          \"description\": \"String identifying the client\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/DataWord\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"submitHashRateSuccess\",\n        \"description\": \"whether of not submitting went through successfully\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"submitHashrateExample\",\n          \"params\": [\n            {\n              \"name\": \"hashrate\",\n              \"value\": \"0x0000000000000000000000000000000000000000000000000000000000500000\"\n            },\n            {\n              \"name\": \"id\",\n              \"value\": \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"submitHashrateResultExample\",\n            \"value\": true\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_submitWork\",\n      \"summary\": \"Used for submitting a proof-of-work solution.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/Nonce\"\n        },\n        {\n          \"name\": \"powHash\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/PowHash\"\n          }\n        },\n        {\n          \"name\": \"mixHash\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/MixHash\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"solutionValid\",\n        \"description\": \"returns true if the provided solution is valid, otherwise false.\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"submitWorkExample\",\n          \"params\": [\n            {\n              \"name\": \"nonceExample\",\n              \"description\": \"example of a number only used once\",\n              \"value\": \"0x0000000000000001\"\n            },\n            {\n              \"name\": \"powHashExample\",\n              \"description\": \"proof of work to submit\",\n              \"value\": \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\"\n            },\n            {\n              \"name\": \"mixHashExample\",\n              \"description\": \"the mix digest example\",\n              \"value\": \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"solutionInvalidExample\",\n            \"description\": \"this example should return `false` as it is not a valid pow to submit\",\n            \"value\": false\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_syncing\",\n      \"summary\": \"Returns an object with data about the sync status or false.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"syncing\",\n        \"schema\": {\n          \"title\": \"isSyncingResult\",\n          \"oneOf\": [\n            {\n              \"title\": \"syncingData\",\n              \"description\": \"An object with sync status data\",\n              \"type\": \"object\",\n              \"properties\": {\n                \"startingBlock\": {\n                  \"title\": \"syncingDataStartingBlock\",\n                  \"description\": \"Block at which the import started (will only be reset, after the sync reached his head)\",\n                  \"$ref\": \"#/components/schemas/Integer\"\n                },\n                \"currentBlock\": {\n                  \"title\": \"syncingDataCurrentBlock\",\n                  \"description\": \"The current block, same as eth_blockNumber\",\n                  \"$ref\": \"#/components/schemas/Integer\"\n                },\n                \"highestBlock\": {\n                  \"title\": \"syncingDataHighestBlock\",\n                  \"description\": \"The estimated highest block\",\n                  \"$ref\": \"#/components/schemas/Integer\"\n                },\n                \"knownStates\": {\n                  \"title\": \"syncingDataKnownStates\",\n                  \"description\": \"The known states\",\n                  \"$ref\": \"#/components/schemas/Integer\"\n                },\n                \"pulledStates\": {\n                  \"title\": \"syncingDataPulledStates\",\n                  \"description\": \"The pulled states\",\n                  \"$ref\": \"#/components/schemas/Integer\"\n                }\n              }\n            },\n            {\n              \"type\": \"boolean\"\n            }\n          ]\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"syncingExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"syncingResultExample\",\n            \"value\": false\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"eth_subscribe\",\n      \"summary\": \"If successful this returns the subscription id. Subscriptions are creates with a regular RPC call with eth_subscribe as method and the subscription name as first parameter. \",\n      \"params\": [\n        {\n          \"name\": \"subscriptioName\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"optionalArguments \",\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"subscribeExample\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    {\n      \"name\": \"eth_unsubscribe\",\n      \"summary\": \"Subscriptions are cancelled with a regular RPC call with eth_unsubscribe as method and the subscription id as first parameter.\",\n      \"params\": [\n        {\n          \"name\": \"subscriptionId\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"unsubscribeExample\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      }\n    },\n    {\n      \"name\": \"ibft_discardValidatorVote\",\n      \"summary\": \"Discards a proposal to add or remove a validator with the specified address.\",\n      \"params\": [\n        {\n          \"name\": \"address\",\n          \"description\": \"Address of proposed validator.\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"discardValidatorVoteResult\",\n        \"description\": \"Indicates if the proposal is discarded\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"discardValidatorVoteExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": \"0x42eb768f2244c8811c63729a21a3569731535f06\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"discardValidatorVoteResultExample\",\n            \"value\": true\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"ibft_getPendingVotes\",\n      \"summary\": \"Returns votes cast in the current epoch.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getPendingVotesResult\",\n        \"description\": \"Map of strings to booleans - map of account addresses to corresponding boolean values indicating the vote for each account; if true, the vote is to add a validator. If false, the proposal is to remove a validator.\",\n        \"schema\": {\n          \"type\": \"object\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getPendingVotesExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"accountRangeExample\",\n            \"value\": {\n              \"0xef1bfb6a12794615c9b0b5a21e6741f01e570185\": true,\n              \"0x42d4287eac8078828cf5f3486cfe601a275a49a5\": true\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"ibft_getSignerMetrics\",\n      \"summary\": \"Provides the following validator metrics for the specified range:\",\n      \"description\": \"Number of blocks from each validator\\nBlock number of the last block proposed by each validator (if any proposed in the specified range)\\nAll validators present in the last block of the range\",\n      \"params\": [\n        {\n          \"name\": \"fromBlockNumber\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        },\n        {\n          \"name\": \"toBlockNumber\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getSignerMetricsResult\",\n        \"description\": \"list of validator objects\",\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"address\": {\n                \"type\": \"string\"\n              },\n              \"proposedBlockCount\": {\n                \"type\": \"string\"\n              },\n              \"lastProposedBlockNumber\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"discardValidatorVoteExample\",\n          \"params\": [\n            {\n              \"name\": \"fromBlockNumber\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"toBlockNumber\",\n              \"value\": \"100\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"discardValidatorVoteResultExample\",\n            \"value\": [\n              {\n                \"address\": \"0x7ffc57839b00206d1ad20c69a1981b489f772031\",\n                \"proposedBlockCount\": \"0x21\",\n                \"lastProposedBlockNumber\": \"0x61\"\n              },\n              {\n                \"address\": \"0x42eb768f2244c8811c63729a21a3569731535f06\",\n                \"proposedBlockCount\": \"0x21\",\n                \"lastProposedBlockNumber\": \"0x63\"\n              },\n              {\n                \"address\": \"0xb279182d99e65703f0076e4812653aab85fca0f0\",\n                \"proposedBlockCount\": \"0x21\",\n                \"lastProposedBlockNumber\": \"0x62\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"ibft_getValidatorsByBlockHash\",\n      \"summary\": \"Lists the validators defined in the specified block.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockHash\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"getValidatorsByBlockHashResult\",\n        \"description\": \"List of validator addresses.\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Addresses\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getValidatorsByBlockHashExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockHash\",\n              \"value\": \"0x98b2ddb5106b03649d2d337d42154702796438b3c74fd25a5782940e84237a48\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getValidatorsByBlockHashResultExample\",\n            \"value\": [\n              \"0x42d4287eac8078828cf5f3486cfe601a275a49a5\",\n              \"0xb1b2bc9582d2901afdc579f528a35ca41403fa85\",\n              \"0xef1bfb6a12794615c9b0b5a21e6741f01e570185\"\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"ibft_getValidatorsByBlockNumber\",\n      \"summary\": \"Lists the validators defined in the specified block.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"getValidatorsByBlockNumberResult\",\n        \"description\": \"List of validator addresses.\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Addresses\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getValidatorsByBlockNumberExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"0x09\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getValidatorsByBlockNumberResultExample\",\n            \"value\": [\n              \"0x42d4287eac8078828cf5f3486cfe601a275a49a5\",\n              \"0xb1b2bc9582d2901afdc579f528a35ca41403fa85\",\n              \"0xef1bfb6a12794615c9b0b5a21e6741f01e570185\"\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"ibft_proposeValidatorVote\",\n      \"summary\": \"Proposes to add or remove a validator with the specified address.\",\n      \"params\": [\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        },\n        {\n          \"name\": \"proposal\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"boolean\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"proposeValidatorVoteResult\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getValidatorsByBlockNumberExample\",\n          \"params\": [\n            {\n              \"name\": \"address\",\n              \"value\": \"42d4287eac8078828cf5f3486cfe601a275a49a5\"\n            },\n            {\n              \"name\": \"proposal\",\n              \"value\": true\n            }\n          ],\n          \"result\": {\n            \"name\": \"getValidatorsByBlockNumberResultExample\",\n            \"value\": true\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"net_enode\",\n      \"summary\": \"Returns the enode URL.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"enodeResult\",\n        \"description\": \"Enode URL of the node.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"enodeExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"enodeResultExample\",\n            \"value\": \"enode://6a63160d0ccef5e4986d270937c6c8d60a9a4d3b25471cda960900d037c61988ea14da67f69dbfb3497c465d0de1f001bb95598f74b68a39a5156a608c42fa1b@127.0.0.1:30303\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"net_listening\",\n      \"summary\": \"Whether the client is actively listening for network connections.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"listeningResult\",\n        \"description\": \"Indicates if the client is actively listening for network connections\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"listeningExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"listeningResultExample\",\n            \"value\": true\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"net_peerCount\",\n      \"summary\": \"Returns the number of peers currently connected to the client.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"peerCountResult\",\n        \"description\": \"Mumber of connected peers in hexadecimal\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"peerCountExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"peerCountResultExample\",\n            \"value\": \"0x5\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"net_services\",\n      \"summary\": \"Returns enabled services (for example, jsonrpc) and the host and port for each service.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"servicesResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"jsonrpc\": {\n              \"$ref\": \"#/components/schemas/HostPort\"\n            },\n            \"p2p\": {\n              \"$ref\": \"#/components/schemas/HostPort\"\n            },\n            \"metrics\": {\n              \"$ref\": \"#/components/schemas/HostPort\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"servicesExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"servicesResultExample\",\n            \"value\": {\n              \"jsonrpc\": {\n                \"host\": \"127.0.0.1\",\n                \"port\": \"8545\"\n              },\n              \"p2p\": {\n                \"host\": \"127.0.0.1\",\n                \"port\": \"30303\"\n              },\n              \"metrics\": {\n                \"host\": \"127.0.0.1\",\n                \"port\": \"9545\"\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"net_version\",\n      \"summary\": \"Returns the network ID.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"versionResult\",\n        \"description\": \"hex format integer of the current chain id.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"versiontExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"versionResultExample\",\n            \"value\": \"2018\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"trace_block\",\n      \"summary\": \"Provides transaction processing of type trace for the specified block.\",\n      \"params\": [\n        {\n          \"name\": \"blockNumber\",\n          \"summary\": \"integer representing a block number or one of the string tags latest, earliest, or pending.\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"blockResult\",\n        \"description\": \"list of calls to other contracts containing one object per call, in transaction execution order\",\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"action\": {\n                \"callType\": {\n                  \"type\": \"string\"\n                },\n                \"from\": {\n                  \"type\": \"string\"\n                },\n                \"gas\": {\n                  \"type\": \"string\"\n                },\n                \"input\": {\n                  \"type\": \"string\"\n                },\n                \"to\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"blockHash\": {\n                \"type\": \"string\"\n              },\n              \"blockNumber\": {\n                \"type\": \"number\"\n              },\n              \"result\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"gasUsed\": {\n                    \"type\": \"string\"\n                  },\n                  \"output\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"subtraces\": {\n                \"type\": \"number\"\n              },\n              \"traceAddress\": {\n                \"typer\": \"object\"\n              },\n              \"transactionHash\": {\n                \"type\": \"string\"\n              },\n              \"transactionPosition\": {\n                \"type\": \"number\"\n              },\n              \"type\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"blockExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"0x6\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"blockResultExample\",\n            \"value\": {\n              \"action\": {\n                \"author\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\",\n                \"rewardType\": \"block\",\n                \"value\": \"0x1bc16d674ec80000\"\n              },\n              \"blockHash\": \"0x3947cdf661fa81e8d66bfe8d125f857112a8c2ecdaa878aab27c50fe8f4d36ef\",\n              \"blockNumber\": 6,\n              \"result\": null,\n              \"subtraces\": 0,\n              \"traceAddress\": [],\n              \"transactionHash\": null,\n              \"transactionPosition\": null,\n              \"type\": \"reward\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"trace_replayBlockTransactions\",\n      \"summary\": \"Provides transaction processing tracing per block.\",\n      \"params\": [\n        {\n          \"name\": \"blockNumber\",\n          \"summary\": \"integer representing a block number or one of the string tags latest, earliest, or pending.\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        },\n        {\n          \"name\": \"options\",\n          \"schema\": {\n            \"type\": \"array\",\n            \"description\": \"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"replayBlockTransactionsResult\",\n        \"description\": \"the trace list items in the returned transaction trace object include the revert reason.\",\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"replayBlockTransactionsExample\",\n          \"params\": [\n            {\n              \"name\": \"blockNumber\",\n              \"value\": \"0x12\"\n            },\n            {\n              \"name\": \"options\",\n              \"value\": [\n                \"trace\",\n                \"vmTrace\",\n                \"stateDiff\"\n              ]\n            }\n          ],\n          \"result\": {\n            \"name\": \"replayBlockTransactionsResultExample\",\n            \"value\": []\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_call\",\n      \"summary\": \"Invokes a private contract function locally and does not change the privacy group state.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/Transaction\"\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"callResult\",\n        \"description\": \"return value of the executed contract\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Bytes\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"replayBlockTransactionsExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"tb8NVyQqZnHNegf/3mYsyB+HEud4SPWn90rz3GoskRw=\"\n            },\n            {\n              \"name\": \"Transaction\",\n              \"value\": {\n                \"to\": \"0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13\",\n                \"data\": \"0x3fa4f245\"\n              }\n            },\n            {\n              \"name\": \"Transaction\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"replayBlockTransactionsResultExample\",\n            \"value\": \"0x0000000000000000000000000000000000000000000000000000000000000001\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_createPrivacyGroup\",\n      \"summary\": \"Creates a group of nodes.\",\n      \"params\": [\n        {\n          \"name\": \"options\",\n          \"schema\": {\n            \"description\": \"request options object with the following fields\",\n            \"properties\": {\n              \"addresses\": {\n                \"$ref\": \"#/components/schemas/Address\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"description\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"createPrivacyGroupResult\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"createPrivacyGroupExample\",\n          \"params\": [\n            {\n              \"name\": \"Group\",\n              \"value\": {\n                \"addresses\": [\n                  \"sTZpbQhcOfd9ZaFDnC00e/N2Ofv9p4/ZTBbEeVtXJ3E=\",\n                  \"quhb1pQPGN1w8ZSZSyiIfncEAlVY/M/rauSyQ5wVMRE=\"\n                ],\n                \"name\": \"Group A\",\n                \"description\": \"Description Group A\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"createPrivacyGroupResultExample\",\n            \"value\": \"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk=\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_deletePrivacyGroup\",\n      \"summary\": \"Returns the state root of the specified privacy group at the specified block.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"deletePrivacyGroupResult\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"deletePrivacyGroupExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk=\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"deletePrivacyGroupResultExample\",\n            \"value\": \"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk=\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_distributeRawTransaction\",\n      \"summary\": \"Distributes a signed, RLP encoded private transaction.\",\n      \"params\": [\n        {\n          \"name\": \"signedTransactionData\",\n          \"summary\": \"signed RLP-encoded private transaction\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Bytes\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"distributeRawTransactionResult\",\n        \"description\": \"the enclave key is a pointer to the private transaction in Orion.\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Keccak\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"distributeRawTransactionExample\",\n          \"params\": [\n            {\n              \"name\": \"signedTransactionData\",\n              \"value\": \"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"distributeRawTransactionResultExample\",\n            \"value\": \"0xfd0d90ab824574abc19c0776ca0210e764561d0ef6d621f2bbbea316eccfe56b\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_findPrivacyGroup\",\n      \"summary\": \"Returns a list of privacy groups containing only the listed members\",\n      \"params\": [\n        {\n          \"name\": \"members\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"findPrivacyGroupResult\",\n        \"summary\": \"privacyGroupObjects containing only the specified members;\",\n        \"description\": \"privacy group objects containing only the specified members; privacy groups are EEA-compliant or Besu-extended with types:\\nLEGACY for EEA-compliant groups.\\nPANTHEON for Besu-extended groups.\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"items\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"type\": \"string\"\n            },\n            {\n              \"name\": \"description\",\n              \"type\": \"string\"\n            },\n            {\n              \"name\": \"type\",\n              \"type\": \"string\"\n            },\n            {\n              \"name\": \"members\",\n              \"type\": \"object\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          ]\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"findPrivacyGroupExample\",\n          \"params\": [\n            {\n              \"name\": \"member1\",\n              \"value\": \"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=\"\n            },\n            {\n              \"name\": \"member2\",\n              \"value\": \"g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw=\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"findPrivacyGroupResultExample\",\n            \"value\": {\n              \"privacyGroupId\": \"GpK3ErNO0xF27T0sevgkJ3+4qk9Z+E3HtXYxcKIBKX8=\",\n              \"name\": \"Group B\",\n              \"description\": \"Description of Group B\",\n              \"type\": \"PANTHEON\",\n              \"members\": [\n                \"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=\",\n                \"g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw=\"\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_getCode\",\n      \"summary\": \"Returns the code of the private smart contract at the specified address. Compiled smart contract code is stored as a hexadecimal value.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        },\n        {\n          \"name\": \"blockNumber\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getCodeResult\",\n        \"description\": \"Code stored at the specified address\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Bytes\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getCodeExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"1lJxSIP4JOp6uRn9wYsPeWwqoOP1c4nPQjylB4FExUA=\"\n            },\n            {\n              \"name\": \"address\",\n              \"value\": \"0xeaf1c1bd00ef0bec5e39fba81740f1c5d05aa201\"\n            },\n            {\n              \"name\": \"blockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getCodeResultExample\",\n            \"value\": \"0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_getEeaTransactionCount\",\n      \"summary\": \"Returns the private transaction count for the specified account and group of sender and recipients.\",\n      \"params\": [\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        },\n        {\n          \"name\": \"sender\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"recipients\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getEeaTransactionCountResult\",\n        \"description\": \"integer representing the number of private transactions sent from the address to the specified group of sender and recipients\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Integer\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getEeaTransactionCountExample\",\n          \"params\": [\n            {\n              \"name\": \"address\",\n              \"value\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\"\n            },\n            {\n              \"name\": \"sender\",\n              \"value\": \"GGilEkXLaQ9yhhtbpBT03Me9iYa7U/mWXxrJhnbl1XY=\"\n            },\n            {\n              \"name\": \"recipients\",\n              \"value\": [\n                \"KkOjNLmCI6r+mICrC6l+XuEDjFEzQllaMQMpWLl4y1s=\",\n                \"eLb69r4K8/9WviwlfDiZ4jf97P9czyS3DkKu0QYGLjg=\"\n              ]\n            }\n          ],\n          \"result\": {\n            \"name\": \"getEeaTransactionCountResultExample\",\n            \"value\": \"0x1\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_getFilterChanges\",\n      \"summary\": \"Returns an array of logs for the specified filter for a private contract.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"filterId\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/FilterId\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getFilterChangesResult\",\n        \"description\": \"list of log objects, or an empty list if nothing has changed since the last poll\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Logs\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getFilterChangesExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"4rFldHM792LeP/e2WPkTXZedjwKuTr/KwCFTt6mBbkI=\"\n            },\n            {\n              \"name\": \"FilterId\",\n              \"value\": \"0x4a35b92809d73f4f53a2355d62125442\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getFilterChangesResultExample\",\n            \"value\": {\n              \"logIndex\": \"0x0\",\n              \"removed\": false,\n              \"blockNumber\": \"0x4d0\",\n              \"blockHash\": \"0x1c8200667a869e99b945374c37277b5ee7a7ae67943e13c82563381387553dbb\",\n              \"transactionHash\": \"0xb1966b9b372ba68952f48f3a3e78f036f5ae82ceca2de972a782d07fb88f6d88\",\n              \"transactionIndex\": \"0x0\",\n              \"address\": \"0x991cc548c154b2953cc48c02f782e1314097dfbb\",\n              \"data\": \"0x\",\n              \"topics\": [\n                \"0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410\",\n                \"0x0000000000000000000000000000000000000000000000000000000000000002\"\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_getFilterLogs\",\n      \"summary\": \"Polls the specified filter for a private contract and returns an array of changes that have occurred since the last poll.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"filterId\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/FilterId\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getFilterLogsResult\",\n        \"description\": \"list of log objects, or an empty list if nothing has changed since the last poll\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Logs\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getFilterLogsExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"4rFldHM792LeP/e2WPkTXZedjwKuTr/KwCFTt6mBbkI=\"\n            },\n            {\n              \"name\": \"FilterId\",\n              \"value\": \"0x4a35b92809d73f4f53a2355d62125442\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getFilterLogsResultExample\",\n            \"value\": [\n              {\n                \"logIndex\": \"0x0\",\n                \"removed\": false,\n                \"blockNumber\": \"0x493\",\n                \"blockHash\": \"0xd9cb3a852e1e02c95f035a2e32d57f82c10cab61faa3e8f5c010adf979bb4786\",\n                \"transactionHash\": \"0x78866dc51fdf189d8cca74f6a8fe54f172348fbd2163bbe80fa8b106cfc7deb4\",\n                \"transactionIndex\": \"0x0\",\n                \"address\": \"0x991cc548c154b2953cc48c02f782e1314097dfbb\",\n                \"data\": \"0x\",\n                \"topics\": [\n                  \"0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410\",\n                  \"0x0000000000000000000000000000000000000000000000000000000000000001\"\n                ]\n              },\n              {\n                \"logIndex\": \"0x0\",\n                \"removed\": false,\n                \"blockNumber\": \"0x4d0\",\n                \"blockHash\": \"0x1c8200667a869e99b945374c37277b5ee7a7ae67943e13c82563381387553dbb\",\n                \"transactionHash\": \"0xb1966b9b372ba68952f48f3a3e78f036f5ae82ceca2de972a782d07fb88f6d88\",\n                \"transactionIndex\": \"0x0\",\n                \"address\": \"0x991cc548c154b2953cc48c02f782e1314097dfbb\",\n                \"data\": \"0x\",\n                \"topics\": [\n                  \"0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410\",\n                  \"0x0000000000000000000000000000000000000000000000000000000000000002\"\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_getLogs\",\n      \"summary\": \"Returns an array of logs matching a specified filter object.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"filterId\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/FilterId\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getLogsResult\",\n        \"description\": \"list of log objects, or an empty list if nothing has changed since the last poll\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Logs\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getLogsExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"vGy/TZgO6y8VPMVeJAQ99MF1NaTf5ohA3TFfzoEF71k=\"\n            },\n            {\n              \"name\": \"filterId\",\n              \"value\": {\n                \"fromBlock\": \"earliest\",\n                \"toBlock\": \"latest\",\n                \"addresses\": [\n                  \"0x630c507ff633312087dc33c513b66276abcd2fc3\"\n                ],\n                \"topics\": [\n                  \"0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410\"\n                ]\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getLogsResultExample\",\n            \"value\": [\n              {\n                \"logIndex\": \"0x0\",\n                \"removed\": false,\n                \"blockNumber\": \"0x342\",\n                \"blockHash\": \"0xf5954f068fa2f2f7741281e8c753a8e92047e27ab3c4971836d2c89fab86d92b\",\n                \"transactionHash\": \"0xa9ba5cffde9d4ad8997c5c4352d5d49eeea0e9def8a4ea69991b8837c49d4e4f\",\n                \"transactionIndex\": \"0x0\",\n                \"address\": \"0x630c507ff633312087dc33c513b66276abcd2fc3\",\n                \"data\": \"0x\",\n                \"topics\": [\n                  \"0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410\",\n                  \"0x0000000000000000000000000000000000000000000000000000000000000001\"\n                ]\n              },\n              {\n                \"logIndex\": \"0x0\",\n                \"removed\": false,\n                \"blockNumber\": \"0x383\",\n                \"blockHash\": \"0x91b73a47d53e3a88d62ed091a89a4be7557ad91b552e7ff7d86bf78977d5d45d\",\n                \"transactionHash\": \"0xc2a185faf00e87434e55b7f70cc4c38be354c2128b4b96b5f5def0b54a2173ec\",\n                \"transactionIndex\": \"0x0\",\n                \"address\": \"0x630c507ff633312087dc33c513b66276abcd2fc3\",\n                \"data\": \"0x\",\n                \"topics\": [\n                  \"0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410\",\n                  \"0x0000000000000000000000000000000000000000000000000000000000000002\"\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_getPrivacyPrecompileAddress\",\n      \"summary\": \"Returns the address of the privacy precompiled contract. The address is derived and based on the value of the privacy-flexible-groups-enabled option.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getPrivacyPrecompileAddressResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Address\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getPrivacyPrecompileAddressExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getPrivacyPrecompileAddressResultExample\",\n            \"value\": \"0x000000000000000000000000000000000000007e\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_getPrivateTransaction\",\n      \"summary\": \"Returns the private transaction if you are a participant, otherwise, null.\",\n      \"params\": [\n        {\n          \"name\": \"transaction\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/TransactionHash\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"PrivateTransaction\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Transaction\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getPrivateTransactionExample\",\n          \"params\": [\n            {\n              \"name\": \"transcation\",\n              \"value\": \"0x623c4ce5275a87b91f4f1c521012d39ca19311c787bde405490f4c0426a71498\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getPrivateTransactionResultExample\",\n            \"value\": {\n              \"from\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\",\n              \"gas\": \"0x2dc6c0\",\n              \"gasPrice\": \"0x0\",\n              \"hash\": \"0x623c4ce5275a87b91f4f1c521012d39ca19311c787bde405490f4c0426a71498\",\n              \"input\": \"0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610221806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633fa4f2451461005c5780636057361d1461008757806367e404ce146100b4575b600080fd5b34801561006857600080fd5b5061007161010b565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100b260048036038101908080359060200190929190505050610115565b005b3480156100c057600080fd5b506100c96101cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600254905090565b7fc9db20adedc6cf2b5d25252b101ab03e124902a73fcb12b753f3d1aaa2d8f9f53382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a18060028190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a723058208efaf938851fb2d235f8bf9a9685f149129a30fe0f4b20a6c1885dc02f639eba0029\",\n              \"nonce\": \"0x0\",\n              \"to\": null,\n              \"value\": \"0x0\",\n              \"v\": \"0xfe8\",\n              \"r\": \"0x654a6a9663ca70bb13e27cca14b3777cc92da184e19a151cdeef2ccbbd5c6405\",\n              \"s\": \"0x5dd4667b020c8a5af7ae28d4c3126f8dcb1187f49dcf0de9d7a39b1651892eef\",\n              \"privateFrom\": \"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=\",\n              \"privateFor\": [\n                \"g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw=\"\n              ],\n              \"restriction\": \"restricted\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_getTransactionCount\",\n      \"summary\": \"Returns the private transaction count for specified account and privacy group.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"integerPrivateTransactions\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Integer\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionCountExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\"\n            },\n            {\n              \"name\": \"address\",\n              \"value\": \"kAbelwaVW7okoEn1+okO+AbA4Hhz/7DaCOWVQz9nx5M=\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTransactionCountResultExample\",\n            \"value\": \"0x1\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_getTransactionReceipt\",\n      \"summary\": \"Returns information about the private transaction after mining the transaction. Receipts for pending transactions are not available.\",\n      \"params\": [\n        {\n          \"name\": \"transaction\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Transaction\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getTransactionReceiptResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"contractAddress\": {\n              \"type\": \"string\"\n            },\n            \"from\": {\n              \"type\": \"string\"\n            },\n            \"output\": {\n              \"type\": \"string\"\n            },\n            \"commitmentHash\": {\n              \"type\": \"string\"\n            },\n            \"transactionHash\": {\n              \"type\": \"string\"\n            },\n            \"privateFrom\": {\n              \"type\": \"string\"\n            },\n            \"privacyGroupId\": {\n              \"type\": \"string\"\n            },\n            \"status\": {\n              \"type\": \"string\"\n            },\n            \"logs\": {\n              \"$ref\": \"#/components/schemas/Logs\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionReceiptExample\",\n          \"params\": [\n            {\n              \"name\": \"transaction\",\n              \"value\": \"0xf3ab9693ad92e277bf785e1772f29fb1864904bbbe87b0470455ddb082caab9d\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTransactionReceiptResultExample\",\n            \"value\": {\n              \"contractAddress\": \"0x493b76031593402e24e16faa81f677b58e2d53f3\",\n              \"from\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\",\n              \"output\": \"0x6080604052600436106049576000357c010000000000000000000000000000000000000000000\\n                0000000000000900463ffffffff1680633fa4f24514604e57806355241077146076575b600080fd5b3480156059\\n                57600080fd5b50606060a0565b6040518082815260200191505060405180910390f35b348015608157600080fd5b\\n                50609e6004803603810190808035906020019092919050505060a6565b005b60005481565b8060008190555050560\\n                0a165627a7a723058202bdbba2e694dba8fff33d9d0976df580f57bff0a40e25a46c398f8063b4c00360029\",\n              \"commitmentHash\": \"0x79b9e6b0856db398ad7dc208f15b1d38c0c0b0c5f99e4a443a2c5a85510e96a5\",\n              \"transactionHash\": \"0x36219e92b5f53d4150aa9ef7d2d793118cced523de6724100da5b534e3ceb4b8\",\n              \"privateFrom\": \"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=\",\n              \"privacyGroupId\": \"cD636RZlcqVSpoxT/ExbkWQfBO7kPAZO0QlWHErNSL8=\",\n              \"status\": \"0x1\",\n              \"logs\": []\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_newFilter\",\n      \"summary\": \"Creates a log filter for a private contract. To poll for logs associated with the created filter, use priv_getFilterChanges. To get all logs associated with the filter, use priv_getFilterLogs.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"filterOptions\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"fromBlock\": {\n                \"type\": \"string\"\n              },\n              \"toBlock\": {\n                \"type\": \"string\"\n              },\n              \"addresses\": {\n                \"$ref\": \"#/components/schemas/Addresses\"\n              },\n              \"topics\": {\n                \"$ref\": \"#/components/schemas/Topics\"\n              }\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"newFilterResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Bytes\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"newFilterExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"4rFldHM792LeP/e2WPkTXZedjwKuTr/KwCFTt6mBbkI=\"\n            },\n            {\n              \"name\": \"filterOptions\",\n              \"value\": {\n                \"fromBlock\": \"earliest\",\n                \"toBlock\": \"latest\",\n                \"addresses\": [\n                  \"0x991cc548c154b2953cc48c02f782e1314097dfbb\"\n                ],\n                \"topics\": [\n                  \"0x85bea11d86cefb165374e0f727bacf21dc2f4ea816493981ecf72dcfb212a410\"\n                ]\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"newFilterResultExample\",\n            \"value\": \"0x4a35b92809d73f4f53a2355d62125442\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_uninstallFilter\",\n      \"summary\": \"Uninstalls a filter for a private contract with the specified ID. When a filter is no longer required, call this method.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"filterId\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Bytes\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"uninstallFilterResult\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"uninstallFilterExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"4rFldHM792LeP/e2WPkTXZedjwKuTr/KwCFTt6mBbkI=\"\n            },\n            {\n              \"name\": \"filterId\",\n              \"value\": \"0x4a35b92809d73f4f53a2355d62125442\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"uninstallFilterResultExample\",\n            \"value\": true\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"priv_debugGetStateRoot\",\n      \"summary\": \"Returns the state root of the specified privacy group at the specified block.\",\n      \"params\": [\n        {\n          \"name\": \"privacyGroupId\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"blockNumber\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"debugGetStateRootResult\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"debugGetStateRootExample\",\n          \"params\": [\n            {\n              \"name\": \"privacyGroupId\",\n              \"value\": \"xJdxvWOEmrs2MCkKWlgArTzWIXFfU/tmVxI3EKssVTk=\"\n            },\n            {\n              \"name\": \"blockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"debugGetStateRootResultExample\",\n            \"value\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"txpool_besuPendingTransactions\",\n      \"summary\": \"Lists pending transactions that match the supplied filter conditions.\",\n      \"params\": [\n        {\n          \"name\": \"numResults\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Integer\"\n          }\n        },\n        {\n          \"name\": \"fields\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"from\": {\n                \"type\": \"object\"\n              },\n              \"gas\": {\n                \"type\": \"object\"\n              },\n              \"nonce\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"besuPendingTransactionsResult\",\n        \"summary\": \"details of the pending transaction\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TxTransaction\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"besuPendingTransactionsExample\",\n          \"params\": [\n            {\n              \"name\": \"numResults\",\n              \"value\": 2\n            },\n            {\n              \"name\": \"fields\",\n              \"value\": {\n                \"from\": {\n                  \"eq\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\"\n                },\n                \"gas\": {\n                  \"lt\": \"0x5209\"\n                },\n                \"nonce\": {\n                  \"gt\": \"0x1\"\n                }\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"besuPendingTransactionsResultExample\",\n            \"value\": {\n              \"from\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\",\n              \"gas\": \"0x5208\",\n              \"gasPrice\": \"0xab5d04c00\",\n              \"hash\": \"0xb7b2f4306c1c228ec94043da73b582594007091a7dfe024b1f8d6d772284e54b\",\n              \"input\": \"0x\",\n              \"nonce\": \"0x2\",\n              \"to\": \"0xf8be4ebda7f62d79a665294ec1263bfdb59aabf2\",\n              \"value\": \"0x0\",\n              \"v\": \"0xfe8\",\n              \"r\": \"0x5beb711e652c6cf0a589d3cea904eefc4f45ce4372652288701d08cc4412086d\",\n              \"s\": \"0x3af14a56e63aa5fb7dcb444a89708363a9d2c1eba1f777c67690288415080ded\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"txpool_besuStatistics\",\n      \"summary\": \"Lists statistics about the node transaction pool.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"besuStatisticsResult\",\n        \"summary\": \"transaction pool statistics\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"items\": [\n            {\n              \"name\": \"maxSize\",\n              \"type\": \"number\"\n            },\n            {\n              \"name\": \"localCount\",\n              \"type\": \"number\"\n            },\n            {\n              \"name\": \"remoteCount\",\n              \"type\": \"number\"\n            }\n          ]\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"besuStatisticsExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"besuStatisticsResultExample\",\n            \"value\": {\n              \"maxSize\": 4096,\n              \"localCount\": 0,\n              \"remoteCount\": 0\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"txpool_besuTransactions\",\n      \"summary\": \"Lists transactions in the node transaction pool.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"besuTransactionsResult\",\n        \"summary\": \"list of transactions\",\n        \"schema\": {\n          \"title\": \"transactions\",\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"hash\": {\n                \"$ref\": \"#/components/schemas/TransactionHash\"\n              },\n              \"isReceivedFromLocalSource\": {\n                \"type\": \"boolean\"\n              },\n              \"addedToPoolAt\": {\n                \"$ref\": \"#/components/schemas/timestamp\"\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"besuTransactionsExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"besuTransactionsResultExample\",\n            \"value\": [\n              {\n                \"hash\": \"0x8a66830098be4006a3f63a03b6e9b67aa721e04bd6b46d420b8f1937689fb4f1\",\n                \"isReceivedFromLocalSource\": true,\n                \"addedToPoolAt\": \"2019-03-21T01:35:50.911Z\"\n              },\n              {\n                \"hash\": \"0x41ee803c3987ceb5bcea0fad7a76a8106a2a6dd654409007d9931032ea54579b\",\n                \"isReceivedFromLocalSource\": true,\n                \"addedToPoolAt\": \"2019-03-21T01:36:00.374Z\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  ],\n  \"components\": {\n    \"schemas\": {\n      \"TransactionWithSender\": {\n        \"title\": \"Transaction object with sender\",\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"required\": [\n              \"from\"\n            ],\n            \"properties\": {\n              \"from\": {\n                \"title\": \"from\",\n                \"$ref\": \"#/components/schemas/Address\"\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/Transaction\"\n          }\n        ]\n      },\n      \"HostPort\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"host\": {\n            \"type\": \"string\"\n          },\n          \"port\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"TraceObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"gas\": {\n            \"type\": \"number\"\n          },\n          \"failed\": {\n            \"type\": \"boolean\"\n          },\n          \"returnValue\": {\n            \"type\": \"string\"\n          },\n          \"structLogs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"pc\": {\n                  \"type\": \"number\"\n                },\n                \"op\": {\n                  \"type\": \"string\"\n                },\n                \"gas\": {\n                  \"type\": \"number\"\n                },\n                \"gasCost\": {\n                  \"type\": \"number\"\n                },\n                \"depth\": {\n                  \"type\": \"number\"\n                },\n                \"stack\": {\n                  \"type\": \"object\"\n                },\n                \"memory\": {\n                  \"type\": \"object\"\n                },\n                \"storage\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"timestamp\": {\n        \"title\": \"blockTimeStamp\",\n        \"type\": \"string\",\n        \"description\": \"The unix timestamp for when the block was collated\"\n      },\n      \"Uint\": {\n        \"title\": \"hex encoded unsigned integer\",\n        \"type\": \"string\",\n        \"pattern\": \"^0x[0-9a-f]+$\"\n      },\n      \"ProofNode\": {\n        \"title\": \"proofNode\",\n        \"description\": \"An individual node used to prove a path down a merkle-patricia-tree\",\n        \"$ref\": \"#/components/schemas/Bytes\"\n      },\n      \"StorageProofKey\": {\n        \"title\": \"storageProofKey\",\n        \"description\": \"The key used to get the storage slot in its account tree.\",\n        \"$ref\": \"#/components/schemas/Integer\"\n      },\n      \"StorageProof\": {\n        \"title\": \"storageProofSet\",\n        \"type\": \"array\",\n        \"description\": \"Current block header PoW hash.\",\n        \"items\": {\n          \"title\": \"storageProof\",\n          \"type\": \"object\",\n          \"description\": \"Object proving a relationship of a storage value to an account's storageHash.\",\n          \"properties\": {\n            \"key\": {\n              \"$ref\": \"#/components/schemas/StorageProofKey\"\n            },\n            \"value\": {\n              \"title\": \"storageProofValue\",\n              \"description\": \"The value of the storage slot in its account tree\",\n              \"$ref\": \"#/components/schemas/Integer\"\n            },\n            \"proof\": {\n              \"$ref\": \"#/components/schemas/ProofNodes\"\n            }\n          }\n        }\n      },\n      \"ProofNodes\": {\n        \"title\": \"proofNodes\",\n        \"type\": \"array\",\n        \"description\": \"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/ProofNode\"\n        }\n      },\n      \"PowHash\": {\n        \"title\": \"powHash\",\n        \"description\": \"Current block header PoW hash.\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"SeedHash\": {\n        \"title\": \"seedHash\",\n        \"description\": \"The seed hash used for the DAG.\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"MixHash\": {\n        \"title\": \"mixHash\",\n        \"description\": \"The mix digest.\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"Difficulty\": {\n        \"title\": \"difficulty\",\n        \"description\": \"The boundary condition ('target'), 2^256 / difficulty.\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"FilterId\": {\n        \"title\": \"filterId\",\n        \"type\": \"string\",\n        \"description\": \"An identifier used to reference the filter.\"\n      },\n      \"BlockHash\": {\n        \"title\": \"blockHash\",\n        \"type\": \"string\",\n        \"pattern\": \"^0x[a-fA-F\\\\d]{64}$\",\n        \"description\": \"The hex representation of the Keccak 256 of the RLP encoded block\"\n      },\n      \"BlockNumber\": {\n        \"title\": \"blockNumber\",\n        \"type\": \"string\",\n        \"description\": \"The hex representation of the block's height\",\n        \"$ref\": \"#/components/schemas/Integer\"\n      },\n      \"BlockNumberTag\": {\n        \"title\": \"blockNumberTag\",\n        \"type\": \"string\",\n        \"description\": \"The optional block height description\",\n        \"enum\": [\n          \"earliest\",\n          \"latest\",\n          \"pending\"\n        ]\n      },\n      \"BlockOrNull\": {\n        \"title\": \"blockOrNull\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Block\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"IntegerOrNull\": {\n        \"title\": \"integerOrNull\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Integer\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"AddressOrNull\": {\n        \"title\": \"addressOrNull\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Address\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"Receipt\": {\n        \"title\": \"receipt\",\n        \"type\": \"object\",\n        \"description\": \"The receipt of a transaction\",\n        \"required\": [\n          \"blockHash\",\n          \"blockNumber\",\n          \"contractAddress\",\n          \"cumulativeGasUsed\",\n          \"from\",\n          \"gasUsed\",\n          \"logs\",\n          \"logsBloom\",\n          \"to\",\n          \"transactionHash\",\n          \"transactionIndex\"\n        ],\n        \"properties\": {\n          \"blockHash\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          },\n          \"blockNumber\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          },\n          \"contractAddress\": {\n            \"title\": \"ReceiptContractAddress\",\n            \"description\": \"The contract address created, if the transaction was a contract creation, otherwise null\",\n            \"$ref\": \"#/components/schemas/AddressOrNull\"\n          },\n          \"cumulativeGasUsed\": {\n            \"title\": \"ReceiptCumulativeGasUsed\",\n            \"description\": \"The gas units used by the transaction\",\n            \"$ref\": \"#/components/schemas/Integer\"\n          },\n          \"from\": {\n            \"$ref\": \"#/components/schemas/From\"\n          },\n          \"gasUsed\": {\n            \"title\": \"ReceiptGasUsed\",\n            \"description\": \"The total gas used by the transaction\",\n            \"$ref\": \"#/components/schemas/Integer\"\n          },\n          \"logs\": {\n            \"title\": \"logs\",\n            \"type\": \"array\",\n            \"description\": \"An array of all the logs triggered during the transaction\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Log\"\n            }\n          },\n          \"logsBloom\": {\n            \"$ref\": \"#/components/schemas/BloomFilter\"\n          },\n          \"to\": {\n            \"$ref\": \"#/components/schemas/To\"\n          },\n          \"transactionHash\": {\n            \"$ref\": \"#/components/schemas/TransactionHash\"\n          },\n          \"transactionIndex\": {\n            \"$ref\": \"#/components/schemas/TransactionIndex\"\n          },\n          \"postTransactionState\": {\n            \"title\": \"ReceiptPostTransactionState\",\n            \"description\": \"The intermediate stateRoot directly after transaction execution.\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"status\": {\n            \"title\": \"ReceiptStatus\",\n            \"description\": \"Whether or not the transaction threw an error.\",\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"BloomFilter\": {\n        \"title\": \"bloomFilter\",\n        \"type\": \"string\",\n        \"description\": \"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series\"\n      },\n      \"Log\": {\n        \"title\": \"log\",\n        \"type\": \"object\",\n        \"description\": \"An indexed event generated during a transaction\",\n        \"properties\": {\n          \"address\": {\n            \"title\": \"LogAddress\",\n            \"description\": \"Sender of the transaction\",\n            \"$ref\": \"#/components/schemas/Address\"\n          },\n          \"blockHash\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          },\n          \"blockNumber\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          },\n          \"data\": {\n            \"title\": \"LogData\",\n            \"description\": \"The data/input string sent along with the transaction\",\n            \"$ref\": \"#/components/schemas/Bytes\"\n          },\n          \"logIndex\": {\n            \"title\": \"LogIndex\",\n            \"description\": \"The index of the event within its transaction, null when its pending\",\n            \"$ref\": \"#/components/schemas/Integer\"\n          },\n          \"removed\": {\n            \"title\": \"logIsRemoved\",\n            \"description\": \"Whether or not the log was orphaned off the main chain\",\n            \"type\": \"boolean\"\n          },\n          \"topics\": {\n            \"$ref\": \"#/components/schemas/Topics\"\n          },\n          \"transactionHash\": {\n            \"$ref\": \"#/components/schemas/TransactionHash\"\n          },\n          \"transactionIndex\": {\n            \"$ref\": \"#/components/schemas/TransactionIndex\"\n          }\n        }\n      },\n      \"Logs\": {\n        \"title\": \"logs\",\n        \"type\": \"array\",\n        \"description\": \"An array of all the logs triggered during the transaction\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Log\"\n        }\n      },\n      \"Topics\": {\n        \"title\": \"LogTopics\",\n        \"description\": \"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.\",\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Topic\"\n        }\n      },\n      \"Topic\": {\n        \"title\": \"topic\",\n        \"description\": \"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"TransactionIndex\": {\n        \"title\": \"transactionIndex\",\n        \"description\": \"The index of the transaction. null when its pending\",\n        \"$ref\": \"#/components/schemas/IntegerOrNull\"\n      },\n      \"BlockNumberOrNull\": {\n        \"title\": \"blockNumberOrNull\",\n        \"description\": \"The block number or null when its the pending block\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"BlockHashOrNull\": {\n        \"title\": \"blockHashOrNull\",\n        \"description\": \"The block hash or null when its the pending block\",\n        \"$ref\": \"#/components/schemas/KeccakOrPending\"\n      },\n      \"NonceOrNull\": {\n        \"title\": \"nonceOrNull\",\n        \"description\": \"Randomly selected number to satisfy the proof-of-work or null when its the pending block\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Nonce\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"From\": {\n        \"title\": \"From\",\n        \"description\": \"The sender of the transaction\",\n        \"$ref\": \"#/components/schemas/Address\"\n      },\n      \"To\": {\n        \"title\": \"To\",\n        \"description\": \"Destination address of the transaction. Null if it was a contract create.\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Address\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"Block\": {\n        \"title\": \"Block\",\n        \"description\": \"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"number\": {\n            \"$ref\": \"#/components/schemas/BlockNumberOrNull\"\n          },\n          \"hash\": {\n            \"$ref\": \"#/components/schemas/BlockHashOrNull\"\n          },\n          \"parentHash\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          },\n          \"nonce\": {\n            \"$ref\": \"#/components/schemas/NonceOrNull\"\n          },\n          \"sha3Uncles\": {\n            \"title\": \"blockShaUncles\",\n            \"description\": \"Keccak hash of the uncles data in the block\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"logsBloom\": {\n            \"title\": \"blockLogsBloom\",\n            \"type\": \"string\",\n            \"description\": \"The bloom filter for the logs of the block or null when its the pending block\",\n            \"pattern\": \"^0x[a-fA-F\\\\d]+$\"\n          },\n          \"transactionsRoot\": {\n            \"title\": \"blockTransactionsRoot\",\n            \"description\": \"The root of the transactions trie of the block.\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"stateRoot\": {\n            \"title\": \"blockStateRoot\",\n            \"description\": \"The root of the final state trie of the block\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"receiptsRoot\": {\n            \"title\": \"blockReceiptsRoot\",\n            \"description\": \"The root of the receipts trie of the block\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"miner\": {\n            \"$ref\": \"#/components/schemas/AddressOrNull\"\n          },\n          \"difficulty\": {\n            \"title\": \"blockDifficulty\",\n            \"type\": \"string\",\n            \"description\": \"Integer of the difficulty for this block\"\n          },\n          \"totalDifficulty\": {\n            \"title\": \"blockTotalDifficulty\",\n            \"description\": \"Integer of the total difficulty of the chain until this block\",\n            \"$ref\": \"#/components/schemas/IntegerOrNull\"\n          },\n          \"extraData\": {\n            \"title\": \"blockExtraData\",\n            \"type\": \"string\",\n            \"description\": \"The 'extra data' field of this block\"\n          },\n          \"size\": {\n            \"title\": \"blockSize\",\n            \"type\": \"string\",\n            \"description\": \"Integer the size of this block in bytes\"\n          },\n          \"gasLimit\": {\n            \"title\": \"blockGasLimit\",\n            \"type\": \"string\",\n            \"description\": \"The maximum gas allowed in this block\"\n          },\n          \"gasUsed\": {\n            \"title\": \"blockGasUsed\",\n            \"type\": \"string\",\n            \"description\": \"The total used gas by all transactions in this block\"\n          },\n          \"timestamp\": {\n            \"title\": \"blockTimeStamp\",\n            \"type\": \"string\",\n            \"description\": \"The unix timestamp for when the block was collated\"\n          },\n          \"transactions\": {\n            \"title\": \"transactionsOrHashes\",\n            \"description\": \"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter\",\n            \"type\": \"array\",\n            \"items\": {\n              \"title\": \"transactionOrTransactionHash\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Transaction\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/TransactionHash\"\n                }\n              ]\n            }\n          },\n          \"uncles\": {\n            \"title\": \"uncleHashes\",\n            \"description\": \"Array of uncle hashes\",\n            \"type\": \"array\",\n            \"items\": {\n              \"title\": \"uncleHash\",\n              \"description\": \"Block hash of the RLP encoding of an uncle block\",\n              \"$ref\": \"#/components/schemas/Keccak\"\n            }\n          }\n        }\n      },\n      \"Transaction\": {\n        \"title\": \"transaction\",\n        \"type\": \"object\",\n        \"required\": [\n          \"gas\",\n          \"gasPrice\",\n          \"nonce\"\n        ],\n        \"properties\": {\n          \"blockHash\": {\n            \"$ref\": \"#/components/schemas/BlockHashOrNull\"\n          },\n          \"blockNumber\": {\n            \"$ref\": \"#/components/schemas/BlockNumberOrNull\"\n          },\n          \"from\": {\n            \"$ref\": \"#/components/schemas/From\"\n          },\n          \"gas\": {\n            \"title\": \"transactionGas\",\n            \"type\": \"string\",\n            \"description\": \"The gas limit provided by the sender in Wei\"\n          },\n          \"gasPrice\": {\n            \"title\": \"transactionGasPrice\",\n            \"type\": \"string\",\n            \"description\": \"The gas price willing to be paid by the sender in Wei\"\n          },\n          \"hash\": {\n            \"$ref\": \"#/components/schemas/TransactionHash\"\n          },\n          \"input\": {\n            \"title\": \"transactionInput\",\n            \"type\": \"string\",\n            \"description\": \"The data field sent with the transaction\"\n          },\n          \"nonce\": {\n            \"title\": \"transactionNonce\",\n            \"description\": \"The total number of prior transactions made by the sender\",\n            \"$ref\": \"#/components/schemas/Nonce\"\n          },\n          \"to\": {\n            \"$ref\": \"#/components/schemas/To\"\n          },\n          \"transactionIndex\": {\n            \"$ref\": \"#/components/schemas/TransactionIndex\"\n          },\n          \"value\": {\n            \"title\": \"transactionValue\",\n            \"description\": \"Value of Ether being transferred in Wei\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"v\": {\n            \"title\": \"transactionSigV\",\n            \"type\": \"string\",\n            \"description\": \"ECDSA recovery id\"\n          },\n          \"r\": {\n            \"title\": \"transactionSigR\",\n            \"type\": \"string\",\n            \"description\": \"ECDSA signature r\"\n          },\n          \"s\": {\n            \"title\": \"transactionSigS\",\n            \"type\": \"string\",\n            \"description\": \"ECDSA signature s\"\n          }\n        }\n      },\n      \"Transactions\": {\n        \"title\": \"transactions\",\n        \"description\": \"An array of transactions\",\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Transaction\"\n        }\n      },\n      \"TxTransaction\": {\n        \"title\": \"transaction\",\n        \"type\": \"object\",\n        \"required\": [\n          \"gas\",\n          \"gasPrice\",\n          \"nonce\"\n        ],\n        \"properties\": {\n          \"from\": {\n            \"$ref\": \"#/components/schemas/From\"\n          },\n          \"gas\": {\n            \"title\": \"transactionGas\",\n            \"type\": \"string\",\n            \"description\": \"The gas limit provided by the sender in Wei\"\n          },\n          \"gasPrice\": {\n            \"title\": \"transactionGasPrice\",\n            \"type\": \"string\",\n            \"description\": \"The gas price willing to be paid by the sender in Wei\"\n          },\n          \"hash\": {\n            \"$ref\": \"#/components/schemas/TransactionHash\"\n          },\n          \"input\": {\n            \"title\": \"transactionInput\",\n            \"type\": \"string\",\n            \"description\": \"The data field sent with the transaction\"\n          },\n          \"nonce\": {\n            \"title\": \"transactionNonce\",\n            \"description\": \"The total number of prior transactions made by the sender\",\n            \"$ref\": \"#/components/schemas/Nonce\"\n          },\n          \"to\": {\n            \"$ref\": \"#/components/schemas/To\"\n          },\n          \"v\": {\n            \"title\": \"transactionSigV\",\n            \"type\": \"string\",\n            \"description\": \"ECDSA recovery id\"\n          },\n          \"r\": {\n            \"title\": \"transactionSigR\",\n            \"type\": \"string\",\n            \"description\": \"ECDSA signature r\"\n          },\n          \"s\": {\n            \"title\": \"transactionSigS\",\n            \"type\": \"string\",\n            \"description\": \"ECDSA signature s\"\n          }\n        }\n      },\n      \"TransactionHash\": {\n        \"title\": \"transactionHash\",\n        \"type\": \"string\",\n        \"description\": \"Keccak 256 Hash of the RLP encoding of a transaction\",\n        \"$ref\": \"#/components/schemas/Keccak\"\n      },\n      \"KeccakOrPending\": {\n        \"title\": \"keccakOrPending\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"Keccak\": {\n        \"title\": \"keccak\",\n        \"type\": \"string\",\n        \"description\": \"Hex representation of a Keccak 256 hash\",\n        \"pattern\": \"^0x[a-fA-F\\\\d]{64}$\"\n      },\n      \"Nonce\": {\n        \"title\": \"nonce\",\n        \"description\": \"A number only to be used once\",\n        \"$ref\": \"#/components/schemas/Integer\"\n      },\n      \"Null\": {\n        \"title\": \"null\",\n        \"type\": \"null\",\n        \"description\": \"Null\"\n      },\n      \"Integer\": {\n        \"title\": \"integer\",\n        \"type\": \"string\",\n        \"pattern\": \"^0x[a-fA-F0-9]+$\",\n        \"description\": \"Hex representation of the integer\"\n      },\n      \"Address\": {\n        \"title\": \"address\",\n        \"type\": \"string\",\n        \"pattern\": \"^0x[a-fA-F\\\\d]{40}$\"\n      },\n      \"Addresses\": {\n        \"title\": \"addresses\",\n        \"type\": \"array\",\n        \"description\": \"List of contract addresses from which to monitor events\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Address\"\n        }\n      },\n      \"Position\": {\n        \"title\": \"position\",\n        \"type\": \"string\",\n        \"description\": \"Hex representation of the storage slot where the variable exists\",\n        \"pattern\": \"^0x([a-fA-F0-9]?)+$\"\n      },\n      \"DataWord\": {\n        \"title\": \"dataWord\",\n        \"type\": \"string\",\n        \"description\": \"Hex representation of a 256 bit unit of data\",\n        \"pattern\": \"^0x([a-fA-F\\\\d]{64})?$\"\n      },\n      \"Bytes\": {\n        \"title\": \"bytes\",\n        \"type\": \"string\",\n        \"description\": \"Hex representation of a variable length byte array\",\n        \"pattern\": \"^0x([a-fA-F0-9]?)+$\"\n      }\n    },\n    \"contentDescriptors\": {\n      \"Addresses\": {\n        \"name\": \"addresses\",\n        \"schema\": {\n          \"type\": \"array\",\n          \"description\": \"List of addresses\",\n          \"items\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        }\n      },\n      \"Block\": {\n        \"name\": \"block\",\n        \"summary\": \"A block\",\n        \"description\": \"A block object\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Block\"\n        }\n      },\n      \"startBlock\": {\n        \"name\": \"startBlock\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockNumber\"\n        }\n      },\n      \"endBlock\": {\n        \"name\": \"endBlock\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockNumber\"\n        }\n      },\n      \"Null\": {\n        \"name\": \"Null\",\n        \"description\": \"JSON Null value\",\n        \"summary\": \"Null value\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Null\"\n        }\n      },\n      \"Signature\": {\n        \"name\": \"signature\",\n        \"summary\": \"The signature.\",\n        \"required\": true,\n        \"schema\": {\n          \"title\": \"signatureBytes\",\n          \"type\": \"string\",\n          \"description\": \"Hex representation of byte array between 2 and 65 chars long\",\n          \"pattern\": \"0x^([A-Fa-f0-9]{2}){65}$\"\n        }\n      },\n      \"GasPrice\": {\n        \"name\": \"gasPrice\",\n        \"required\": true,\n        \"schema\": {\n          \"title\": \"gasPriceResult\",\n          \"description\": \"Integer of the current gas price\",\n          \"$ref\": \"#/components/schemas/Integer\"\n        }\n      },\n      \"Transaction\": {\n        \"required\": true,\n        \"name\": \"transaction\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Transaction\"\n        }\n      },\n      \"Logbloom\": {\n        \"name\": \"log bloom\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"description\": \"log bloom index details\",\n          \"properties\": {\n            \"startBlock\": {\n              \"$ref\": \"#/components/schemas/BlockNumber\"\n            },\n            \"endBlock\": {\n              \"$ref\": \"#/components/schemas/BlockNumber\"\n            },\n            \"currentBlock\": {\n              \"$ref\": \"#/components/schemas/BlockNumber\"\n            },\n            \"requestAccepted\": {\n              \"type\": \"boolean\"\n            },\n            \"caching\": {\n              \"type\": \"boolean\"\n            }\n          }\n        }\n      },\n      \"TransactionResult\": {\n        \"name\": \"transactionResult\",\n        \"description\": \"Returns a transaction or null\",\n        \"schema\": {\n          \"title\": \"TransactionOrNull\",\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/components/schemas/Transaction\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/Null\"\n            }\n          ]\n        }\n      },\n      \"UncleCountResult\": {\n        \"name\": \"uncleCountResult\",\n        \"description\": \"The Number of total uncles in the given block\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/IntegerOrNull\"\n        }\n      },\n      \"Message\": {\n        \"name\": \"message\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Bytes\"\n        }\n      },\n      \"Filter\": {\n        \"name\": \"filter\",\n        \"required\": true,\n        \"schema\": {\n          \"title\": \"filter\",\n          \"type\": \"object\",\n          \"description\": \"A filter used to monitor the blockchain for log/events\",\n          \"properties\": {\n            \"fromBlock\": {\n              \"$ref\": \"#/components/schemas/BlockNumber\"\n            },\n            \"toBlock\": {\n              \"$ref\": \"#/components/schemas/BlockNumber\"\n            },\n            \"address\": {\n              \"title\": \"oneOrArrayOfAddresses\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Address\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Addresses\"\n                }\n              ]\n            },\n            \"topics\": {\n              \"$ref\": \"#/components/schemas/Topics\"\n            }\n          }\n        }\n      },\n      \"Address\": {\n        \"name\": \"address\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Address\"\n        }\n      },\n      \"BlockHash\": {\n        \"name\": \"blockHash\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockHash\"\n        }\n      },\n      \"Nonce\": {\n        \"name\": \"nonce\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Nonce\"\n        }\n      },\n      \"Position\": {\n        \"name\": \"key\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Position\"\n        }\n      },\n      \"Logs\": {\n        \"name\": \"logs\",\n        \"description\": \"An array of all logs matching filter with given id.\",\n        \"schema\": {\n          \"title\": \"setOfLogs\",\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/components/schemas/Log\"\n          }\n        }\n      },\n      \"FilterId\": {\n        \"name\": \"filterId\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/FilterId\"\n        }\n      },\n      \"BlockNumber\": {\n        \"name\": \"blockNumber\",\n        \"required\": true,\n        \"schema\": {\n          \"title\": \"blockNumberOrTag\",\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/components/schemas/BlockNumber\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/BlockNumberTag\"\n            }\n          ]\n        }\n      },\n      \"TransactionHash\": {\n        \"name\": \"transactionHash\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TransactionHash\"\n        }\n      }\n    }\n  }\n}"}}}